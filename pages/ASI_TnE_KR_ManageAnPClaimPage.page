<apex:page standardController="ASI_TnE_ClaimHeader__c" sidebar="false" showHeader="true" extensions="ASI_TnE_KR_ClaimManageAllCtrl" action="{!init}" docType="html-5.0" >

    <head>

        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>

        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_JQuery_V1_9_1, 'js/jquery.min.js')}" />  
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_JQuery_V1_9_1, 'js/jquery-ui.min.js')}" />  
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Angular_V1_5_7, 'JS/angular.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Bootstrap_V3_3_5, 'dist/js/bootstrap.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Ng_SimplePagination, 'ASI_JS_Ng_SimplePagination/simplePagination.js')}" />  
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_JqueryUI_V1_11_4,'jquery-ui-1.11.4.custom/jquery-ui.css')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_Bootstrap_V3_3_5, 'dist/css/bootstrap.min.css')}"/>

    </head>

    <style>

        input.inputField {
            width: auto !important;
        }

        .table td, 
        .table th {
            white-space: nowrap;
            width: 1%;
        }

        .boldRedText {
            color:red;
            font-weight:bold
        }

        .waiting-box {
            display: block;
            position: absolute; /* fixed position so it doesn't scroll */
            width: 250px;
            top: 10px; 
            background-color: #fbfbfb;
            height: 100%; width:100%; 
            opacity:0.65;
        }

        .ui-autocomplete span.hl_results {
            background-color: #ffff66;
        }

        .ui-autocomplete-loading {
            background: white url('/img/loading.gif') right center no-repeat;
        }

        .ui-autocomplete {
            height: 200px;
            overflow-y: auto;
            overflow-x: hidden;
            overflow:auto;
            padding-right: 20px;
            left: 0;
        }

        *html .ui-autocomplete {
            height: 200x;
        }

        .bs.panel-heading.div-size {
            border-radius: 10px;
        }

        .required {
            border-left: 3px solid darkred !important;  
        }

        .hide {
            display: none; 
        }

        .ui-helper-hidden-accessible { display:none !important;} 

        .ui-helper-hidden-accessible { position: absolute; left:-999em !important;}
        input:-moz-read-only { /* For Firefox */
            background-color: Gainsboro;
        }

        input:read-only {
            background-color: Gainsboro;
        }

        textarea:disabled {
            background-color: Gainsboro;
        }

        select:disabled {
            background-color: Gainsboro;
        }

        #loadingpart {
            display: block;
            position: absolute;
            top: -30;
            left: 0;
            z-index: 100;
            //width: 100vw;
            height: 100vh;
            background-color: rgba(192, 192, 192, 0.5);
            background-image: url("/img/loading.gif");
            background-repeat: no-repeat;
            background-position: 5%;
        }

        .warning-background{
            color: #fff; 
            background: #f2dede
        }        
        .btn-primary{
            margin-right: 10px;
        }
        .container{
            margin: 20px 0;
        }
    </style>

    <script type="text/javascript">

        /***************************
        VF Page for AnP Claim 
        ***************************/

        var app = angular.module("myapp", ['simplePagination']);

        app.directive('autocomplete', function(GetMasterData) {        
            var  resultList = [];
            var  multiplecache ={};
            return {
                restrict: 'E',
                replace:true,
                transclude: true, 
                template:  '<input name="autocomplete" class="inputField" type="text" ></input>',
                link: function (scope, elem, attrs) {
                    scope.$watch(attrs.object, function(value) { 
                        elem.autocomplete({
                            minLength:1,
                            source: function(request, response){

                                request.term =request.term.replace(/'/g, "\\'");
                                var queryTerm = '%' + request.term +'%';
                                var additonalQuery = '';
                                var selectQuery = '';

                                if(attrs.selection==="SalesmanName"){
                                    additonalQuery = ' Where Name like \'' + queryTerm + '\'';
                                    additonalQuery += ' AND CompanyName = \'Pernod Ricard Korea\' ';
                                    selectQuery = 'Id, Name';
                                }
                                if(attrs.selection==="CustomerName"){
                                    var isSalesUser ='{!isSalesUser}';
                                    var branchCode ='{!branchCode}';
                                    additonalQuery = ' Where Name like \'' + queryTerm + '\'';
                                    additonalQuery += ' AND (RecordType.DeveloperName = \'ASI_CRM_KR_Venue\' OR RecordType.DeveloperName = \'ASI_CRM_KR_Wholesaler\' '+ ') AND ASI_CRM_CN_Inactive_Flag__c = false';
                                    selectQuery = 'Id, Name';
                                    /*if(isSalesUser==='true'){
                                                additonalQuery +=' AND ASI_CRM_KR_Branch__c =\''+branchCode+'\'';
                                            }*/
                                    selectQuery = 'Id, Name, ASI_CRM_CN_Address__c';
                                }  
                                if(attrs.selection==="SubbrandName"){
                                    additonalQuery = ' Where Name like \'' + queryTerm + '\'';
                                    additonalQuery += ' AND ASI_KOR_Active_for_A_P__c = True ';
                                    selectQuery = 'Id, Name';
                                }
                                if(attrs.selection==="PromotionCode"){
                                    additonalQuery = ' Where Name like \'' + queryTerm + '\'';
                                    additonalQuery += ' AND RecordType.DeveloperName = \'ASI_MFM_KR_Plan_Read_Only\' AND ASI_MFM_Status__c =\'Approved\' ';
                                    selectQuery = 'Id, Name';
                                }
                                if(attrs.selection=="WhereVenueName"){
                                    var isSalesUser ='{!isSalesUser}';
                                    var branchCode ='{!branchCode}';
                                    additonalQuery = ' Where Name like \'' + queryTerm + '\'';
                                    additonalQuery += ' AND RecordType.DeveloperName = \'ASI_CRM_KR_Venue\' AND ASI_CRM_CN_Inactive_Flag__c = false';
                                    selectQuery = 'Id, Name';
                                    /*if(isSalesUser==='true'){
                                                additonalQuery +=' AND ASI_CRM_KR_Branch__c =\''+branchCode+'\'';
                                            }*/
                                    // Added by 2107-10-13 Linus@introv
                                    selectQuery = 'Id, Name, ASI_CRM_CN_Address__c';
                                }
                                if(attrs.selection==="GnHForm"){
                                    console.log('Finding GnH Form');
                                    additonalQuery = ' Where (((Name like \'' + queryTerm + '\'' + ' OR ASI_GnH_Applicant__r.Name like \'' + queryTerm + '\')'  + ' AND ASI_GnH_Applicant__c = \'' + "{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_Payee__c}" + '\')'+ ' OR ((Name like \'' + queryTerm + '\'' + ' OR ASI_GnH_Applicant__r.Name like \'' + queryTerm + '\')'  + ' AND OwnerId = \'' + "{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_Payee__c}" + '\'))';
                                    additonalQuery += ' AND ASI_GnH_Status__c = \'Approved\' AND ASI_GnH_Company__c = \'Pernod Ricard Korea\' ';
                                    additonalQuery += ' AND (RecordType.DeveloperName = \'ASI_GnH_KR_Offer_Request_Read_Only\' OR RecordType.DeveloperName = \'ASI_GnH_KR_Receive_Request_Read_Only\' )';
                                    selectQuery = 'Id,Name, ASI_GnH_Applicant__c, ASI_GnH_Applicant__r.Name, ASI_GnH_Department__c, ASI_GnH_Amount_per_Recipient__c, ASI_GnH_Type__c';
                                }
                                if(attrs.selection=="BranchChannel"){
                                    additonalQuery = ' Where Name like \'' + queryTerm + '\'';
                                    selectQuery ='Id, Name, ASI_TnE_Branch_Channel_Desc__c ';
                                }
                                if(attrs.selection==="GnHRecipient"){
                                    //console.log('Finding GnH Recipient');
                                    additonalQuery = ' Where (Name like \'' + queryTerm + '\'' + ' OR ASI_GnH_Title__c like \'' + queryTerm + '\'' + ' OR ASI_GnH_Organization__c like \'' + queryTerm + '\')';
                                    additonalQuery += ' AND (RecordType.DeveloperName = \'ASI_GnH_KR_Recipient_Master\' OR RecordType.DeveloperName = \'ASI_GnH_KR_PR_Staffs_Master\' )';
                                    additonalQuery += ' AND ASI_GnH_Active__c = true ';
                                    selectQuery = 'Name,ASI_GnH_Title__c, ASI_GnH_Organization__c, ASI_GnH_Company_Address__c, ASI_GnH_Mobile__c, ASI_GnH_Email__c';
                                }

                                GetMasterData.getData(attrs.object, selectQuery, additonalQuery).then(function(result){
                                    resultList = [];

                                    if (!result) {
                                        var noResult = { value:"",label:"No results found" };
                                        response(noResult);
                                    }else{
                                        for (var i = 0; i < result.length; i++) {
                                            var tempresult = new Object();
                                            if (attrs.selection==="SalesmanName"||attrs.selection=="CustomerName"||attrs.selection==="SubbrandName"||attrs.selection==="PromotionCode"||attrs.selection=="WhereVenueName"||attrs.selection=="BranchChannel"){
                                                tempresult.label  = helper.htmlEncode(result[i]["Name"]);
                                            }
                                            if (attrs.selection=="GnHForm"){
                                                tempresult.label  = helper.htmlEncode(result[i]["Name"]);
                                            }
                                            if (attrs.selection=="GnHRecipient"){
                                                tempresult.label  = helper.htmlEncode(result[i]["Name"]);
                                            }
                                            tempresult.value =  result[i]["Id"];
                                            if(selectQuery!=null){
                                                if(attrs.selection=="BranchChannel") {
                                                    tempresult.desc =  result[i]["ASI_TnE_Branch_Channel_Desc__c"]!=null?helper.htmlEncode(result[i]["ASI_TnE_Branch_Channel_Desc__c"]):"";
                                                }
                                                if(attrs.selection=="CustomerName" || attrs.selection=="WhereVenueName") {
                                                    tempresult.desc =  result[i]["ASI_CRM_CN_Address__c"]!=null?helper.htmlEncode(result[i]["ASI_CRM_CN_Address__c"]):"";
                                                }
                                                if(attrs.selection=="GnHForm"){
                                                    tempresult.desc = ' - '+(result[i]["ASI_GnH_Applicant__r"]["Name"]!=null?helper.htmlEncode(result[i]["ASI_GnH_Applicant__r"]["Name"]):"")
                                                        +' - '+(result[i]["ASI_GnH_Type__c"]!=null?helper.htmlEncode(result[i]["ASI_GnH_Type__c"]):"")
                                                        +' - '+(result[i]["ASI_GnH_Amount_per_Recipient__c"]!=null?helper.htmlEncode(result[i]["ASI_GnH_Amount_per_Recipient__c"]):"");
                                                    console.log('Set description: '+tempresult.desc);
                                                }
                                                if(attrs.selection=="GnHRecipient"){ 
                                                    tempresult.desc =  (result[i]["ASI_GnH_Organization__c"]!=null?helper.htmlEncode(result[i]["ASI_GnH_Organization__c"]):"")
                                                        +' - '+(result[i]["ASI_GnH_Company_Address__c"]!=null?helper.htmlEncode(result[i]["ASI_GnH_Company_Address__c"]):"");
                                                }
                                            }
                                            tempresult.Obj=result[i];
                                            resultList.push(tempresult);
                                        }


                                    }

                                    response(resultList);
                                }); 
                            },
                            response: function (event, ui) {

                                if(ui.content.length===0){ 
                                    console.log("No result found");
                                }
                                if (ui.content.length == 1){

                                }                                   
                            },
                            open: function (event, ui) {
                                var menu = $(this).data("uiAutocomplete").menu
                                , i = 0
                                , $items = $('li', menu.element)
                                , item
                                , text
                                , startsWith = new RegExp("^" + $.ui.autocomplete.escapeRegex(this.value), "i");

                                for (i = 0 ; i < $items.length && !item; i++) { 
                                    text = $items.eq(i).text();
                                    if (startsWith.test(text)) {
                                        item = $items.eq(i);
                                    }
                                }

                                if (item) {
                                    menu.focus(null, item);
                                }
                            },
                            select: function(event, ui) {
                                event.preventDefault();
                                $(this).val(ui.item.label);
                                console.log(attrs.index);
                                if(attrs.selection != "GnHRecipient"){
                                    if(typeof attrs.index!= 'undefined'){
                                        console.log('Go 1');
                                        scope.setResultData(attrs.index, ui.item , attrs.object, attrs.selection,false);
                                    }else{
                                        console.log('Go 2');
                                        scope.setMassAssignObj(ui.item , attrs.object, attrs.selection);
                                    }
                                }
                                if(ui.item && attrs.selection == "GnHRecipient"){
                                    console.log('Go10');
                                    scope.addRecipient(attrs.index,ui.item.value);                                                     
                                }
                                if (ui.item && attrs.selection == "PromotionCode" && typeof attrs.index!= 'undefined') {
                                    console.log('Change GnH Column');
                                    scope.changeGnHColumn(ui.item.label,attrs.index);
                                }
                                if(!ui.item && !foundInCache){
                                    //console.log('Go 3');
                                    this.value = '';
                                    scope.setResultData(attrs.index, null, attrs.object, attrs.selection,false);                                                     
                                }
                                scope.$apply();
                                return false;                               
                            },
                            focus: function( event, ui ) {
                                event.preventDefault();
                                $(this).val(ui.item.label);
                                //  return false;  
                            },
                            change:function (event, ui) {
                                if (ui.item && attrs.selection == "GnHForm") {
                                    scope.changeGnHRecipient(ui.item,attrs.index);
                                }
                                if (ui.item && attrs.selection == "PromotionCode" && typeof attrs.index!= 'undefined') {
                                    scope.changeGnHColumn(ui.item.label,attrs.index);
                                }
                                if (!ui.item){
                                    this.value = '';
                                    //console.log('Go 4');
                                    scope.setResultData(attrs.index, null, attrs.object, attrs.selection,false);                                                                
                                }               
                                return false;   
                            }
                        }).focus(function() {
                            $(this).autocomplete("search", "");
                        }
                                ).each(function() {
                            $(this).data('ui-autocomplete')._renderItem = function( ul, item ) {
                                if(!item.desc){
                                    return $("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><a>")  
                                        .appendTo(ul);                                             
                                }
                                return $("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><span style='margin-right: 2px; float:right;'>" + item.desc + "</span><a>")  
                                    .appendTo(ul); 
                            };                        
                        });
                    });
                }

            };
        });

        app.directive('expand', function () {
            return {
                restrict: 'E',
                replace:true,
                transclude: true, 
                template:  '<button name="expandTable"></button>',
                controller: ['$scope', function ($scope) {
                    $scope.$on('onExpandAll', function (event, args) {
                        $scope.expanded = args.expanded;
                    });
                }]
            };
        });

        app.factory('GetMasterData',function($q,$rootScope,$parse){  
            var factory = {};  
            factory.getData = function(ObjectName,SQLStatement,whereClause){  
                var deferred = $q.defer();  
                RemoteGetMasterData(function(result){  
                    $rootScope.$apply(function(){  
                        deferred.resolve(result);  
                    });  
                }, ObjectName,SQLStatement,whereClause);  
                return deferred.promise;  
            }  
            return factory;  
        });    

        function RemoteGetMasterData(callback, ObjectName,SQLStatement,whereClause){  
            Visualforce.remoting.Manager.invokeAction(  
                '{!$RemoteAction.ASI_TnE_KR_ClaimManageAllCtrl.findList}', ObjectName,SQLStatement,whereClause,
                callback,  
                {escape: false}  
            );      
        }


        app.controller("ListController", function($scope,GetMasterData,Pagination,$sce,$parse) {

            $scope.ResultData;
            $scope.prkusers; 
            $scope.numberOfRecordPerPage = 50;
            $scope.pagination = Pagination.getNew($scope.numberOfRecordPerPage);
            $scope.pagination.numPages = 0;    
            $scope.isLoading = false;

            $scope.APIFieldNameMap = {};
            $scope.APIFieldNameMap["SalesmanName"] = "ASI_TnE_KR_Salesman__c";
            $scope.APIFieldNameMap["CustomerName"] = "ASI_TnE_KR_Customer__c";
            $scope.APIFieldNameMap["SubbrandName"] = "ASI_TnE_KR_Sub_Brand__c";
            $scope.APIFieldNameMap["PromotionCode"] = "ASI_TnE_KR_Promotion_Code__c";
            $scope.APIFieldNameMap["BranchChannel"] = "ASI_TnE_Branch_code_Channel__c";
            $scope.APIFieldNameMap["WhereVenueName"] = "ASI_TnE_KR_Where__c";
            $scope.APIFieldNameMap["GnHForm"] = "ASI_GnH_Request__c";
            $scope.APIFieldNameMap["GnHRecipient"] = "ASI_GnH_Recipient_Master__c";

            $scope.GnHRecipientListData;
            $scope.delGnHRecipientIds = [];
            $scope.GnHRecipientMasterList;
            $scope.GnHReuqestList;
            $scope.gnhCheckedPlan;

            var claimHeaderId = helper.getheaderId();
            getRecipientMasterList();
            getGnHRequestList();
            getGnHckeckedPlanList();

            getclaimDetailsByApex(claimHeaderId);
            getSelectListItemByApex();
            assignRecipientToDetails();


            this.expandAll = function (expanded) {
                //console.log('Expand All');
                $scope.$broadcast('onExpandAll', {expanded: expanded});
            };



            $scope.setMassAssignObj = function(item, objectName, fieldName){

                var objectVar = 'selected';
                objectVar = objectVar + fieldName;
                model  = $parse(objectVar);
                model.assign($scope, new Object());
                var selectedVar = objectVar + '.IsSelected';
                model  = $parse(selectedVar);
                model.assign($scope, true);    
                var itemVar =  objectVar + '.item';
                if(!item){ 
                    item = new Object();
                }
                item.label = item!=null? item.label:'';
                item.value = item!=null? item.value:'';
                model  = $parse(itemVar);
                model.assign($scope, item); 

                console.log("setMassAssignObj  -  item:" + item +"|objectName:" + objectName +"|fieldName: " + fieldName);

            }

            $scope.changePicklistValue = function(rowNo, fieldName, fieldValue) {
                $scope.errorMessages = [];
                fieldValue = typeof fieldValue !="undefined"? fieldValue :'';
                /*
                    if(parseInt(rowNo) > $scope.numberOfRecordPerPage ){
                        rowNo = parseInt(rowNo) ;
                    }else   rowNo = parseInt(rowNo)+( $scope.numberOfRecordPerPage * $scope.pagination.page);
                    */

                console.log("changePicklistValue  -  rowNo:" + rowNo +"|fieldName:" + fieldName +"|fieldValue: " + fieldValue);

                $scope.ResultData[rowNo].IsChanged = true;
                $scope.ResultData[rowNo][fieldName] = fieldValue;

            }

            $scope.setResultData = function(rowNo, item, objectName, fieldName, resetIndex){

                if(isNaN(rowNo)){
                    $scope.setMassAssignObj(item, objectName, fieldName);
                    return
                }

                $scope.errorMessages = [];

                console.log("resetIndex:" + resetIndex +' '+item);

                if(parseInt(rowNo) > $scope.numberOfRecordPerPage  || resetIndex){
                    rowNo = parseInt(rowNo) ;
                }else  
                    rowNo = parseInt(rowNo)+( $scope.numberOfRecordPerPage * $scope.pagination.page);

                console.log("rowNo :" +rowNo + "|item :" + item + "|objectName :"+ objectName +" |fieldName :" +fieldName);
                $scope.ResultData[rowNo].IsChanged = true;

                var startWith = 'ResultData['+rowNo+ '].'; 

                var returnAPIFieldName = $scope.APIFieldNameMap[fieldName]||'';
                returnAPIFieldName = startWith + returnAPIFieldName;
                model  = $parse(returnAPIFieldName);
                var autocompleteValue = item!=null? item.value:'';
                console.log('Assigned Value: '+autocompleteValue );
                model.assign($scope,autocompleteValue);                    

                fieldName = startWith + fieldName;
                model  = $parse(fieldName);
                var autocompleteLabel = item!=null? item.label:'';
                model.assign($scope,autocompleteLabel); 
            }

            function setSelectListItemBlank() {
                for (var i = 0; i < $scope.ResultData.length; i++) {
                    if (!$scope.ResultData[i].ASI_TnE_Dept_in_Charge__c) {
                        $scope.ResultData[i].ASI_TnE_Dept_in_Charge__c = '';
                    }
                    if (!$scope.ResultData[i].ASI_TnE_Supported_Item__c){
                        $scope.ResultData[i].ASI_TnE_Supported_Item__c= '';
                    }
                }
            }

            function getSelectListItemByApex() {
                // RemoteAction
                ASI_TnE_KR_ClaimManageAllCtrl.getSelectedOptions('ASI_TnE_Dept_in_Charge__c', function(results, event){
                    if(event.status) {
                        $scope.deptInCharge =  getSelectListItem(results);
                        $scope.$apply(); 
                    } else {
                        alert(event.message);
                    }
                }, {escape: false});

                ASI_TnE_KR_ClaimManageAllCtrl.getSelectedOptions('ASI_TnE_Supported_Item__c', function(results, event){
                    if(event.status) {
                        $scope.supportedItems =  getSelectListItem(results);
                        $scope.$apply(); 
                    } else {
                        alert(event.message);
                    }
                }, {escape: false});
                ASI_TnE_KR_ClaimManageAllCtrl.getSelectedOptions('ASI_GnH_Type__c', function(results, event){
                    if(event.status) {
                        $scope.gnhType =  getSelectListItem(results);
                        $scope.$apply(); 
                    } else {
                        alert(event.message);
                    }
                }, {escape: false});
                ASI_TnE_KR_ClaimManageAllCtrl.getRecipientOptions('ASI_TnE_Recipient_Type__c', function(results, event){
                    if(event.status) {
                        $scope.recipientType =  getSelectListItem(results);
                        $scope.$apply(); 
                    } else {
                        alert(event.message);
                    }
                }, {escape: false});

                return false;
            }

            function getSelectListItem(resultMap) {
                var resultObj = new Object();
                var i = 0;
                for (var key in resultMap) {
                    resultObj[i] = {value: key, label: resultMap[key]};
                    i++;
                }
                return resultObj;
            }

            function validateChecking(resultInput){
                errorMessages = [];
                var totalAmountandPaxPerGnHForm = {};
                var gnhRequestMap = ({!gnhRequestMapJson});
                var thresholdList = ({!TnEThresholdJson});
                for (var i = 0; i < resultInput.length; i++) {
                    var tempIndex = i+1;
                    var checkDuplicateRecord = [];
                    /*if(!resultInput[i].ASI_TnE_KR_Customer__c){ 
                        errorMessages.push("#"+ tempIndex +": Please input Customer");
                    }
                    if(!resultInput[i].ASI_TnE_Dept_in_Charge__c){
                        errorMessages.push("#"+ tempIndex +": Please input Dept in Charge");
                    } 
                    if(!resultInput[i].ASI_TnE_KR_Sub_Brand__c){
                        errorMessages.push("#"+ tempIndex +": Please input Sub Brand");
                    }  
                    if(!resultInput[i].ASI_TnE_Branch_code_Channel__c){
                        errorMessages.push("#"+ tempIndex +": Please input Branch Code + Channel");
                    }  
                    if(!resultInput[i].ASI_TnE_KR_Promotion_Code__c){
                        errorMessages.push("#"+ tempIndex +": Please input Promotion Code");
                    }  
                    if(!resultInput[i].ASI_TnE_Sales_Year__c){
                        errorMessages.push("#"+ tempIndex +": Please input Sales Year");
                    }  
                    if(!resultInput[i].ASI_TnE_Sales_Month__c){
                        errorMessages.push("#"+ tempIndex +": Please input Sales Month");
                    }  
                    if(!resultInput[i].ASI_TnE_Supported_Item__c){
                        errorMessages.push("#"+ tempIndex +": Please input Supported Item");
                    }*/
                    if(!resultInput[i].ASI_TnE_Total_Number_Pax__c){
                        errorMessages.push("#"+ tempIndex +": Please input Pax");
                    }
                    if(!resultInput[i].ASI_TnE_Details_Of_Expense__c){
                        errorMessages.push("#"+ tempIndex +": Details of Expense is empty");
                    }
                    if(resultInput[i].GnHMandatory == true && (!resultInput[i].ASI_GnH_Type__c || !resultInput[i].ASI_TnE_Recipient_Type__c)){
                        errorMessages.push("#"+ tempIndex +": Please Select G&H Type and Recipent Type");

                    } 
                    if(resultInput[i].ASI_GnH_Type__c && resultInput[i].ASI_TnE_Recipient_Type__c && resultInput[i].aboveThreshold == true && !resultInput[i].GnHForm){
                        console.log('Flag: '+resultInput[i].aboveThreshold+' && '+resultInput[i].GnHForm);
                        errorMessages.push("#"+ tempIndex +": The amount is over the G&H threshold, please fill in the approved G&H Form");
                    }
                    if(resultInput[i].GnHForm){
                        var gnhId = resultInput[i].ASI_GnH_Request__c;
                        var gnhForm = resultInput[i].GnHForm;
                        var tolerance = thresholdList[0];
                        var totalAmt = resultInput[i].ASI_TnE_Receipt_Amount__c;
                        var amountPerPax = resultInput[i].ASI_TnE_Receipt_Amount__c/resultInput[i].ASI_TnE_Total_Number_Pax__c;

                        var gnhApprovedAmt = $scope.GnHReuqestList[gnhForm].ASI_GnH_Total_Request_Amount__c;//Amount Approved total in GnH Request
                        var gnhApprovedAvg = $scope.GnHReuqestList[gnhForm].ASI_GnH_Amount_per_Recipient__c;//Amount Approved per recipient in GnH Request

                        var gnhApprovedAmtTolerance = gnhApprovedAmt * tolerance;
                        var gnhApprovedAvgTolerance = gnhApprovedAvg * tolerance;

                        var recipientType = $scope.GnHReuqestList[gnhForm].ASI_GnH_Recipient_Type__c;
                        var gnhType = $scope.GnHReuqestList[gnhForm].ASI_GnH_Type__c;

                        if (gnhRequestMap[gnhId]){
                            errorMessages.push("#"+ tempIndex +": This GnH form is used in another TnE Claim, Please choose another GnH form to proceed");
                        }
                        if(totalAmt > gnhApprovedAmtTolerance){
                            errorMessages.push("#"+ tempIndex +": Total Amount exceeded in selected GnH Request");
                        }
                        if(amountPerPax > gnhApprovedAvgTolerance){
                            errorMessages.push("#"+ tempIndex +": Amount Per Recipient/PAX exceeded in selected GnH Request");
                        }
                        if(recipientType != resultInput[i].ASI_TnE_Recipient_Type__c){
                            errorMessages.push("#"+ tempIndex +": Recipient Type does not match with GnH Request");
                        }
                        if(gnhType != resultInput[i].ASI_GnH_Type__c){
                            errorMessages.push("#"+ tempIndex +": GnH Type does not match with GnH Request");
                        }
                        var recipientLength = $scope.ResultData[i].GnHRecipient.length;
                        if(resultInput[i].ASI_TnE_Total_Number_Pax__c != recipientLength){
                            errorMessages.push("#"+ tempIndex +": Number of recipients should be same as PAX number");
                        }
                    }
                    if ($scope.ResultData[i].GnHRecipient.length > 0){
                        for (var j=0; j<$scope.ResultData[i].GnHRecipient.length; j++){
                            var recordString = resultInput[i].GnHRecipient[j].ASI_GnH_Recipient__r.Name+resultInput[i].GnHRecipient[j].ASI_GnH_Recipient__r.ASI_GnH_Organization__c+resultInput[i].GnHRecipient[j].ASI_GnH_Recipient__r.ASI_GnH_Title__c+resultInput[i].GnHRecipient[j].ASI_GnH_Recipient__r.ASI_GnH_Company_Address__c;
                            console.log("#"+ tempIndex +" combined key: "+recordString);
                            if (checkDuplicateRecord.indexOf(recordString) >= 0){
                                errorMessages.push("#"+ tempIndex +": Duplicated recipient in claim detail");
                            }else{
                                checkDuplicateRecord.push(recordString);
                            }
                        }
                    }
                    //Put recipient amount and pax into a map,
                    //Key: GnH Form  Value:Receipt Amount, Pax, Number of record
                    if (totalAmountandPaxPerGnHForm.hasOwnProperty(resultInput[i].GnHForm)){
                        totalAmountandPaxPerGnHForm[resultInput[i].GnHForm].totalAmount += resultInput[i].ASI_TnE_Receipt_Amount__c;
                        totalAmountandPaxPerGnHForm[resultInput[i].GnHForm].totalPax += resultInput[i].ASI_TnE_Total_Number_Pax__c;
                        totalAmountandPaxPerGnHForm[resultInput[i].GnHForm].count += 1;
                    }else{
                        totalAmountandPaxPerGnHForm[resultInput[i].GnHForm]={totalAmount: resultInput[i].ASI_TnE_Receipt_Amount__c, 
                                                                             totalPax: resultInput[i].ASI_TnE_Total_Number_Pax__c,
                                                                             count: 1};
                    }
                }
                for (var i in totalAmountandPaxPerGnHForm){
                    console.log(i);
                    if(i.length > 0){
                        var tolerance = thresholdList[0];
                        var totalAmount = totalAmountandPaxPerGnHForm[i].totalAmount;
                        var totalPax = totalAmountandPaxPerGnHForm[i].totalPax;
                        var count = totalAmountandPaxPerGnHForm[i].count;

                        var avgPax = totalPax / count;
                        var averageAmt = (totalAmount / count) / avgPax;


                        var gnhApprovedAmt = $scope.GnHReuqestList[i].ASI_GnH_Total_Request_Amount__c;//Amount Approved total in GnH Request
                        var gnhApprovedAvg = $scope.GnHReuqestList[i].ASI_GnH_Amount_per_Recipient__c;//Amount Approved per recipient in GnH Request

                        var gnhApprovedAmtTolerance = gnhApprovedAmt * tolerance;
                        var gnhApprovedAvgTolerance = gnhApprovedAvg * tolerance;

                        if ( totalAmount > gnhApprovedAmtTolerance){
                            errorMessages.push("Total Receipt Amount of the Claim details are exceeded the approved value in GnH Request:"+ i);
                        }else if (averageAmt > gnhApprovedAvgTolerance){
                            errorMessages.push("Average Receipt Amount of the Claim details are exceeded the approved value in GnH Request:"+ i);
                        }
                    }
                }
                return errorMessages;
            }

            $scope.selectAll = function() {
                angular.forEach($scope.ResultData, function(item) {
                    item.IsSelected = $scope.selectedAll;
                });
            };

            $scope.checkIfAllSelected = function() {
                $scope.selectedAll = $scope.ResultData.every(function(item) {
                    return item.IsSelected == true;
                })
            };

            $scope.doAssign = function(event) {
                var i= 0;
                var promotionCode = ({!promotionCodeMapJson});
                angular.forEach($scope.ResultData, function(item) {
                    if(item.IsSelected){
                        console.log(item);
                        if( $scope.selectedSalesmanName &&  $scope.selectedSalesmanName.IsSelected){
                            $scope.setResultData(i, $scope.selectedSalesmanName.item, "User", "SalesmanName", true);
                        }

                        if( $scope.selectedCustomerName && $scope.selectedCustomerName.IsSelected){
                            $scope.setResultData(i, $scope.selectedCustomerName.item, "ASI_CRM_AccountsAdditionalField__c", "CustomerName", true);
                        }

                        if( $scope.selectedSubbrandName && $scope.selectedSubbrandName.IsSelected){
                            $scope.setResultData(i, $scope.selectedSubbrandName.item, "ASI_KOR_Sub_Brand__c", "SubbrandName", true);
                        }

                        if( $scope.selectedBranchChannel && $scope.selectedBranchChannel.IsSelected){
                            $scope.setResultData(i, $scope.selectedBranchChannel.item, "ASI_TnE_Branch_Channel__c", "BranchChannel", true);
                        }

                        if( $scope.selectedPromotionCode && $scope.selectedPromotionCode.IsSelected){
                            $scope.setResultData(i, $scope.selectedPromotionCode.item, "ASI_MFM_Plan__c", "PromotionCode", true);
                            //console.log('Change GnH Column in Mass Assign - row: '+i);
                            $scope.changeGnHColumn($scope.selectedPromotionCode.item.label,i);
                            $scope.verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,$scope.selectedPromotionCode.item,item.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,i);
                        }

                        if( $scope.selectedWhereVenueName && $scope.selectedWhereVenueName.IsSelected){
                            $scope.setResultData(i, $scope.selectedWhereVenueName.item, "ASI_CRM_AccountsAdditionalField__c", "WhereVenueName", true);
                        }

                        if( $scope.selectedDeptInCharge && $scope.selectedDeptInCharge.IsSelected){
                            $scope.changePicklistValue(i, "ASI_TnE_Dept_in_Charge__c", $scope.selectedDeptInCharge.ASI_TnE_Dept_in_Charge__c);
                        }

                        if($scope.selectedSupportedItem && $scope.selectedSupportedItem.IsSelected){
                            $scope.changePicklistValue(i, "ASI_TnE_Supported_Item__c", $scope.selectedSupportedItem.ASI_TnE_Supported_Item__c);
                            console.log(item.ASI_TnE_KR_Promotion_Code__c);
                            var promotionName = promotionCode[item.ASI_TnE_KR_Promotion_Code__c];
                            console.log(promotionName != null);
                            if (promotionName != null){
                                $scope.changeGnHColumn(promotionName,i);
                                $scope.verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,promotionName,$scope.selectedSupportedItem.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,i);
                            }
                        }                          
                    }   
                    i++;
                });
            }

            $scope.doSave = function(event) {
                event.preventDefault();
                console.log("save");
                $scope.isLoading = true;
                $scope.errorMessages = [];
                var errorMessage =[];
                //errorMessage = validateChecking($scope.ResultData);
                if(errorMessage.length>0){
                    $scope.errorMessages = errorMessage;
                    $scope.isLoading = false;
                }else{
                    var apexClaimDetails = getClaimDetails($scope.ResultData);
                    var getGnHRecipient = getGnHRecipientByDetails($scope.ResultData);
                    doSaveByApex(apexClaimDetails,getGnHRecipient);
                }                    
            }

            function doSaveByApex(apexClaimDetails,gnhActualRecipient) {
                ASI_TnE_KR_ClaimManageAllCtrl.doSave(apexClaimDetails,gnhActualRecipient, function(result, event){

                    if(event.status){

                        if(result.errorMessages.length>0){
                            console.log("error from apex");
                            var i;
                            for (i = 0; i < result.errorMessages.length; ++i) {
                                $scope.errorMessages.push(helper.htmlEncode(result.errorMessages[i]));
                            }
                        }else{
                            alert("Save success!");
                            location.href = '/' + '{!ASI_TnE_ClaimHeader__c.Id}';
                        }
                    } 
                    else{
                        alert(event.message);
                    }
                    $scope.isLoading = false;
                    $scope.$apply();
                    return false;                         
                });
            }

            /*********************************
            onSave Function [START]: 
            get all claimdetail and recipient
            *********************************/

            function getClaimDetails(scopeResultData) {
                var apexClaimDetails = {};
                for( i=0 ;i< scopeResultData.length; i++){
                    var apexClaimDetail ={
                        IsChanged:false,
                        claimDetail : {}
                    };

                    apexClaimDetail.claimDetail.Id = scopeResultData[i].Id;
                    apexClaimDetail.claimDetail.ASI_TnE_KR_Salesman__c = scopeResultData[i].ASI_TnE_KR_Salesman__c;
                    apexClaimDetail.claimDetail.ASI_TnE_Details_of_Expense__c = scopeResultData[i].ASI_TnE_Details_of_Expense__c;  
                    apexClaimDetail.claimDetail.ASI_TnE_Dept_in_Charge__c = scopeResultData[i].ASI_TnE_Dept_in_Charge__c ;
                    apexClaimDetail.claimDetail.ASI_TnE_Supported_Item__c = scopeResultData[i].ASI_TnE_Supported_Item__c;
                    apexClaimDetail.claimDetail.ASI_TnE_KR_Promotion_Code__c = scopeResultData[i].ASI_TnE_KR_Promotion_Code__c;
                    apexClaimDetail.claimDetail.ASI_TnE_KR_Where__c = scopeResultData[i].ASI_TnE_KR_Where__c;
                    apexClaimDetail.claimDetail.ASI_TnE_Branch_code_Channel__c = scopeResultData[i].ASI_TnE_Branch_code_Channel__c;
                    apexClaimDetail.claimDetail.ASI_TnE_Sales_Month__c = scopeResultData[i].ASI_TnE_Sales_Month__c;
                    apexClaimDetail.claimDetail.ASI_TnE_Sales_Year__c = scopeResultData[i].ASI_TnE_Sales_Year__c;
                    apexClaimDetail.claimDetail.ASI_TnE_KR_Customer__c = scopeResultData[i].ASI_TnE_KR_Customer__c;
                    apexClaimDetail.claimDetail.ASI_TnE_KR_Sub_Brand__c = scopeResultData[i].ASI_TnE_KR_Sub_Brand__c;
                    apexClaimDetail.claimDetail.ASI_TnE_Total_Number_Pax__c = scopeResultData[i].ASI_TnE_Total_Number_Pax__c;
                    apexClaimDetail.claimDetail.ASI_TnE_GnH_Request__c = scopeResultData[i].ASI_GnH_Request__c;
                    apexClaimDetail.claimDetail.ASI_GnH_Type__c = scopeResultData[i].ASI_GnH_Type__c;
                    apexClaimDetail.claimDetail.ASI_TnE_Recipient_Type__c = scopeResultData[i].ASI_TnE_Recipient_Type__c;
                    console.log('GnH Form Id: '+scopeResultData[i].ASI_GnH_Request__c);

                    apexClaimDetail.rowNo = i;

                    if(scopeResultData[i].IsChanged){
                        apexClaimDetail.IsChanged = scopeResultData[i].IsChanged;
                    }
                    apexClaimDetails[i] = apexClaimDetail;
                }
                console.log(apexClaimDetails);
                return apexClaimDetails;
            }

            function getGnHRecipientByDetails(scopeResultData){
                var getGnHRecipients = {};
                var count = 0;
                for(i=0 ;i< $scope.ResultData.length; i++){
                    //var GnHRecipientList = $scope.ResultData[i].GnHRecipient;
                    if ($scope.ResultData[i].GnHRecipient){
                        // console.log('Mother: '+i);
                        //console.log('Element: '+$scope.ResultData[0].GnHRecipient.length);
                        for (j=0;j< $scope.ResultData[i].GnHRecipient.length;j++){
                            //console.log('Child: '+j);
                            var actualRecipient={
                                ASI_TnE_Details__c:"",
                                ASI_GnH_Recipient__c:""
                            }
                            actualRecipient.ASI_TnE_Details__c = $scope.ResultData[i].Id;
                            actualRecipient.ASI_GnH_Recipient__c = $scope.ResultData[i].GnHRecipient[j].ASI_GnH_Recipient__c;
                            getGnHRecipients[count] = actualRecipient;
                            count++; 
                            console.log('GnH Recipient Element: '+actualRecipient.ASI_TnE_Details__c+' '+actualRecipient.ASI_GnH_Recipient__c);
                        }
                    }
                }
                console.log('GnH Recipient Update List: '+getGnHRecipients);
                return getGnHRecipients;
            }
            /*********************************
            Column Function[OnChange]
            *********************************/

            $scope.changePicklist = function(fieldName) {
                var model = $parse(fieldName);
                model.assign($scope,true);
            }

            $scope.changeClaimDetail = function(rowNo) {
                $scope.errorMessages = [];
                var rowNo = parseInt(rowNo)+( $scope.numberOfRecordPerPage * $scope.pagination.page);
                $scope.ResultData[rowNo].IsChanged = true;
            }
            $scope.changeGnHColumn = function(promoCode,rowNo) {
                console.log('Changing GnH Colume: '+promoCode +' - ' +rowNo);
                console.log($scope.ResultData[rowNo].ASI_TnE_Dept_in_Charge__c);
                var GnHType = angular.element(document.getElementById('GnHType'+rowNo));//Get the HTML tag
                var Recipient = angular.element(document.getElementById('Recipient'+rowNo));//Get the HTML tag
                var GnHForm = angular.element(document.getElementById('GnHForm'+rowNo));//Get the HTML tag
                var supportItem = $scope.ResultData[rowNo].ASI_TnE_Supported_Item__c;
                if ($scope.ResultData[rowNo].ASI_TnE_Dept_in_Charge__c == 'Trade MKT'){
                    console.log('It is Trade MKT');
                    if(promoCode && $scope.ResultData[rowNo].ASI_TnE_Supported_Item__c.length > 0){
                        console.log($scope.gnhCheckedPlan[promoCode] != null);
                        if (promoCode != null && $scope.gnhCheckedPlan[promoCode] != null){
                            //var supportItem = $scope.ResultData[rowNo].ASI_TnE_Supported_Item__c;
                            var supportItemList = $scope.gnhCheckedPlan[promoCode].ASI_MFM_Project_Code__r.ASI_GnH_Supported_Item__c;
                            //if(promoCode.includes("7412")||promoCode.includes("6412")){ 
                            console.log(supportItemList.indexOf(supportItem));
                            if(supportItemList.indexOf(supportItem) > 0){
                                console.log('Found Checked Plan');

                                GnHType.attr('class',"required");
                                Recipient.attr('class',"required");

                                $scope.ResultData[rowNo].gnhFormDisabled = false;
                                $scope.ResultData[rowNo].GnHTypeDisabled = false;
                                $scope.ResultData[rowNo].RecipientDisabled = false;

                                $scope.ResultData[rowNo].GnHMandatory = true;
                                $scope.ResultData[rowNo].aboveThreshold = false;
                            }else{
                                console.log('No Checked Plan 1');
                                GnHType.attr('class',"");
                                Recipient.attr('class',"");
                                GnHForm.attr('class',"");

                                $scope.ResultData[rowNo].GnHTypeDisabled = true;
                                $scope.ResultData[rowNo].RecipientDisabled = true;
                                $scope.ResultData[rowNo].gnhFormDisabled = true;

                                $scope.ResultData[rowNo].ASI_GnH_Type__c = '';
                                $scope.ResultData[rowNo].ASI_TnE_Recipient_Type__c = '';
                                $scope.ResultData[rowNo].GnHForm = '';
                                $scope.ResultData[rowNo].GnHRecipient = [];
                                $scope.ResultData[rowNo].ASI_GnH_Request__c = '';

                                $scope.ResultData[rowNo].GnHMandatory = false;
                                $scope.ResultData[rowNo].aboveThreshold = false;
                            }
                        }else{
                            console.log('No Checked Plan 2');
                            GnHType.attr('class',"");
                            Recipient.attr('class',"");
                            GnHForm.attr('class',"");

                            $scope.ResultData[rowNo].GnHTypeDisabled = true;
                            $scope.ResultData[rowNo].RecipientDisabled = true;
                            $scope.ResultData[rowNo].gnhFormDisabled = true;

                            $scope.ResultData[rowNo].ASI_GnH_Type__c = '';
                            $scope.ResultData[rowNo].ASI_TnE_Recipient_Type__c = '';
                            $scope.ResultData[rowNo].GnHForm = '';
                            $scope.ResultData[rowNo].GnHRecipient = [];
                            $scope.ResultData[rowNo].ASI_GnH_Request__c = '';

                            $scope.ResultData[rowNo].GnHMandatory = false;
                            $scope.ResultData[rowNo].aboveThreshold = false;
                        }
                    }else{
                        console.log('No Checked Plan - No Promo Code');
                        GnHType.attr('class',"");
                        Recipient.attr('class',"");
                        GnHForm.attr('class',"");

                        $scope.ResultData[rowNo].GnHTypeDisabled = true;
                        $scope.ResultData[rowNo].RecipientDisabled = true;
                        $scope.ResultData[rowNo].gnhFormDisabled = true;

                        $scope.ResultData[rowNo].ASI_GnH_Type__c = '';
                        $scope.ResultData[rowNo].ASI_TnE_Recipient_Type__c = '';
                        $scope.ResultData[rowNo].GnHForm = '';
                        $scope.ResultData[rowNo].GnHRecipient = [];
                        $scope.ResultData[rowNo].ASI_GnH_Request__c = '';

                        $scope.ResultData[rowNo].GnHMandatory = false;
                        $scope.ResultData[rowNo].aboveThreshold = false;
                    }
                }
                if ($scope.ResultData[rowNo].ASI_TnE_Dept_in_Charge__c == 'Brand MKT'){
                    console.log('It is Brand MKT');
                    var supportItemListForBrand = ({!supportItemForBrandJson});
                    console.log(supportItemListForBrand);
                    console.log(supportItemListForBrand.indexOf(supportItem));
                    if (supportItemListForBrand.indexOf(supportItem)>0){
                        console.log('Got the support item in list');
                        $scope.ResultData[rowNo].gnhFormDisabled = false;
                        $scope.ResultData[rowNo].GnHTypeDisabled = false;
                        $scope.ResultData[rowNo].RecipientDisabled = false;

                        $scope.ResultData[rowNo].GnHMandatory = true;
                        $scope.ResultData[rowNo].aboveThreshold = false;
                    }else{
                        console.log('not found in list');
                        GnHType.attr('class',"");
                        Recipient.attr('class',"");
                        GnHForm.attr('class',"");

                        $scope.ResultData[rowNo].GnHTypeDisabled = true;
                        $scope.ResultData[rowNo].RecipientDisabled = true;
                        $scope.ResultData[rowNo].gnhFormDisabled = true;

                        $scope.ResultData[rowNo].ASI_GnH_Type__c = '';
                        $scope.ResultData[rowNo].ASI_TnE_Recipient_Type__c = '';
                        $scope.ResultData[rowNo].GnHForm = '';
                        $scope.ResultData[rowNo].GnHRecipient = [];
                        $scope.ResultData[rowNo].ASI_GnH_Request__c = '';

                        $scope.ResultData[rowNo].GnHMandatory = false;
                        $scope.ResultData[rowNo].aboveThreshold = false;
                    }                    
                }
                if ($scope.ResultData[rowNo].ASI_TnE_Dept_in_Charge__c == 'Wrong Use'){
                    console.log('It is Wrong Use');
                    GnHType.attr('class',"");
                    Recipient.attr('class',"");
                    GnHForm.attr('class',"");

                    $scope.ResultData[rowNo].GnHTypeDisabled = true;
                    $scope.ResultData[rowNo].RecipientDisabled = true;
                    $scope.ResultData[rowNo].gnhFormDisabled = true;

                    $scope.ResultData[rowNo].ASI_GnH_Type__c = '';
                    $scope.ResultData[rowNo].ASI_TnE_Recipient_Type__c = '';
                    $scope.ResultData[rowNo].GnHForm = '';
                    $scope.ResultData[rowNo].GnHRecipient = [];
                    $scope.ResultData[rowNo].ASI_GnH_Request__c = '';

                    $scope.ResultData[rowNo].GnHMandatory = false;
                    $scope.ResultData[rowNo].aboveThreshold = false;
                }
            }
            $scope.verifyWithThreshold = function(department,promoCode,supportItem,receiptAmt,paxNo,gnhType,receiptType,rowNo){
                // Create Support Item List
                console.log(' verifyWithThreshold ');
                var gnhForm = angular.element(document.getElementById('GnHForm'+rowNo));//Get the HTML tag
                if (promoCode.length > 0 && gnhType && receiptType){
                    //$scope.gnhCheckedPlan[promoCode] != null
                    if (department == 'Trade MKT' || department ==  'Brand MKT'){
                        //var supportItemList = ["야유회 지원","키맨/직원 선물","키맨/직원 접대","회식/간식 지원"];
                        var supportItemList;
                        if(department == 'Trade MKT'){
                            if($scope.gnhCheckedPlan[promoCode] != null){
                                supportItemList = $scope.gnhCheckedPlan[promoCode].ASI_MFM_Project_Code__r.ASI_GnH_Supported_Item__c;
                                console.log(supportItemList);
                                console.log(supportItemList.indexOf(supportItem));
                            }
                        }
                        if(department ==  'Brand MKT'){
                            supportItemList = ({!supportItemForBrandJson});
                        }
                        console.log(supportItemList);
                        if($scope.gnhCheckedPlan[promoCode] && supportItemList.indexOf(supportItem) >= 0){
                            console.log(receiptAmt);
                            //var receiptAmt = receiptAmt.replace(/\D/g,'');
                            //console.log(receiptAmt + ' AND ' + paxNo);
                            var amountPerPAX = receiptAmt / paxNo;
                            console.log('Aount per PAX: '+ amountPerPAX);
                            var thresholdObj = 'ASI_GnH_Threshold__c';
                            var query = 'ASI_GnH_GnH_Type__c,ASI_GnH_Recipient_Type__c,ASI_GnH_Threshold_Amount__c';
                            var whereClause = ' WHERE ASI_GnH_GnH_Type__c like \''+ gnhType +'\'' + ' AND ASI_GnH_Recipient_Type__c like \''+receiptType+ '\''+ ' AND ASI_GnH_Threshold_Amount__c != null AND recordType.DeveloperName = \'ASI_GnH_KR_GnH_Offer_Threshold\'';
                            GetMasterData.getData(thresholdObj,query,whereClause).then(function(result){
                                if (!result || result==''){
                                    //console.log('No Result Found');
                                    var errorMessages = [];
                                    $scope.errorMessages = [];
                                    errorMessages.push('Cannot Find any Threshold Value, Please Find your Administrator for support');
                                    $scope.errorMessages = errorMessages; 
                                }else{
                                    var thresholdAmt = result[0]["ASI_GnH_Threshold_Amount__c"];
                                    if(amountPerPAX > thresholdAmt){
                                        $scope.ResultData[rowNo].aboveThreshold = true;
                                        $scope.ResultData[rowNo].gnhFormDisabled = false;
                                        gnhForm.attr('class',"required");
                                        console.log('Result: '+result + 'Minium Threshold: '+thresholdAmt + ' Flag set to true');
                                    }
                                    else{
                                        gnhForm.attr('class',"");
                                        $scope.ResultData[rowNo].gnhFormDisabled = true;
                                        $scope.ResultData[rowNo].aboveThreshold = false;
                                        $scope.ResultData[rowNo].GnHForm = '';
                                        $scope.ResultData[rowNo].ASI_GnH_Request__c = '';
                                        $scope.ResultData[rowNo].GnHRecipient = [];

                                        console.log('Flag set to false');
                                    }
                                }
                            });
                        }else{ 
                            gnhForm.attr('class',"");
                            $scope.ResultData[rowNo].gnhFormDisabled = true;
                            $scope.ResultData[rowNo].aboveThreshold = false;
                            $scope.ResultData[rowNo].GnHForm = '';
                            $scope.ResultData[rowNo].GnHRecipient = [];

                            console.log('Flag set to false');
                        }
                    }else{
                        gnhForm.attr('class',"");
                        $scope.ResultData[rowNo].gnhFormDisabled = true;
                        $scope.ResultData[rowNo].aboveThreshold = false;
                        $scope.ResultData[rowNo].GnHForm = '';
                        $scope.ResultData[rowNo].GnHRecipient = [];

                        console.log('Flag set to false');
                    }
                }else{
                    gnhForm.attr('class',"");
                    $scope.ResultData[rowNo].gnhFormDisabled = true;
                    $scope.ResultData[rowNo].aboveThreshold = false;
                    $scope.ResultData[rowNo].GnHForm = '';
                    $scope.ResultData[rowNo].GnHRecipient = [];

                    console.log('Some Parameters are null, Flag set to false');
                }
            }

            $scope.renderAddRecipientField = function(rowNo){
                console.log('Enable Buttons');
                var autoCompleteField = angular.element(document.getElementById('GnHRecipient'+rowNo));
                autoCompleteField.attr('class',"");
                var addButton = angular.element(document.getElementById('button'+rowNo));
                addButton.attr('class',"btn btn-default btn-sm");
            }

            //Update list of $scope.ResultData[rowNo].GnHRecipient
            //To generate Expandable sub-table
            $scope.changeGnHRecipient= function(GnHOption,rowNo){
                event.preventDefault();
                var GnHOptionValue = GnHOption!=null? GnHOption.value:'';
                var recipientByRequest = ({!recipientbyRequestMapJson});
                console.log('GnH new Id: '+ GnHOptionValue);
                console.log('Changing GnH Recipient: '+ recipientByRequest[GnHOptionValue]);
                //if ($scope.ResultData[rowNo].GnHRecipient.length = 0) {
                if (recipientByRequest[GnHOptionValue]){
                    var newGnhRecipient = recipientByRequest[GnHOptionValue];
                    $scope.ResultData[rowNo].GnHRecipient = newGnhRecipient;
                    console.log('Row '+rowNo+' Changed to: '+$scope.ResultData[rowNo].GnHRecipient);                    
                }else{
                    var newGnhRecipient = [];
                    $scope.ResultData[rowNo].GnHRecipient = newGnhRecipient;
                    console.log('Row '+rowNo+' set to Empty');
                }
                //}
            }

            $scope.checkDisabled= function(promoCode,supportItem,gnhType,receiptType,gnhForm,rowNo){
                console.log('Checking Disable');
                //!IF(AND(isEditable!=1,isEditable!=2), true, false)
                var disableValue = ({!isEditable});
                if (disableValue == 1 || disableValue == 2){
                    if($scope.gnhCheckedPlan[promoCode] != null){
                        var supportItemList = $scope.gnhCheckedPlan[promoCode].ASI_MFM_Project_Code__r.ASI_GnH_Supported_Item__c;
                        if (supportItemList.indexOf(supportItem) >= 0){
                            $scope.ResultData[rowNo].GnHTypeDisabled = false;
                            $scope.ResultData[rowNo].RecipientDisabled = false;
                            if (gnhForm.length >0){
                                $scope.ResultData[rowNo].gnhFormDisabled = false;
                            }else{
                                $scope.ResultData[rowNo].gnhFormDisabled = true;
                            }
                            console.log('return false');
                            //return false;
                        }else{
                            $scope.ResultData[rowNo].gnhFormDisabled = true;
                            $scope.ResultData[rowNo].GnHTypeDisabled = true;
                            $scope.ResultData[rowNo].RecipientDisabled = true;
                            console.log('return true 1');
                            //return true;
                        }
                    }else{

                        $scope.ResultData[rowNo].gnhFormDisabled = true;
                        $scope.ResultData[rowNo].GnHTypeDisabled = true;
                        $scope.ResultData[rowNo].RecipientDisabled = true;
                    }
                }else{
                    $scope.ResultData[rowNo].gnhFormDisabled = true;
                    $scope.ResultData[rowNo].GnHTypeDisabled = true;
                    $scope.ResultData[rowNo].RecipientDisabled = true;
                    console.log('return true 2');
                    //return true;
                }
            }
            /*********************
            Init Function
            **********************/
            function getclaimDetailsByApex(claimHeaderId) {
                ASI_TnE_KR_ClaimManageAllCtrl.getClaimDetails(claimHeaderId, function(results, event){
                    if(event.status) {
                        $scope.ResultData = jQuery.parseJSON(results);

                        for( i=0 ;i< $scope.ResultData.length; i++){

                            $scope.ResultData[i].aboveThreshold = false;
                            $scope.ResultData[i].GnHMandatory = false;

                            if(typeof $scope.ResultData[i].ASI_TnE_KR_Salesman__r != 'undefined'){
                                $scope.ResultData[i].SalesmanName =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_KR_Salesman__r.Name);
                            }else{
                                $scope.ResultData[i].SalesmanName ='';
                                $scope.ResultData[i].ASI_TnE_KR_Salesman__c ='';
                            }
                            if(typeof $scope.ResultData[i].ASI_TnE_KR_Customer__r != 'undefined'){
                                $scope.ResultData[i].CustomerName =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_KR_Customer__r.Name);
                            }else{
                                $scope.ResultData[i].CustomerName ='';
                                $scope.ResultData[i].ASI_TnE_KR_Customer__c ='';
                            }
                            if(typeof $scope.ResultData[i].ASI_TnE_KR_Where__r != 'undefined'){
                                $scope.ResultData[i].WhereVenueName =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_KR_Where__r.Name);
                            }else{
                                $scope.ResultData[i].WhereVenueName  ='';
                                $scope.ResultData[i].ASI_TnE_KR_Where__c ='';
                            }                                
                            if(typeof $scope.ResultData[i].ASI_TnE_KR_Sub_Brand__r != 'undefined'){
                                $scope.ResultData[i].SubbrandName =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_KR_Sub_Brand__r.Name);
                            }else{
                                $scope.ResultData[i].SubbrandName ='';
                                $scope.ResultData[i].ASI_TnE_KR_Sub_Brand__c ='';
                            }
                            if(typeof $scope.ResultData[i].ASI_TnE_KR_Promotion_Code__r != 'undefined'){
                                $scope.ResultData[i].PromotionCode =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_KR_Promotion_Code__r.Name);
                            }else{
                                $scope.ResultData[i].PromotionCode ='';
                                $scope.ResultData[i].ASI_TnE_KR_Promotion_Code__c ='';
                            }  
                            if(typeof $scope.ResultData[i].ASI_TnE_Branch_code_Channel__r != 'undefined'){
                                $scope.ResultData[i].BranchChannel =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_Branch_code_Channel__r.Name);
                            }else{
                                $scope.ResultData[i].BranchChannel  ='';
                                $scope.ResultData[i].ASI_TnE_Branch_code_Channel__c ='';
                            }
                            if(typeof $scope.ResultData[i].ASI_TnE_GnH_Request__r != 'undefined'){
                                $scope.ResultData[i].GnHForm =  helper.htmlEncode($scope.ResultData[i].ASI_TnE_GnH_Request__r.Name);
                            }else{
                                $scope.ResultData[i].GnHForm ='';
                                $scope.ResultData[i].ASI_TnE_GnH_Request__c ='';
                            }
                            $scope.ResultData[i].ASI_TnE_Receipt_Date__c = new Date($scope.ResultData[i].ASI_TnE_Receipt_Date__c);
                            $scope.ResultData[i].IsSelected = false;
                            //console.log('changeGnHColumn');
                            //$scope.changeGnHColumn($scope.ResultData[i].PromotionCode,i);
                        }
                        $scope.pagination.numPages = Math.ceil($scope.ResultData.length/$scope.pagination.perPage); 
                        setSelectListItemBlank();
                        $scope.$apply();
                    } else {
                        alert('error: ' +  event.message);
                    }
                }, {escape: false});
                return false;                   
            }

            function assignRecipientToDetails(){
                ASI_TnE_KR_ClaimManageAllCtrl.getGnhRecipient(function(results, event){
                    if(event.status) {
                        $scope.GnHRecipientListData = jQuery.parseJSON(results);   
                        var recipientByRequest = ({!recipientbyRequestMapJson});
                        var currentGnHRecipient = ({!currentRecipientMapJson});
                        for( i=0 ;i< $scope.ResultData.length; i++){
                            var claimId = $scope.ResultData[i].Id;
                            if($scope.ResultData[i].ASI_TnE_GnH_Request__c){
                                if (currentGnHRecipient[claimId]){
                                    var gnhRecipient = currentGnHRecipient[claimId]!=null? currentGnHRecipient[claimId]:[];
                                    $scope.ResultData[i].GnHRecipient = gnhRecipient;
                                }else{
                                    var gnhRequest = $scope.ResultData[i].ASI_TnE_GnH_Request__c;
                                    console.log('Get the request: '+gnhRequest);
                                    var gnhRecipient = recipientByRequest[gnhRequest]!=null? recipientByRequest[gnhRequest]:[];
                                    $scope.ResultData[i].GnHRecipient = gnhRecipient;
                                    console.log('Row '+i+' GnH Recipient: '+gnhRecipient);
                                    console.log('Row '+i+': '+$scope.ResultData[i].GnHRecipient);
                                }
                            }
                            else{
                                console.log('No GnH Request');
                                $scope.ResultData[i].GnHRecipient = [];
                            }
                        }
                    }else{
                        alert('error: ' +  event.message);
                    }
                }, {escape: false});
                return false;
            }

            function getRecipientMasterList(){
                ASI_TnE_KR_ClaimManageAllCtrl.getRecipientMaster(function(results, event){
                    if(event.status) {
                        $scope.GnHRecipientMasterList = jQuery.parseJSON(results);
                        //console.log('Initialised GnHRecipientMasterList: '+$scope.GnHRecipientMasterList["Test User"].ASI_GnH_Title__c );
                    }else{
                        alert('error: ' +  event.message);
                    }
                }, {escape: false});
                return false;
            }

            function getGnHRequestList(){
                ASI_TnE_KR_ClaimManageAllCtrl.getGnHRequest(function(results, event){
                    if(event.status) {
                        $scope.GnHReuqestList = jQuery.parseJSON(results);
                        //console.log('Initialised GnHRecipientMasterList: '+$scope.GnHRecipientMasterList["Test User"].ASI_GnH_Title__c );
                    }else{
                        alert('error: ' +  event.message);
                    }
                }, {escape: false});
                return false;
            }

            function getGnHckeckedPlanList(){
                ASI_TnE_KR_ClaimManageAllCtrl.getGnHCheckedPlan(function(results, event){
                    if(event.status) {
                        $scope.gnhCheckedPlan = jQuery.parseJSON(results);
                        console.log($scope.gnhCheckedPlan);
                        //console.log('Initialised GnHRecipientMasterList: '+$scope.GnHRecipientMasterList["Test User"].ASI_GnH_Title__c );
                    }else{
                        alert('error: ' +  event.message);
                    }
                }, {escape: false});
                return false;
            }

            $scope.checkPAX = function( pax, rowNo){
                console.log('Init '+ rowNo + ' PAX = '+pax);
                if (pax == null){
                    $scope.ResultData[rowNo].ASI_TnE_Total_Number_Pax__c = 1;
                }
            }

            /*********************
            Expandable Table Function
            **********************/
            //Delete and GnH Recipient 
            $scope.deleteRecipient = function(parentRow, subRow){
                if (confirm("Are You Sure?")){
                    //console.log('Start Finding');
                    //console.log($scope.ResultData[parentRow]);
                    //var gnhRecipientList = $scope.ResultData[parentRow].GnHRecipient;
                    //console.log(gnhRecipientList);
                    $scope.delGnHRecipientIds.push($scope.ResultData[parentRow].GnHRecipient[subRow].Id);
                    //console.log("Delete ID Added: " + $scope.delGnHRecipientIds);
                    var currentRecipient = $scope.ResultData[parentRow].GnHRecipient;
                    currentRecipient.splice(subRow,1);
                }
            }

            $scope.addRecipient= function(parentRow,selectedRecipient){
                event.preventDefault();
                console.log('Enter Insertion');
                console.log($scope.ResultData);
                //var gnhRecipientList = $scope.ResultData[parentRow].GnHRecipient; 
                var selected = $scope.GnHRecipientMasterList[selectedRecipient];
                var newEmptyGnHRecipient = helper.getGnHRecipientObject();
                //newEmptyGnHRecipient.Id = selected.Id,
                console.log(parentRow);
                newEmptyGnHRecipient.Name = selected.Name;
                newEmptyGnHRecipient.ASI_GnH_Recipient__c = selected.Id;
                newEmptyGnHRecipient.ASI_GnH_Recipient__r = {};
                newEmptyGnHRecipient.ASI_GnH_Recipient__r.Name = selected.Name;
                newEmptyGnHRecipient.ASI_GnH_Recipient__r.ASI_GnH_Email__c = selected.ASI_GnH_Email__c;
                newEmptyGnHRecipient.ASI_GnH_Recipient__r.ASI_GnH_Mobile__c = selected.ASI_GnH_Mobile__c;
                newEmptyGnHRecipient.ASI_GnH_Recipient__r.ASI_GnH_Organization__c = selected.ASI_GnH_Organization__c;
                newEmptyGnHRecipient.ASI_GnH_Recipient__r.ASI_GnH_Company_Address__c = selected.ASI_GnH_Company_Address__c;
                newEmptyGnHRecipient.ASI_GnH_Recipient__r.ASI_GnH_Title__c = selected.ASI_GnH_Title__c;
                //console.log('Selected Parent: '+$scope.ResultData[parentRow].Id + ' - '+'Insert GnH: '+newEmptyGnHRecipient.ASI_GnH_Recipient__r.ASI_GnH_Title__c);
                var currentRecipent = $scope.ResultData[parentRow].GnHRecipient;
                currentRecipent.push(newEmptyGnHRecipient);
                console.log($scope.GnHRecipientListData);
                console.log($scope.ResultData);
                console.log($scope.ResultData[parentRow].GnHRecipient);
                //$scope.$apply();
            }

        }).filter('unsafe', function($sce) { return $sce.trustAsHtml; });


        //helper
        helper = {
            htmlEncode: function ( input ) {
                var e = document.createElement('div');
                e.innerHTML = input;
                return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
            },
            getheaderId: function() {
                var claimHeaderId = '{!ASI_TnE_ClaimHeader__c.Id}';
                return claimHeaderId;
            },               
            getClaimDetailObject: function() {
                return {
                    Id: null,
                    ASI_TnE_Receipt_Date__c: new Date(),
                    SalesmanName:"",
                    ASI_TnE_KR_Salesman__c:"",
                    CustomerName:"", 
                    ASI_TnE_Details_of_Expense__c:"",
                    ASI_TnE_KR_Customer__c:"",
                    ASI_TnE_Dept_in_Charge__c:"",
                    ASI_TnE_Supported_Item__c:"",
                    PromotionCode:"",
                    BranchChannel:"",
                    ASI_TnE_Branch_code_Channel__c:"",
                    SubBrandName:"",
                    WhereVenueName:"",
                    ASI_TnE_KR_Where__c:"",
                    ASI_TnE_KR_Sub_Brand__c:"",
                    ASI_TnE_KR_Promotion_Code__c:"",
                    ASI_TnE_Sales_Month__c:"",
                    ASI_TnE_Sales_Year__c:"",
                    GnHForm:"",
                    IsChanged: false,
                    IsSelected: false,
                    aboveThreshold: false,
                    GnHRecipient:[]
                };
            },            
            getGnHRecipientObject: function(){
                return{
                    Id:"",
                    Name: ""
                }
            }
        };
    </script>

    <body class="bs">

        <div id="HeaderForm" class="bs container-fluid">
            <apex:form id="form">
                <div class="bs row">
                    <div class="bs col-md-12" >    
                        <div ng-app="myapp" ng-controller="ListController as ctrl">     
                            <div class="container-fluid">

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="panel">
                                            <div class="panel-body">

                                                <apex:pageBlock title="{!ASI_TnE_ClaimHeader__c.Name}">
                                                    <apex:pageBlockSection title="A&P Claim">

                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.Owner.Name}"/>
                                                        <apex:outputField label="Claim Type" value="{!ASI_TnE_ClaimHeader__c.RecordType.Name}"/>

                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_Payee__c}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Date__c}"/>

                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_Company__c}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Status__c}"/>

                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_Department__c}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_Credit_Card_No__c}"/>

                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Currency__c}"/> 
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_TotalAmount__c}"/>

                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_KR_GL_Date__c}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.Name}"/>

                                                    </apex:pageBlockSection>
                                                    <apex:pageblocksection title="System Information">
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.CreatedByID}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.CreatedDate}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.LastModifiedByID}"/>
                                                        <apex:outputField value="{!ASI_TnE_ClaimHeader__c.LastModifiedDate}"/>
                                                    </apex:pageblocksection>

                                                </apex:pageBlock>
                                                <apex:pageBlock >
                                                    <!--- testing on 17 ---> 
                                                    <apex:pageblocksection title="Mass Assign Function" columns="1">
                                                        <apex:panelGrid columns="6" id="MassAssignGrid">
                                                            <apex:panelGroup id="SalesmanGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(isEditable!=1, true, false)}" type="checkbox" ng-model="selectedSalesmanName.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Salesman__c.Label}" /></td>
                                                                        <td><autocomplete ng-readOnly="{!IF(isEditable!=1, true, false)}" selection="SalesmanName" object="User" ng-model="selectedSalesmanName.item.label"></autocomplete></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>
                                                            <apex:panelGroup id="CustomerGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(isEditable!=1, true, false)}" type="checkbox" ng-model="selectedCustomerName.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Customer__c.Label}" /></td>
                                                                        <td><autocomplete ng-readOnly="{!IF(isEditable!=1, true, false)}" selection="CustomerName" object="ASI_CRM_AccountsAdditionalField__c" ng-model="selectedCustomerName.item.label"></autocomplete></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>
                                                            <apex:panelGroup id="SubBrandGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" type="checkbox" ng-model="selectedSubbrandName.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Sub_Brand__c.Label}" /></td>
                                                                        <td><autocomplete ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" selection="SubbrandName" object="ASI_KOR_Sub_Brand__c" ng-model="selectedSubbrandName.item.label"></autocomplete></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>
                                                            <apex:panelGroup id="BranchCodeChannelGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}"  type="checkbox" ng-model="selectedBranchChannel.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Branch_code_Channel__c.Label}" /></td>
                                                                        <td><autocomplete ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" selection="BranchChannel" object="ASI_TnE_Branch_Channel__c" ng-model="selectedBranchChannel.item.label"></autocomplete></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>
                                                            <apex:panelGroup id="PromotionCodeGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" type="checkbox" ng-model="selectedPromotionCode.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Promotion_Code__c.Label}" /></td>
                                                                        <td><autocomplete ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" selection="PromotionCode" object="ASI_MFM_Plan__c" ng-model="selectedPromotionCode.item.label"></autocomplete></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>
                                                            <apex:panelGroup id="WhereGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(isEditable!=1, true, false)}"  type="checkbox" ng-model="selectedWhereVenueName.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Where__c.Label}" /></td>
                                                                        <td><autocomplete ng-readOnly="{!IF(isEditable!=1, true, false)}" selection="WhereVenueName" object="ASI_CRM_AccountsAdditionalField__c" ng-model="selectedWhereVenueName.item.label"></autocomplete></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>
                                                            <apex:panelGroup id="DeptInChargeGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(isEditable!=1, true, false)}"  type="checkbox" ng-model="selectedDeptInCharge.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Dept_in_Charge__c.Label}" /></td>
                                                                        <td><select ng-disabled="{!IF(isEditable!=1, true, false)}" ng-model="selectedDeptInCharge.ASI_TnE_Dept_in_Charge__c" ng-options="x.value as x.label for x in deptInCharge" ng-change="changePicklist('selectedDeptInCharge.IsSelected')"></select></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>                                                    
                                                            <apex:panelGroup id="SupportedItemGroup">
                                                                <table class="table table-bordered">
                                                                    <tr>
                                                                        <td><apex:outputLabel value="Select" /></td>
                                                                        <td><input ng-readOnly="{!IF(isEditable!=1, true, false)}"  type="checkbox" ng-model="selectedSupportedItem.IsSelected"/></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td><apex:outputLabel value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Supported_Item__c.Label}" /></td>
                                                                        <td><select  ng-disabled="{!IF(isEditable!=1, true, false)}" ng-model="selectedSupportedItem.ASI_TnE_Supported_Item__c" ng-options="x.value as x.label for x in supportedItems" ng-change="changePicklist('selectedSupportedItem.IsSelected')"></select></td>
                                                                    </tr>
                                                                </table>
                                                            </apex:panelGroup>                                                      



                                                        </apex:panelGrid>

                                                        <apex:commandButton styleClass="btn btn-default btn-xs" value=" Mass Assign " html-ng-click="doAssign($event)" status="ActionStatus" reRender="HeaderForm,messageDiv" rendered="{!IF(AND(isEditable!=1, isEditable!=4), false, true)}" />
                                                    </apex:pageblocksection>                                              

                                                    <apex:pageBlockButtons id="buttons">
                                                        <apex:commandButton styleClass="btn btn-default btn-sm" value=" Save " html-ng-click="doSave($event)" status="ActionStatus" reRender="HeaderForm,messageDiv" rendered="{!IF(AND(isEditable!=1, isEditable!=4), false, true)}" />
                                                        <apex:commandButton styleClass="btn btn-default btn-sm"  value=" Cancel " action="{!Cancel}" reRender="form,messageDiv" />
                                                    </apex:pageBlockButtons>

                                                    <div class="message errorM3 ng-hide alert-danger" role="alert" ng-show="errorMessages.length > 0" id="messageDiv">
                                                        <strong><span>Error, Can not Save! Please check following error message:<br/></span></strong>
                                                        <span>
                                                            <ul ng-repeat="errorMsg in errorMessages track by $index" style="padding-left:10px;padding-top:0px;margin:0px">
                                                                <li ng-bind="errorMsg"></li>
                                                            </ul>
                                                        </span>                                            
                                                    </div>
                                                    <apex:pageblocksection title="TnE KR Claim Detail">
                                                        <apex:outputPanel styleClass="table-responsive">

                                                            <b>Total# of Records:</b><span class="label label-primary">({{ResultData.length}} Results)</span> <br /><br />     
                                                            <div class="boldRedText">Mandatory Fields: Details of Expense, Customer, Dept in Charge, Sub brand, Branch Code+Channel, Promotion Code, Sales Year, Sales Month, Supported Item</div><br /><br /> 
                                                            <table class="table table-bordered table-hover resultTable"   cellpadding="0" cellspacing="0" >
                                                                <thead class="thead-inverse">
                                                                    <tr>
                                                                        <th><input type="checkbox" ng-model="selectedAll" ng-click="selectAll()" /></th>
                                                                        <th>#</th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Receipt_Date__c.Label}" /></th>  
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Receipt_Time__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Business_Name__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Business_Address__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Receipt_Amount_Displaying__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Salesman__c.Label}" /></th>  
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Details_of_Expense__c.Label}" /></th>   
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Customer__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Dept_in_Charge__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Sub_Brand__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Branch_code_Channel__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Promotion_Code__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Sales_Year__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Sales_Month__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_KR_Where__c.Label}" /></th> 
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Supported_Item__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Total_Number_Pax__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_GnH_Type__c.Label}" /></th>
                                                                        <th><apex:outputText value="{!$ObjectType.ASI_TnE_ClaimDetail__c.Fields.ASI_TnE_Recipient_Type__c.Label}" /></th>
                                                                        <th><apex:outputText value="G&H Form" /></th>
                                                                        <th>
                                                                            <apex:outputText value="G&H Recipient" />
                                                                            <button type="button" ng-click="ctrl.expandAll(allExpanded = !allExpanded)">
                                                                                <span ng-bind="allExpanded ? '-' : '+'"></span>
                                                                            </button>
                                                                        </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr ng-repeat-start="item in ResultData| startFrom: pagination.page * pagination.perPage | limitTo: pagination.perPage" class="my-repeat-animation" ng-class="{activeRow: item.Id == '' || item.IsChanged}">
                                                                        <td>
                                                                            <input ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" type="checkbox" ng-model="item.IsSelected"  ng-change="changeClaimDetail($index)"/>
                                                                        </td>
                                                                        <td>
                                                                            {{$index+1+ numberOfRecordPerPage * pagination.page}}
                                                                        </td>                                                            
                                                                        <td>
                                                                            {{item.ASI_TnE_Receipt_Date__c| date:'MM/dd/yyyy'}}
                                                                        </td>
                                                                        <td>
                                                                            {{item.ASI_TnE_KR_Receipt_Time__c}}
                                                                        </td>    
                                                                        <td>
                                                                            {{item.ASI_TnE_KR_Business_Name__c}}
                                                                        </td>
                                                                        <td>
                                                                            {{item.ASI_TnE_KR_Business_Address__c}}
                                                                        </td>
                                                                        <td>
                                                                            {{item.ASI_TnE_Receipt_Amount_Displaying__c}}
                                                                        </td>
                                                                        <td>
                                                                            <autocomplete ng-readOnly="{!IF(isEditable!=1, true, false)}" selection="SalesmanName" object="User" index="{{$index}}" ng-model="item.SalesmanName" ng-change="changeClaimDetail($index)"></autocomplete> 
                                                                        </td>
                                                                        <td>
                                                                            <textarea class="required" ng-disabled="{!IF(isEditable!=1, true, false)}" row="3" maxlength="500" ng-model="item.ASI_TnE_Details_of_Expense__c" ng-change="changeClaimDetail($index)"/>
                                                                        </td>                                                              
                                                                        <td>
                                                                            <autocomplete class="required" ng-readOnly="{!IF(isEditable!=1, true, false)}" selection="CustomerName" object="ASI_CRM_AccountsAdditionalField__c" index="{{$index}}" ng-model="item.CustomerName" ng-change="changeClaimDetail($index)"></autocomplete> 
                                                                        </td>          
                                                                        <td>
                                                                            <select class="required"  ng-disabled="{!IF(isEditable!=1, true, false)}" ng-model="item.ASI_TnE_Dept_in_Charge__c" ng-options="x.value as x.label for x in deptInCharge" ng-change="changeClaimDetail($index); changeGnHColumn(item.PromotionCode,$index); verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,$index);"></select>
                                                                        </td>  
                                                                        <td>
                                                                            <autocomplete class="required" ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" selection="SubbrandName" object="ASI_KOR_Sub_Brand__c" index="{{$index}}" ng-model="item.SubbrandName" ng-change="changeClaimDetail($index)"></autocomplete>                    
                                                                        </td>
                                                                        <td>
                                                                            <autocomplete class="required"  ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}" selection="BranchChannel" object="ASI_TnE_Branch_Channel__c" index="{{$index}}" ng-model="item.BranchChannel" ng-change="changeClaimDetail($index)"></autocomplete>                    
                                                                        </td>   
                                                                        <td>
                                                                            <autocomplete class="required"  ng-readOnly="{!IF(AND(isEditable!=1, isEditable!=4), true, false)}"  selection="PromotionCode" object="ASI_MFM_Plan__c" index="{{$index}}" ng-model="item.PromotionCode" ng-change="changeClaimDetail($index);"></autocomplete>                    
                                                                        </td>                                                              
                                                                        <td>
                                                                            <input class="required"  type="text" ng-readOnly="{!IF(isEditable!=1, true, false)}" ng-model="item.ASI_TnE_Sales_Year__c" ng-change="changeClaimDetail($index)"/>
                                                                        </td>
                                                                        <td>
                                                                            <input class="required"  type="text" ng-readOnly="{!IF(isEditable!=1, true, false)}" ng-model="item.ASI_TnE_Sales_Month__c" ng-change="changeClaimDetail($index)"/>
                                                                        </td>
                                                                        <td>
                                                                            <autocomplete ng-readOnly="{!IF(isEditable!=1, true, false)}" selection="WhereVenueName" object="ASI_CRM_AccountsAdditionalField__c" index="{{$index}}" ng-model="item.WhereVenueName" ng-change="changeClaimDetail($index)"></autocomplete>                    
                                                                        </td>                                                             
                                                                        <td>
                                                                            <select class="required" ng-disabled="{!IF(isEditable!=1, true, false)}" ng-model="item.ASI_TnE_Supported_Item__c" ng-options="x.value as x.label for x in supportedItems" ng-change="changeClaimDetail($index); verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,$index); changeGnHColumn(item.PromotionCode,$index)"></select>
                                                                        </td>
                                                                        <td>
                                                                            <input class="required"  type="number" ng-readOnly="{!IF(isEditable!=1, true, false)}" ng-model="item.ASI_TnE_Total_Number_Pax__c" ng-init="checkPAX(item.ASI_TnE_Total_Number_Pax__c, $index)" ng-change="changeClaimDetail($index); verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,$index)"/>
                                                                        </td>
                                                                        <td>
                                                                            <select id="GnHType{{$index}}" class="required" ng-init="checkDisabled(item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,item.GnHForm,$index)" ng-disabled="item.GnHTypeDisabled" ng-model="item.ASI_GnH_Type__c" ng-options="x.value as x.label for x in gnhType" ng-change="changeClaimDetail($index);verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,$index)"></select>
                                                                        </td> 
                                                                        <td>
                                                                            <select id="Recipient{{$index}}" class="required" ng-init="checkDisabled(item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,item.GnHForm,$index)" ng-disabled="item.RecipientDisabled" ng-model="item.ASI_TnE_Recipient_Type__c" ng-options="x.value as x.label for x in recipientType" ng-change="changeClaimDetail($index);verifyWithThreshold(item.ASI_TnE_Dept_in_Charge__c,item.PromotionCode,item.ASI_TnE_Supported_Item__c,item.ASI_TnE_Receipt_Amount__c,item.ASI_TnE_Total_Number_Pax__c,item.ASI_GnH_Type__c,item.ASI_TnE_Recipient_Type__c,$index)"></select>
                                                                        </td>
                                                                        <td>
                                                                            <autocomplete id="GnHForm{{$index}}" ng-readOnly="item.gnhFormDisabled" selection="GnHForm" object="ASI_GnH_Request__c" index="{{$index}}" ng-model="item.GnHForm" ng-change="changeClaimDetail($index)"></autocomplete>
                                                                        </td>
                                                                        <td>                           
                                                                            <expand type="button" ng-click="expanded = !expanded" ng-bind="expanded ? '-' : '+'"></expand>
                                                                        </td>
                                                                    </tr>
                                                                    <tr ng-repeat-end="ng-repeat-end" ng-show="expanded">
                                                                        <td colspan="15"></td>
                                                                        <td colspan="8">
                                                                            <table class="table table-bordered table-hover resultTable" cellpadding="0" cellspacing="0">
                                                                                <thead class="thead-inverse">
                                                                                    <tr>
                                                                                        <th>
                                                                                            <apex:outputLink html-ng-click="renderAddRecipientField($index)" rendered="{!IF(isEditable=1, true, false)}">
                                                                                                <apex:outputText value="Add New Recipient" />
                                                                                            </apex:outputLink>
                                                                                            <br/>
                                                                                            <autocomplete id="GnHRecipient{{$index}}" Class ="hide" style="height:25px" ng-readOnly=""  selection="GnHRecipient" object="ASI_GnH_Recipient_Master__c" index="{{$index}}" ng-model="typedRecipient"></autocomplete>
                                                                                            <!--Button id="button{{$index}}" Class ="hide"  style="height:25px; text-align:center" value="Add"  ng-click="addRecipient($index,typedRecipient)" status="ActionStatus"  >Add</Button-->
                                                                                        </th>
                                                                                        <th><apex:outputText value="#" /></th>
                                                                                        <th><apex:outputText value="Recipient Name" /></th>
                                                                                        <th><apex:outputText value="Organisation" /></th>
                                                                                        <th><apex:outputText value="Company Address" /></th>
                                                                                        <th><apex:outputText value="Title" /></th>
                                                                                        <th><apex:outputText value="Mobile" /></th>
                                                                                        <th><apex:outputText value="Email" /></th>
                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody ng-repeat="recipient in item.GnHRecipient" class="my-repeat-animation">
                                                                                    <tr>
                                                                                        <td>
                                                                                            <apex:outputLink html-ng-click="deleteRecipient($parent.$index,$index)">
                                                                                                <apex:outputText value="Delete" />
                                                                                            </apex:outputLink>
                                                                                        </td>
                                                                                        <td>{{$index+1}}</td>
                                                                                        <td>{{recipient.ASI_GnH_Recipient__r.Name}}</td>    
                                                                                        <td>{{recipient.ASI_GnH_Recipient__r.ASI_GnH_Organization__c}}</td> 
                                                                                        <td>{{recipient.ASI_GnH_Recipient__r.ASI_GnH_Company_Address__c}}</td> 
                                                                                        <td>{{recipient.ASI_GnH_Recipient__r.ASI_GnH_Title__c}}</td>   
                                                                                        <td>{{recipient.ASI_GnH_Recipient__r.ASI_GnH_Mobile__c}}</td>
                                                                                        <td>{{recipient.ASI_GnH_Recipient__r.ASI_GnH_Email__c}}</td>   
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                            <div class="row">        
                                                                <nav>
                                                                    <ul class="pagination" >
                                                                        <li>
                                                                            <div class="pull-left paddright paddtop"><a ng-click="pagination.toPageId(0)">First&nbsp;&nbsp;</a></div>
                                                                        </li>
                                                                        <li>                        
                                                                            <a href="#" aria-label="Previous" ng-click="pagination.prevPage()">
                                                                                <span aria-hidden="true">&laquo;</span>
                                                                            </a>
                                                                        </li>
                                                                        <li ng-repeat="n in [] | range: pagination.numPages" ng-class="{active: n == pagination.page}">
                                                                            <a href="" ng-click="pagination.toPageId(n)">{{n + 1}}</a>
                                                                        </li>
                                                                        <li>
                                                                            <a href="#" aria-label="Next" ng-click="pagination.nextPage()">
                                                                                <span aria-hidden="true">&raquo;</span>
                                                                            </a>
                                                                        </li>
                                                                        <li>
                                                                            <div class="pull-left paddright paddtop"><a ng-click="pagination.toPageId(pagination.numPages - 1)">&nbsp;&nbsp;Last</a></div>
                                                                        </li>
                                                                    </ul>
                                                                </nav>        
                                                            </div>
                                                        </apex:outputPanel>
                                                    </apex:pageblocksection>  
                                                </apex:pageBlock>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div ng-show="isLoading" class="waiting-box"><span  ng-show="isLoading" >Please wait...<img  ng-show="isLoading" src="/img/loading.gif" /></span></div>
                        </div>   
                    </div>
                </div>
            </apex:form>
        </div>

    </body>
</apex:page>