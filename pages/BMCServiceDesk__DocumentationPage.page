<apex:page controller="BMCServiceDesk.DocumentationController" sidebar="false" showHeader="false" standardStylesheets="false">
    <c:CommonIncludes isExtJS4="true"/>
    <link rel="stylesheet" href="{!$Resource.SDEFStyles}/bmc-dpl-common.css" type="text/css" />
    <link rel="stylesheet" href="{!$Resource.Salesforce1}/SelfService/DPLLibraries/css/Salesforce-Font.css" type="text/css" />
    <link rel="stylesheet" href="{!URLFOR($Resource.Salesforce1, 'SelfService/DPLLibraries/css/dpl-iconfont.css')}" type="text/css" /> 
	
    <script src="{!$Resource.SDEFCommonJS}/forcetk.js"  type="text/javascript" ></script>
            <script type="text/javascript">
            	var __sfdcSessionId = '{!GETSESSIONID()}';
            	var client = new forcetk.Client();
      			client.setSessionToken('{!$Api.Session_ID}');
            </script>
    <script src="/soap/ajax/40.0/connection.js" type="text/javascript"></script>
    
<style>
 .inputfileCls{
  font-family:Tahoma, MS Sans Serif;
  height:23px;
  height/*\**/: 22px\9;
  *height:22px;
 }
  .5pxHeight{
  height:5px;
  *height:0px;
 }
 
 .clsPanelInputLabelTD {
	-x-system-font: none;
	color: #000000;
	font-family: 'Salesforce Sans',Arial,sans-serif;
	font-size: 12px;
	white-space: normal;
	padding-left:10px;
	padding-bottom:10px;
    height: 35px;
}   
 .bmc-btn-primary, .bmc-btn-small {
    font-family: 'Salesforce Sans',Arial,sans-serif;
    font-weight: normal !important;
    border: 1px solid #d75f00;
}
.bmc-btn-primary-disabled {
    background-color: #f86e00;
    cursor: not-allowed;
    opacity: 0.6;
    filter: alpha(opacity=60);
}
.bmc-btn-primary {
    height: 22px;
    padding: 0px 14px;
    font-size: 12px;
    line-height: 14px;
    display: inline-block;
    border-radius: 2px;
    cursor: pointer;
    vertical-align: middle;
    white-space: nowrap;
    background-image: none !important;
    color: #ffffff !important;
    border-width: 1px;
    border-style: solid;
    border-color: #f86e00 !important;
    background-color: #F86E00 !important;
}   
 .bmc-btn-small {
    height: 22px;
    padding: 0px 10px;
    font-size: 12px;
    line-height: 14px;
    display: inline-block;
    color: #333;
    border: 1px solid #A5A5A5 !important;
    border-radius: 2px;
    cursor: pointer;
    vertical-align: middle;
    white-space: nowrap;
    background-image: none !important;
    background-color: #ffffff !important;
}
    
/* Hide the browser's default radio button */
input[type="radio"]{
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

.rf-filter-radio {
    position: relative;
    padding-left: 23px;
    margin-bottom: 4px;
    cursor: pointer;
    font-size: 13px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.rf-filter-radio input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.rf-radio {
    position: absolute;
    top: 0;
    left: 0;
    height: 16px;
    width: 16px;
    background-color: #fff;
    border: 1px solid #bebec9;
    border-radius: 2px;
    
}

/* On mouse-over, add a grey background color */
.rf-filter-radio:hover input ~ .rf-radio {
    background-color: #fff;
	border: 1px solid #999999;
	border-radius: 2px;
    
}

/* On mouse-over, for cheked , add a orange background color */
.rf-filter-radio:hover input:checked ~ .rf-radio {
    background-color: #d75f00;
    border: 1px solid #d75f00;
	border-radius: 2px; 
    
}
/* When the checkbox is checked, add a orange background */
.rf-filter-radio input:checked ~ .rf-radio {
   
    background-color: #fa6e00;
	border: 1px solid #d75f00;
	border-radius: 2px; 
   
}

/* Create the rf-radio/indicator (hidden when not checked) */
.rf-radio:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the rf-radio when checked */
.rf-filter-radio input:checked ~ .rf-radio:after {
    display: block;
}

/* Style the rf-radio/indicator */
.rf-filter-radio .rf-radio:after {
    left: 4px;
    top: 0px;
    width: 5px;
    height: 11px;
    border: solid white;
    border-width: 0px 2px 2px 0px;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
 
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
/* IE10+ CSS styles go here */
    #inputFileHtml, .inputFile {
		width: 200px !important;
	}
}
@supports (-ms-ime-align: auto) {
    #inputFileHtml, .inputFile {
    	width: 200px !important;
	}
}

</style>
    <apex:form >
        <!-- apex:panelGrid columns="3"-->
        <table  width="100%" >
		    <tr><td height="10"/></tr>
            <tr>
                <td class="clsPanelInputLabelTD" style="vertical-align: middle;">
                    <label class="rf-filter-radio">
                            <input type="radio" id="fileRadio" name="group1" onclick="checkValidation();" checked="true" /> 
                        	<span class="rf-radio" ></span>
                    </label>
                </td>
                <td class="clsPanelInputLabelTD" style="vertical-align: middle;">
                    <apex:outputText value="{!$Label.bmcservicedesk__file}"/>
                </td>
                <td class="clsPanelInputLabelTD" style="vertical-align: middle;">
                    <apex:outputPanel rendered="{!isFileEnabled}" layout="block">
                    	     <input type="file" id="inputFileHtml" class="" onchange="validateFile();"
            								size="51"   />	
                    		
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!NOT(isFileEnabled)}" layout="block">
                       <apex:inputFile fileName="{!attachment.name}" id="inputFile" styleclass="inputFile" fileSize="{!filesize}" value="{!attachment.body}" onchange="validateFile();" size="51" />
                    </apex:outputPanel>
                 <div id="errorDiv" style="color:red;padding-left:3px;"> {!errorMsg} </div>
                 <div id="errorDivMsg" style="color:red;padding-left:3px;"> <apex:messages rendered="{!OR(errorMsg==null,errorMsg=='')}" /> </div>
                </td>
                    
            </tr>  
         <tr><td class="5pxHeight"/></tr> 		
            <tr>
                <td class="clsPanelInputLabelTD" style="vertical-align: middle;">
                        <label class="rf-filter-radio">
                            <input type="radio" id="urlRadio" onclick="checkValidation();"  name="group1" />
                        	<span class="rf-radio" ></span>
                        </label>
                </td>
                <td class="clsPanelInputLabelTD" style="vertical-align: middle;">
                    <apex:outputText value="{!$Label.bmcservicedesk__url}"/>
                </td>
                <td class="clsPanelInputLabelTD" style="vertical-align: middle; padding-right: 20px;">
					<apex:outputText value="CRUDFLSCheck# No association with any sObject fields." rendered="false"/>
                    <apex:inputtext id="inputtext" onchange="validateFile();" onblur="validateFile();" maxlength="255" onkeyup="validateFile();" value="{!url}"  style="height:20px;font-family:Salesforce sans;font-size:12px;" size="51"/> 
                </td>
            </tr>
            
            <tr style="background: #f5f5f5; border-top: 1px solid #d9d9d9;">
                <td >
                </td>
                <td>
                </td>
                <td align="right"  style="padding: 10px;" >
                    <apex:commandButton value="{!$Label.bmcservicedesk__cancel}" onclick="window.parent.close();" styleClass="bmc-btn-small"/>
                    <apex:outputPanel rendered="{!NOT(isFileEnabled)}" layout="inline" style="padding-left: 10px;">
                   		<apex:commandButton action="{!attachFile}" rendered="{!NOT(isFileEnabled)}" id="okBtn" value="{!$Label.bmcservicedesk__ok}" styleClass="bmc-btn-primary"/>
                    </apex:outputPanel>	
                    <apex:outputPanel rendered="{!isFileEnabled}" layout="inline" style="padding-left: 10px;padding-right: 20px;">
                          <input type="button" id="okBtn" value="{!$Label.bmcservicedesk__ok}" onclick="attachFileToSalesforceFile();" class="bmc-btn-primary"/>
                    </apex:outputPanel>	 
                    <apex:actionfunction name="setContentId" action="{!setContentId}" rerender="none">
                          <apex:param name="contentDocId" assignTo="{!contentDocId}" value=""/>
                     </apex:actionfunction>
               	</td>
            </tr>
           
        </table>
        
        <!-- /apex:panelGrid -->
            <script>
            document.getElementById('{!$Component.inputtext}').disabled=true;
            
            var pleaseWaitMsg = '{!JSENCODE($Label.PleaseWait)}';
            var myMask = new Ext.LoadMask(Ext.getBody(), {
                floating: {shadow: false},
                msgCls: "d-loader-container",
                msg:'<ul class="d-loading"><li class="d-loading__stick d-loading__stick_1"></li><li class="d-loading__stick d-loading__stick_2"></li><li class="d-loading__stick d-loading__stick_3"></li><li class="d-loading__stick d-loading__stick_4"></li><li class="d-loading__stick d-loading__stick_5"></li><li class="d-loading__stick d-loading__stick_6"></li><li class="d-loading__stick d-loading__stick_7"></li><li class="d-loading__stick d-loading__stick_8"></li><li class="d-loading__stick d-loading__stick_9"></li><li class="d-loading__stick d-loading__stick_10"></li><li class="d-loading__stick d-loading__stick_11"></li><li class="d-loading__stick d-loading__stick_12"></li></ul><div>'+ pleaseWaitMsg + '</div>'
            	});
            
            var WinMsg;
            var flag=false;
            var MaxFileSize = {!MaxFileSize};
            var isFileEnabled = {!isFileEnabled};
            var okBtn;
            if(isFileEnabled){
            	okBtn = document.getElementById('okBtn');
            } else {
            	okBtn = document.getElementById('{!$Component.okBtn}');	
            }
            okBtn.disabled=true;
            okBtn.style="background-color: #f86e00;cursor: not-allowed;opacity: 0.6;";
            var idValue='{!JSENCODE(idValue)}';
                function checkValidation(){                
                    var checkFile = document.getElementById('fileRadio').checked;
                    var checkUrl = document.getElementById('urlRadio').checked;
                     document.getElementById('errorDiv').style.display='none';
                    document.getElementById('errorDivMsg').style.display='none';
                    if(checkFile){
                    	okBtn.disabled=true;
                        okBtn.style="background-color: #f86e00;cursor: not-allowed;opacity: 0.6;";
                        document.getElementById('{!$Component.inputtext}').disabled=true;
                        document.getElementById('{!$Component.inputtext}').value='';
                        if(isFileEnabled){
                        	document.getElementById('inputFileHtml').disabled = false;
	                        var uploadedValue = document.getElementById('inputFileHtml').files[0];
                        } else {
                        	document.getElementById('{!$Component.inputFile}').disabled=false;
	                        var uploadedValue =document.getElementById('{!$Component.inputFile}').value;	                        
                        }
                        if(flag && Ext.isIE && uploadedValue !=''){
	                         okBtn.disabled=false;
                             okBtn.style="";
	                         flag=true;
	                    }                       
                    }else if(checkUrl){
                        okBtn.disabled=true;
                        okBtn.style="background-color: #f86e00;cursor: not-allowed;opacity: 0.6;";
                        if(isFileEnabled){
                        	document.getElementById('inputFileHtml').disabled = true;
                        	document.getElementById('inputFileHtml').value=null;
                        } else {
                        	document.getElementById('{!$Component.inputFile}').disabled=true;
                        	document.getElementById('{!$Component.inputFile}').value=null;
                        }
                        document.getElementById('{!$Component.inputtext}').disabled=false;
						flag=true;
                    }
                }
                
                
                function validateFile(){
                    var url = document.getElementById('{!$Component.inputtext}').value;
                    var file;
                    if(isFileEnabled)
                    	file = document.getElementById('inputFileHtml').value;
                   	else 
                   		file = document.getElementById('{!$Component.inputFile}').value;
                    if((url != null && url != '' && url != 'null') ||(file != null && file != '' && file != 'null')){
                        okBtn.disabled=false;
                        okBtn.style="";
                        var v = file;
                        var filename = v.replace(/^.*\\/, '') ;
                        var fileLength=filename.length;
                        if(fileLength > 255){
                           document.getElementById('errorDiv').innerHTML = '{!JSENCODE($Label.FileNameLimitExceeded)}';
                           document.getElementById('errorDiv').style.display='inline';
                           okBtn.disabled=true;
                           okBtn.style="background-color: #f86e00;cursor: not-allowed;opacity: 0.6;";
                           if(isFileEnabled)
                           		document.getElementById('inputFileHtml').value=null;
                           else
                           		document.getElementById('{!$Component.inputFile}').value=null;
                        }else{
                            document.getElementById('errorDiv').style.display='none';
                            okBtn.disabled=false;
                            okBtn.style="";
                    	}
                    }
                }
             
             	function attachFileToSalesforceFile(){
					myMask.show();
             		
                    if( document.getElementById('urlRadio').checked ) {
                    	var URLvar = document.getElementById('{!$Component.inputtext}').value
                        URLvar = httpIntranetUrlCheck(URLvar);
                        if(!URLvar){
                            myMask.hide();
                            GetMessageBox( 'bmc-message' ).show({
								title:'{!JSENCODE($Label.Error)}',
                                msg:'{!JSENCODE($Label.invalidURL)}', 
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.Msg.OK            
                            });
                            return;
                        }else{
                            setContentId(null);
							myMask.hide();
						}
                    } else { 
						var fileToAttach = '';
						fileToAttach = document.getElementById("inputFileHtml").files[0];
						if(fileToAttach.size == 0){
							myMask.hide();
							showInlineError('{!JSENCODE($Label.FileLengthZeroKB)}');
						}
						else if(fileToAttach.size<MaxFileSize && fileToAttach.name.length< 255){
							client.createBlob('ContentVersion', {
								  Origin: 'C', 
								  PathOnClient: fileToAttach.name,
								  Title:fileToAttach.name
								  
							  }, fileToAttach.name, 'VersionData', fileToAttach, function(response){
								   
									   var versionRecord = sforce.connection.query("select id, ContentDocumentId from ContentVersion WHERE Id ='"+response.id+"' limit 1");
										records = versionRecord.getArray("records");
										var documentLink = new sforce.SObject('ContentDocumentLink'); 
										documentLink.ContentDocumentId = records[0].ContentDocumentId; 
										documentLink.LinkedEntityId = idValue;
										documentLink.ShareType = 'V';
										sforce.connection.create([documentLink], {
											onSuccess : function(result, source) {
												if (result[0].getBoolean("success")) {
												myMask.hide();
													setContentId(records[0].ContentDocumentId);
												}
												else {
													GetMessageBox( 'bmc-message' ).show({ msg:error.message, minWidth:300, height:'auto', 
															buttons:Ext.MessageBox.OK, cls:'textAlignCenter' });
												}
												
											},
											onFailure : function(error, source) {
												GetMessageBox( 'bmc-message' ).show({ msg:error.message, minWidth:300, height:'auto', 
													buttons:Ext.MessageBox.OK, cls:'textAlignCenter' });
											}
										});	
								   }, function(request, status, response){
									   GetMessageBox( 'bmc-message' ).show({ msg:status, minWidth:300, height:'auto', 
											buttons:Ext.MessageBox.OK, cls:'textAlignCenter' });			    			  
				
							  });
						  }else{
								myMask.hide();
								if(fileToAttach.name.length> 255){
								   showInlineError('{!JSENCODE($Label.FileNameLimitExceeded)}');
								}
								if(fileToAttach.size>MaxFileSize){
									showInlineError('{!JSENCODE($Label.FileLimit)}');
								}
						  }
					}
             	}
             
				function showInlineError(errorMsg){
					errorDiv = document.getElementById('errorDiv');
					errorDiv.innerHTML = errorMsg;
					errorDiv.style.display='inline';
					okBtn.disabled=true;
					okBtn.style="background-color: #f86e00;cursor: not-allowed;opacity: 0.6;";
					document.getElementById('inputFileHtml').value=null;
				}
             	function GetMessageBox(baseCls){
                    if(WinMsg == null){
                        WinMsg = Ext.create('Ext.window.MessageBox');
                    }		
                    WinMsg.baseCls = baseCls;
                    WinMsg.id = 'messageBox';
                    return WinMsg;
                }
            </script>
            
    </apex:form>
    
    <style>
    body {
    font-family:Tahoma, MS Sans Serif;
    font-size:11px;
    }
</style>

</apex:page>