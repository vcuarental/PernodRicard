<apex:page controller="ASI_CRM_TW_PromotionCalendarMonthCON" action="{!initPage}" title="Promotion Calendar" showHeader="true" sidebar="false" showChat="false">
    <apex:stylesheet id="fullCalStyleSheet" value="{!URLFOR($Resource.ASI_HK_CRM_FullCalendar_130516, '/fullcalendar-1.5.4/fullcalendar/fullcalendar.css')}"/>
    <apex:stylesheet id="hpiStyleSheet" value="{!URLFOR($Resource.ASI_HK_CRM_HoverPopupInfo, '/hover-popup-info/css/common.css')}"/>
    <apex:includeScript id="jqueryScript" value="{!URLFOR($Resource.ASI_HK_CRM_FullCalendar_130516, '/fullcalendar-1.5.4/jquery/jquery-1.8.1.min.js')}"/>
    <apex:includeScript id="fullCalScript" value="{!URLFOR($Resource.ASI_HK_CRM_FullCalendar_130516, '/fullcalendar-1.5.4/fullcalendar/fullcalendar.min.js')}"/>
    <apex:includeScript id="hpiScript" value="{!URLFOR($Resource.ASI_HK_CRM_HoverPopupInfo, '/hover-popup-info/js/common.js')}"/>
    
    <style type="text/css">
        #calendar {
            margin-top:0px;
        }
        #calendar .fc-widget-header {
            background-color:#F2F3F3;
        }
        #calendar .fc-widget-content {
            background-color:#FFFFFF;
            cursor:pointer
        }
        #calendar .fc-sun {
            background-color:#FFD2D4;
        }
        #calendar .fc-sat {
            background-color:#E9E9E9;
        }
        #calendar .fc-widget-content:hover {
            background-color:#E3F3FF;
        }
        #calendar .pmtEvent {
            background-color:#6777CC;
            color:#FFFFFF;
            cursor:pointer;
        }
    </style>
    
    <apex:form id="wholeForm" style="width:1220px">
        <apex:outputPanel id="dummyPanel"></apex:outputPanel>
        <apex:actionFunction name="renderClickEvent" action="{!redirectToViewPage}" reRender="dummyPanel">
            <apex:param name="pmtId" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="renderClickDate" action="{!URLFOR($Action.ASI_HK_CRM_Promotion__c.New)}" reRender="dummyPanel">
            <apex:param name="startDate" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="renderCalenderTypeChange" action="{!redirectToAnotherCalendarType}" reRender="dummyPanel"/>
        <apex:pageMessages id="pageMessages"/>
        <apex:pageBlock id="mainPageBlock">
            <apex:outputPanel id="calTypeSelectPanel" layout="block" style="float:left;height:25px;">
                <apex:outputLabel value="{!$Label.ASI_HK_CRM_VF_PROMOTION_CalendarType}: " for="calTypeSelectList" style="font-weight:bold;vertical-align:middle"/>
                <apex:selectList id="calTypeSelectList" value="{!selectedCalendarType}" size="1" multiselect="false"
                    style="vertical-align:middle"
                    onchange="renderCalenderTypeChange()">
                    <apex:selectOptions value="{!calendarViewTypeList}"/>
                </apex:selectList>
            </apex:outputPanel>
            <apex:commandButton action="{!URLFOR($Action.ASI_HK_CRM_Promotion__c.New)}" value="{!$Label.ASI_HK_CRM_VF_COMMON_BTN_New}" reRender="dummyPanel" style="margin-left:300px"/>

            <apex:outputPanel id="SecondBar" layout="block" style="height:90px;clear:both;">
                <apex:outputPanel id="calTypeSelectPanel2" layout="block" style="float:left;height:90px;">

                    
                    <apex:panelGrid columns="13" id="abcd">
                        <apex:outputLabel value="{!$ObjectType.ASI_HK_CRM_Promotion__c.fields.ASI_CRM_Channel__c.label}: " for="calTypeSelectList" style="font-weight:bold;vertical-align:middle"/>
                        <apex:selectList id="sel2_1" value="{!leftselected2}" multiselect="true" size="4" style="width: 90px">
                            <apex:selectOptions value="{!unSelectedValues2}" />
                        </apex:selectList>
                            <apex:panelGroup >
                                <apex:commandButton value=">" action="{!selectclick2}" reRender="sel2_1, sel2_2">
                                </apex:commandButton>
                                <br/><br/>
                                <apex:commandButton value="<" action="{!unselectclick2}" reRender="sel2_1, sel2_2">
                                </apex:commandButton>
                            </apex:panelGroup>
                        <apex:selectList id="sel2_2" value="{!rightselected2}" multiselect="true" size="4" style="width: 90px">
                            <apex:selectOptions id="Channel" value="{!SelectedValues2}" />
                        </apex:selectList>

                        <!--<apex:outputLabel value="{!$ObjectType.ASI_CRM_Promotion_Unit__c.fields.ASI_CRM_Sub_brand__c.label}: " for="subbrandSelectList" style="font-weight:bold;vertical-align:middle"/>
                        <apex:inputField id="SubBrand" value="{!promotionunit.ASI_CRM_Sub_brand__c}">
                            <apex:actionSupport event="onchange" action="{!getitemgrouplvalue}" rerender="SecondBar"/> 
                        </apex:inputField>-->

                        <apex:outputLabel value="Item Group: " style="font-weight:bold;vertical-align:middle"/>
                        <apex:selectList id="sel1" value="{!leftselected}" multiselect="true" size="4" style="width: 90px">
                            <apex:selectOptions value="{!unSelectedValues}" />
                        </apex:selectList>
                            <apex:panelGroup >
                                <!--<apex:commandButton value=">" action="{!selectclick}" reRender="SecondBar">-->
                                <apex:commandButton value=">" onclick="additemGroup(); return false;">
                                </apex:commandButton>
                                <br/><br/>
                                <!--<apex:commandButton value="<" action="{!unselectclick}" reRender="SecondBar">-->
                                <apex:commandButton value="<" onclick="removeitemgroup(); return false;">
                                </apex:commandButton>
                            </apex:panelGroup>
                        <apex:selectList id="sel2" value="{!rightselected}" multiselect="true" size="4" style="width: 90px">
                            <apex:selectOptions id="ItemGroup" value="{!SelectedValues}" />
                        </apex:selectList>

                        <apex:outputLabel value="{!$ObjectType.ASI_HK_CRM_Promotion__c.fields.ASI_HK_CRM_Background_Color__c.label}: " for="backgroundcoloeSelectList" style="font-weight:bold;vertical-align:middle"/>
                        <apex:inputField id="Bgcolor" value="{!promotion.ASI_HK_CRM_Background_Color__c}"/>

                        <apex:commandButton value="Filter" onclick="removeAllevents(); return false;"/>
                    </apex:panelGrid>


                </apex:outputPanel>
                <div style="height:1px;clear:right;"></div>
            </apex:outputPanel>

            <apex:outputPanel id="calendarPanel" layout="block">
                <apex:inputHidden id="curYearHidden" value="{!curYearStr}"/>
                <apex:inputHidden id="curMonthHidden" value="{!curMonthStr}"/>
                <c:ASI_HK_CRM_HoverPopupInfo popupId="__ACM_TEMPLATE" popupData="{!pmtPopupTemplate}"/>
                <apex:outputPanel id="popupPanel" layout="block" style="height:20px">
                </apex:outputPanel>
                <div id='calendar'>
                </div>
                <script type="text/javascript">
                    var popupBaseX = 0;
                    var popupBaseY = 36;
                    function formatDateForSubmit(theDate) {
                        console.log('1');
                        if (theDate) {
                            return '' + theDate.getFullYear()
                                + '-' + (theDate.getMonth() + 1)
                                + '-' + theDate.getDate();
                        }
                        return '';
                    }
                    function createDateFromMillisecondsAccordingUTC(milliseconds) {
                        console.log('2');
                        var tempDate = new Date(milliseconds);
                        return new Date(tempDate.getUTCFullYear(), tempDate.getUTCMonth(), tempDate.getUTCDate()
                            , tempDate.getUTCHours(), tempDate.getUTCMinutes(), tempDate.getUTCSeconds());
                    }
                    
                    function getPromotions(start, end, callback) {
                        console.log('3');
                        ASI_CRM_TW_PromotionCalendarMonthCON.retrievePromotionsByTimeRange(
                            formatDateForSubmit(start)
                            , formatDateForSubmit(end)
                            , function (result, event) {
                                if (event.status) {
                                    if (result && result.length) {
                                        for (var i = 0; i < result.length; i++) {
                                            var theEvent = result[i];
                                            theEvent.start = createDateFromMillisecondsAccordingUTC(theEvent.startDT);
                                            theEvent.end = createDateFromMillisecondsAccordingUTC(theEvent.endDT);
                                        }
                                    }
                                    callback(result);
                                } else {
                                    // TODO: show error message (event.message)
                                }
                            }
                            , {escape: false}
                        );
                        return null;
                    }

                    function getitemGroup(start, end)
                    {
                        console.log('4');
                        ASI_CRM_TW_PromotionCalendarMonthCON.getitemgrouplvalue(
                            formatDateForSubmit(start)
                            , formatDateForSubmit(end)
                            , function (result, event) {
                                if (event.status) {
                                    var select = document.getElementById('j_id0:wholeForm:mainPageBlock:sel1');
                                    var select2 = document.getElementById('j_id0:wholeForm:mainPageBlock:sel2');
                                    select.options.length = 0;
                                    select2.options.length = 0;
                                    if (result && result.length) {
                                        var Opts = select.options;
                                        for(var i=0; i<result.length; i++)
                                        {
                                            Opts.add(new Option(result[i], result[i]));
                                        }

                                        console.log(Opts);
                                    }
                                    //callback(result);
                                } else {
                                    // TODO: show error message (event.message)
                                }
                            }
                            , {escape: false}
                        );
                        return null;
                    }

                    function additemGroup()
                    {
                        console.log('5');
                        var select1 = document.getElementById('j_id0:wholeForm:mainPageBlock:sel1');
                        var select2 = document.getElementById('j_id0:wholeForm:mainPageBlock:sel2');
                        var selected1 = [];

                        for (var i=0; i<select1.length; i++) {
                            if (select1.options[i].selected)
                            {
                                selected1.push(select1.options[i].value);
                            }
                        }

                        for(var i=0; i<select1.length; i++)
                        {
                            for(var j=0; j<selected1.length; j++)
                            {
                                if(select1.options[i].value == selected1[j])
                                {
                                    select1.remove(i);
                                }
                            }
                        }

                        for(var i=0; i<selected1.length; i++)
                        {
                            select2.options.add(new Option(selected1[i], selected1[i]));
                        }
                    }
                    
                    function removeitemgroup()
                    {
                        console.log('6');
                        var select1 = document.getElementById('j_id0:wholeForm:mainPageBlock:sel1');
                        var select2 = document.getElementById('j_id0:wholeForm:mainPageBlock:sel2');
                        var selected2 = [];

                        for (var i=0; i<select2.length; i++) {
                            if (select2.options[i].selected)
                            {
                                console.log(select2.options[i]);
                                selected2.push(select2.options[i].value);
                            }
                        }

                        for(var i=0; i<select2.length; i++)
                        {
                            for(var j=0; j<selected2.length; j++)
                            {
                                if(select2.options[i].value == selected2[j])
                                {
                                    select2.remove(i);
                                }
                            }
                        }

                        for(var i=0; i<selected2.length; i++)
                        {
                            select1.options.add(new Option(selected2[i], selected2[i]));
                        }
                    }

                    function filterPromotions(start, end, Channel, SubBrand, ItemGroup, BgColor, callback) {
                        console.log('7');
                        ASI_CRM_TW_PromotionCalendarMonthCON.retrievefilterPromotionsByTimeRange(
                            formatDateForSubmit(start)
                            , formatDateForSubmit(end)
                            , Channel
                            , SubBrand
                            , ItemGroup
                            , BgColor
                            , function (result, event) {
                                if (event.status) {
                                    if (result && result.length) {
                                        for (var i = 0; i < result.length; i++) {
                                            var theEvent = result[i];
                                            theEvent.start = createDateFromMillisecondsAccordingUTC(theEvent.startDT);
                                            theEvent.end = createDateFromMillisecondsAccordingUTC(theEvent.endDT);
                                        }
                                    }
                                    callback(result);
                                } else {
                                    // TODO: show error message (event.message)
                                }
                            }
                            , {escape: false}
                        );
                        return null;
                    }

                    function clearAllPromotionPopupElements() {
                        console.log('8');
                        var popupPanel = document.getElementById('{!$Component.popupPanel}');
                        if (popupPanel) popupPanel.innerHTML = '';
                    }
                    function createPromotionPopupElement(event) {
                        console.log('9');
                        var popupId = event.sObjId;
                        var pmtPopupEleId = 'hpi_popupDiv' + popupId;
                        var pmtPopupEle = document.getElementById(pmtPopupEleId);
                        if (!pmtPopupEle) {
                            var templateId = '__ACM_TEMPLATE';
                            var templatePmtPopupEle = document.getElementById('hpi_popupDiv' + templateId);
                            var templateHTML = templatePmtPopupEle.innerHTML;
                            
                            pmtPopupEle = document.createElement('div');
                            pmtPopupEle.id = templatePmtPopupEle.id.replace(templateId, popupId);
                            pmtPopupEle.className = templatePmtPopupEle.className;
                            pmtPopupEle.style.display = 'none';
                            pmtPopupEle.onmouseover = function() {
                                hpi_renderPopupMouseover(popupId);
                            };
                            pmtPopupEle.onmouseout = function() {
                                hpi_renderPopupMouseout(popupId);
                            };
                            pmtPopupEle.innerHTML = templateHTML.replace(/__ACM_TEMPLATE/g, popupId);
                            
                            var popupPanel = document.getElementById('{!$Component.popupPanel}');
                            popupPanel.appendChild(pmtPopupEle);
                            pmtPopupEle = document.getElementById(pmtPopupEleId);
                            var pmtPopupEleJQuery = $(pmtPopupEle);
                            for (var fName in event.otherValues) {
                                pmtPopupEleJQuery.find('#hpi_popupRowValue' + popupId + '_' + fName).text(event.otherValues[fName]);
                            }
                        }
                        return pmtPopupEle;
                    }
                    function createPromotionElement(event) {
                        console.log('10');
                        var pmtEle = document.createElement('div');
                        pmtEle.className = 'pmtEvent pmtPopupTrigger';
                        pmtEle.id = 'pmtEle_' + event.sObjId;
                        if (event.hasOwnProperty('backgroundColor') && event.backgroundColor)
                            pmtEle.style.backgroundColor = event.backgroundColor;
                        if (event.hasOwnProperty('textColor') && event.textColor)
                            pmtEle.style.color = event.textColor;
                        var title = document.createTextNode(event.title);
                        pmtEle.appendChild(title);
                        pmtEle.onclick = function() { renderClickEvent(event.sObjId); };
                        createPromotionPopupElement(event);
                        pmtEle.onmouseover = function() {
                            var baseY;
                            var calHeader = $('#calendar .fc-header')
                            if (calHeader) baseY = calHeader.height();
                            if (!baseY) baseY = popupBaseY;
                            baseY += 60;
                            hpi_showPopup(this, event.sObjId, popupBaseX, baseY);
                        };
                        pmtEle.onmouseout = function() { hpi_hidePopup(this, event.sObjId); };
                        return pmtEle;
                    }
                    function updateCurrentYearAndMonth(start, end) {
                        var curYearHidden = document.getElementById('{!$Component.curYearHidden}');
                        var curMonthHidden = document.getElementById('{!$Component.curMonthHidden}');
                        if (curYearHidden && curMonthHidden) {
                            if (start.getDate() > 1) {
                                start.setDate(32);
                            }
                            curYearHidden.value = start.getFullYear();
                            curMonthHidden.value = start.getMonth();
                        }
                    }

                    function removeAllevents()
                    {
                        console.log('11');
                        var BgColor = $("[id$='Bgcolor']").val();
                        //var SubBrand = $("[id$='SubBrand_lkid']").val();
                        var curYearHidden = document.getElementById('{!$Component.curYearHidden}');
                        var curMonthHidden = document.getElementById('{!$Component.curMonthHidden}');

                        var ChannelElement = document.getElementById('j_id0:wholeForm:mainPageBlock:sel2_2');
                        var Channel = '';
                        if(ChannelElement.length != 0)
                        {
                            for(var i=0; i<ChannelElement.length; i++)
                            {
                                Channel += ChannelElement[i].value + ';';
                                //Channel.push(ChannelElement[i].value);
                            }
                        }
                        var ItemGroupElement = document.getElementById('j_id0:wholeForm:mainPageBlock:sel2').options;
                        var ItemGroup = '';
                        if(ItemGroupElement.length != 0)
                        {
                            for(var i=0; i<ItemGroupElement.length; i++)
                            {
                                ItemGroup += ItemGroupElement[i].value + ';';
                                //ItemGroup.push(ItemGroupElement[i].value);
                            }
                        }
                        console.log(BgColor);
                        //console.log(SubBrand);
                        console.log(Channel);
                        console.log(ItemGroup);

                        theCalendar.fullCalendar( 'destroy' );

                        theCalendar.fullCalendar({
                            header: {
                                left: ''
                                , center: 'title'
                                , right: 'today prev next'
                            }
                            , height: 600
                            , weekMode: 'liquid'
                            , year: curYearHidden.value
                            , month: curMonthHidden.value
                            , events: function(start, end, callback) {
                                updateCurrentYearAndMonth(start, end);
                                clearAllPromotionPopupElements();
                                filterPromotions(start, end, Channel, '', ItemGroup, BgColor, callback);
                            }
                            , eventRender: function(event, element) {
                                return createPromotionElement(event);
                            }
                            , dayClick: function(date, allDay, jsEvent, view) {
                                renderClickDate(formatDateForSubmit(date));
                            }
                        });
                    }
                    
                    $(document).ready(function() {
                        theCalendar.fullCalendar({
                            header: {
                                left: ''
                                , center: 'title'
                                , right: 'today prev next'
                            }
                            , height: 600
                            , weekMode: 'liquid'
                            , year: {!curYearStr}
                            , month: {!curMonthStr}
                            , events: function(start, end, callback) {
                                updateCurrentYearAndMonth(start, end);
                                clearAllPromotionPopupElements();
                                getPromotions(start, end, callback);
                                getitemGroup(start, end);
                            }
                            , eventRender: function(event, element) {
                                return createPromotionElement(event);
                            }
                            , dayClick: function(date, allDay, jsEvent, view) {
                                renderClickDate(formatDateForSubmit(date));
                            }
                        });
                    });
                    var theCalendar = $('#calendar');
                </script>
            </apex:outputPanel>
        </apex:pageBlock>
    </apex:form>
</apex:page>