<!--
 - Created by Jeffrey Cheung on 22/8/2018.
 -->

<apex:page id="ASI_CRM_CN_EditContractOffDetailPage" standardController="ASI_TH_CRM_Contract__c" extensions="ASI_CRM_CN_EditContractOffDetailCtrl" docType="html-5.0" sidebar="false">
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta http-equiv='cache-control' content='no-cache'/>
    <meta http-equiv='expires' content='0'/>
    <meta http-equiv='pragma' content='no-cache'/>

    <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_AddOn_CSS_V3_3_2, '/bower_components/Font-Awesome/css/font-awesome.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery-ui1.10.4.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.ASI_Library, 'dist/css/bootstrap.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery1.10.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery-ui1.10.4.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_Library, 'dist/js/bootstrap.min.js')}"/>

    <apex:stylesheet value="{!URLFOR($Resource.ASI_CN_DataTables, 'datatables.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_CN_DataTables, 'datatables.min.js')}"/>

    <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_SG_Library, '/lib/angular.min.1.5.6.js')}" />

    <style>
        .BSCommandButton {
            color: #333 !important;
            background-color: #fff !important;
            border-color: #ccc !important;
            margin-left: 0.5em !important;
            margin-right: 0.5em !important;
            margin-bottom: 0.5em !important;
            padding: 3px 6px !important;
        }

        .BSCommandButtonSM {
            font-size: 12px;
            color: #333 !important;
            background-color: #fff !important;
            border-color: #ccc !important;
            margin-left: 0.5em !important;
            margin-right: 0.5em !important;
            margin-bottom: 0 !important;
            padding: 2.5px 5px !important;
            margin-top: -0.3em;
        }

        .HeaderCss {
            color: #fff;
            border-top-left-radius: 3px;
            border-top-right-radius: 3px;
            background-color: #337ab7;
            border: 1px solid #337ab7;
            padding: 10px 15px;
            text-align: center;
        }

        .PanelBody {
            padding: 0.3em;
            background-color: #fff;
            border: 1px solid transparent;
            border-color: #337ab7;
            border-bottom-left-radius: 3px;
            border-bottom-right-radius: 3px;
            border-top-right-radius: 3px;
        }

        .module-header-table {
            width: 100%;
        }

        .module-header-table td {
            width: 15%;
            padding: 0.1rem;
        }

        .module-header-table tr td:nth-child(odd) {
            text-align: right !important;
            font-weight: bold !important;
        }

        .table-summary-row {
            font-weight: bold;
            background-color: #e3e3d7;
        }

        .ApexInputNumberField {
            text-align: right;
            padding: 3px 6px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .InputNumberFieldWidth {
            width: 10em !important;
        }

        .style-1 input[type="text"] {
            padding: 5px 10px;
            font-size: 12px;
            line-height: 1.5;
            border-radius: 3px;
            width: 80%;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;

        }

        .data-table {
            margin-bottom: 0 !important;
        }

        .data-table td {
            vertical-align: middle !important;
        }

        input.requiredField {
            border-left: 3px solid red !important;
        }

        .ui-autocomplete span.hl_results {
            background-color: #ffff66;
        }

        /* loading - the AJAX indicator */
        .ui-autocomplete-loading {
            background: white url('/img/loading.gif') right center no-repeat;
        }

        .ui-autocomplete {
            height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            overflow: auto;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
            left: 0;
        }

        .overPaid {
            color: red !important;
        }

        .no-border {
            border: none !important;
        }
    </style>


    <script type='text/javascript'>
        var NoOfMonths = 1;
        var BRSFClickAddNew = false; // BRSF Onclick new Line
        var SubBrands = [];
        var CommercialTeam = '';
        var Region = '';
        var CityTier = '';
        var deletedLines = [];

        $(document).on('mousemove', function (e) {
            $('#loadtext').css({
                left: e.pageX,
                top: e.pageY
            });

            $('input[type=text]').on('keydown', function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                }
            });
        });


        window.onload = function () {
            $('input[type=text]').blur();
            $('input[type=text]').on('keydown', function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                }
            });
        };


        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
            CommercialTeam = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_Commercial_Team__c}';
            Region = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_Region__c}';
            CityTier = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_CCity__r.ASI_CRM_CN_City_Tier__c}';

            NoOfMonths = '{!ContractSelected.ASI_CRM_CN_No_of_Months__c}';
            var BrandList = document.getElementsByClassName("bPageFooter");
            for (var i = 0; i < BrandList.length; i++) {
                BrandList[i].innerHTML = '';
            }
            BRSFClickAddNew = false;
            retrieveSBBrand();

        });


        //Sub-Brand
        function retrieveSBBrand() {
            var whereClause = ' WHERE RecordType.DeveloperName = \'ASI_FOC_CN_Sub_brand\'  and ASI_CRM_CN_Sub_brand_Grade__c!=null and  ASI_MFM_Brand__r.ASI_CRM_CN_Competitor__c =FALSE and ASI_MFM_Active_for_CRM__c=TRUE  and ASI_MFM_Sub_brand_Code__c != \'999\'  '
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_CRM_CN_EditContractOffDetailCtrl.FindSubBrandList}', 'ASI_MFM_Sub_brand__c', whereClause, CommercialTeam, Region, CityTier
                , callbackSBBrand
                , {escape: true}
            );
        }


        function callbackSBBrand(result, event) {
            if (event.status) {
                if (result) {
                    SubBrands = [];
                    for (var i = 0; i < result.length; i++) {
                        var sb = {};

                        sb.label = htmlEncode(result[i]["Name"]);
                        sb.value = htmlEncode(result[i]["Id"]);
                        sb.SBGradeId = htmlEncode(result[i]["ASI_CRM_CN_Sub_brand_Grade__c"]);
                        sb.SBGrade = htmlEncode(result[i]["ASI_CRM_CN_Sub_brand_Grade__r"]["ASI_CRM_Chinese_Name__c"]);// console.log(result[i]["ASI_CRM_CN_Sub_brand_Grade__r"]["Name"]);
                        sb.BRSFIncentive = result[i]["ASI_CRM_Incentive_Central__c"];
                        sb.BRSFMaxIncentive = result[i]["ASI_CRM_Incentive_East__c"];
                        sb.PSFIncentive = result[i]["ASI_CRM_Incentive_North__c"];
                        sb.PSFMaxIncentive = result[i]["ASI_CRM_Incentive_North_West__c"];
                        sb.ASI_CRM_CN_Sub_Brand__r = result[i];
                        SubBrands.push(sb);
                    }
                }
            }
            initalizeAutoCompleteComponent();
        }


        function initalizeAutoCompleteComponent() {
            // SuB-Brand
            $(".SubBrandClass").autocomplete({
                source:
                SubBrands,
                response: function (event, ui) {
                    console.log('response');
                    if (ui.content.length === 0) {
                        console.log("No result found");
                    }
                },
                minLength: 0,
                scroll: true,
                change: function (event, ui) {
                    if (!ui.item) {//this.value = '';//
                    }
                },
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    $(this).next().next().children().val(ui.item.value);


                    var ClassNames = $(this).attr("class");
                    var ClassNameList = ClassNames.split(" ");


                    if (ClassNameList[0].indexOf('SubBrandsClass_') !== -1) {
                        var LineId = ClassNameList[0].replace('SubBrandsClass_', '');
                        //changing Sub-Brand Grade
                        $('#SBGrade_' + LineId).html('<a  href="/"' + ui.item.SBGradeId + '" >' + ui.item.SBGrade + '</a>');


                    }

                    event.preventDefault();
                },
                focus: function (event, ui) {
                    event.preventDefault();
                }
            })


        }

        function onBRSFVolValBaseChange(element) {
            var oldValue = element.defaultValue || '{!BRSFItemMap.Module.ASI_CRM_CN_Volume_Value_Base__c}';
            var newValue = element.value;
            if(!{!IsDolphinContract}){
                if (confirm('After changing Volume/Value Base, all PSF and Display modules will be deleted, confirm?\n更改 Volume/Value Base，系统会自动删除PSF和Display，确定？')) {
                    element.defaultValue = newValue;
                    confirmBRSFVolValBaseChange()
                } else {
                    element.value = oldValue;
                }
            }
            if({!IsDolphinContract}){
                element.defaultValue = newValue;
                confirmBRSFVolValBaseChange()
            }
        }


        //Fix cost: Changing Contract Amount,system will update Estimate Amount
        function ChangeNextAmount(that) {
            var CurrentAmount = that.value;
            console.log('CurrentAmount : ' + CurrentAmount);

            try {
                /*if(that.parentElement.nextSibling.nextSibling.style.display == "none"){
                    that.parentElement.nextSibling.nextSibling.nextSibling.nextSibling.childNodes[0].value = CurrentAmount;
                }else{
                    that.parentElement.nextSibling.nextSibling.childNodes[0].value = CurrentAmount;
                }*/
                if(that.parentElement.nextElementSibling.style.display == "none"){
                    that.parentElement.nextElementSibling.nextElementSibling.childNodes[0].value = CurrentAmount;
                }else{
                    that.parentElement.nextElementSibling.childNodes[0].value = CurrentAmount;
                }
                
            } catch (err) {
                //console.log('Failed:  '+that.parentElement.nextSibling.childNodes[0].value);
                that.parentElement.nextSibling.nextSibling.nextSibling.childNodes[0].value = CurrentAmount;
            }

            console.log('FixCostContractAmount   ');
            CalculateTotalInputField('FixCostContractAmount', 'FixCostTotalContractAmount');

            console.log('FixCostEstimateAmount   ');
            CalculateTotalInputField('FixCostEstimateAmount', 'FixCostTotalEstimateAmount');
        }
        //千分数字格式
        function formatThousandNumber(num) { 
          if (isNaN(num)) { 
            throw new TypeError("num is not a number"); 
          } 
          
          return ("" + num).replace(/(\d{1,3})(?=(\d{3})+(?:$|\.))/g, "$1,");  
        }
        //千分格式转数字
        function delcommafy(num){

            if((num+"").Trim()==""){
                return "";
            }
            num=num.replace(/,/gi,'');

            return num;
        }

        

        //After interface with database
        function Rerender() {
            initalizeAutoCompleteComponent();
            $('[data-toggle="tooltip"]').tooltip();
            drawPSFTables();
        }

        function InitTooltip() {
            $('[data-toggle="tooltip"]').tooltip();
        }


        //******************************************BRSF function******************************************
        function BRSFNewLine() {
            BRSFClickAddNew = true;
        }


        function ChangingSubBrand(thatId, PSFModuleId) {
            //SubBrands
            var SelectedSBBrand = $('.SubBrandsClass_' + thatId).val();//console.log($('.SubBrandsClass_'+thatId).attr('class'));

            var ClassNames = $('.SubBrandsClass_' + thatId).attr('class');

            var ClassNameList = ClassNames.split(" ");



            for (var i = 0; i < SubBrands.length; i++) {
                if (SubBrands[i].label == SelectedSBBrand) {
                    console.log(SubBrands[i]);
                    $('#SBGrade_' + thatId).html('<a  href="/"' + SubBrands[i].SBGradeId + '" >' + SubBrands[i].SBGrade + '</a>');


                }
            }

        }



        function ChangingPSFSubBrand(ModuleID, LineId) {
            ChangingPSFSubBrandActionFunction(ModuleID, LineId);
        }






        //Shared function
        // function formatNumber(n) {
        //     return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        // }

        //**************************PSF Function Start***************************
        
        //changing PSF Grand Estimate Total
        function GrandEstimateTotal(estimatedTotal, idTotalBefore, idToUpdate) {
            var AdjustmentAmount = Number(StringToNumberStr(estimatedTotal)) - Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent));
            $('#'+idToUpdate)[0].textContent = formatNumber(AdjustmentAmount);
        }


        //**************************PSF Function End**************************************


        //Calculate total Amount function (Input Field)
        function CalculateTotalInputField(InputFieldId, TotalDivId) {
            var TotalAmount = 0;
            $('.' + InputFieldId).each(function () {
                TotalAmount += Number(StringToNumberStr($(this).val()));
            });
            if(InputFieldId == 'FixCostContractAmountRate' || InputFieldId == 'FixCostEstimateAmountRate'){
               try {
                    $('#' + TotalDivId)[0].childNodes[0].textContent = formatNumber(TotalAmount) + '%';
                } catch (err) {
                    $('#' + TotalDivId)[0].textContent = formatNumber(TotalAmount);
                } 
            }else{
                try {
                    $('#' + TotalDivId)[0].childNodes[0].textContent = formatNumber(TotalAmount);
                } catch (err) {
                    $('#' + TotalDivId)[0].textContent = formatNumber(TotalAmount);
                }
            }
        }

        //remove comma
        function StringToNumberStr(i) {
            return typeof i === 'string' ? i.replace(/\s/g, '').replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
        };


        function htmlEncode(input) {
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
        }

        //Covered Outlet select all checkboxes
        function selectAllCheckboxes(obj, receivedInputID) {
            var inputCheckBox = document.getElementsByTagName("input");
            for (var i = 0; i < inputCheckBox.length; i++) {
                if (inputCheckBox[i].id.indexOf(receivedInputID) != -1) {
                    inputCheckBox[i].checked = obj.checked;
                }
            }
        }


        function currencyToFloat(currencyStr) {
            if (typeof currencyStr === 'string') {
                var numStr = currencyStr.trim().replace(/,/g, '');
                if (/^-?\d+\.?\d*$/.test(numStr)) {
                    return parseFloat(numStr);
                }
            }
            return null;
        }


        function drawPSFTables(){
            $('table[id^=example_]').DataTable().draw();
        }

        /**
         * Calculate a PSF line, used when clicking refresh all in BRSF module in PO modification
         * @param lineItem
         * @param KPIBase
         * @param methodology
         * @param criteria
         */
        function calculatePSFLine(lineItem, KPIBase, methodology, criteria){
            if(!lineItem || !KPIBase || !methodology){
                return;
            }

            if(KPIBase ==='Volume base' && methodology === 'Per Incentive Btl'){
                var numOfMonths = {!ContractSelected.ASI_CRM_CN_V00_No_of_Month__c};
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = lineItem.ASI_CRM_CN_Contract_Monthly_Qty__c * lineItem.ASI_CRM_CN_Contract_BRSF_Per_Bottle__c * numOfMonths || 0;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_CN_Est_Monthly_Qty__c * lineItem.ASI_CRM_CN_Est_BRSF_Per_Bottle__c * numOfMonths || 0;;

            }
            if(KPIBase ==='Value base' && methodology === 'Rebate%'){
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = (lineItem.ASI_CRM_CN_Contract_Purchase_Value__c * lineItem.ASI_CRM_CN_Rebate_Percent__c / 100).toFixed(2) || 0;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = (lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c * lineItem.ASI_CRM_CN_Rebate_Percent__c / 100).toFixed(2) || 0;
            }
            if(KPIBase ==='Value base' && methodology === 'Reach X get Y'){
                if (!lineItem.ASI_CRM_CN_Target__c || !lineItem.ASI_CRM_CN_Rebate__c) {
                    lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = 0;
                    lineItem.ASI_CRM_CN_Est_Total_Dummy__c = 0;
                    return;
                }

                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = parseInt(lineItem.ASI_CRM_CN_Contract_Purchase_Value__c / lineItem.ASI_CRM_CN_Target__c) * lineItem.ASI_CRM_CN_Rebate__c;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = parseInt(lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c / lineItem.ASI_CRM_CN_Target__c) * lineItem.ASI_CRM_CN_Rebate__c;
            }
            if(KPIBase ==='Value base' && methodology === 'By Total' && criteria === 'By Ladder'){
                lineItem = calculateLineByLadder(lineItem)
            }
            if(KPIBase ==='Value base' && methodology === 'By Total' && criteria === 'By Tax'){
                lineItem = calculateLineByTax(lineItem);
            }

            // NAN prevention
            lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = lineItem.ASI_CRM_CN_Contract_Total_Dummy__c || 0;
            lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_CN_Est_Total_Dummy__c || 0;

            return lineItem;
        }

        function onSubBrandChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            let subBrand = SubBrands.find((sb) => sb.label == newValue);
            lineItem.ASI_CRM_CN_Sub_Brand__c = subBrand.value;
            lineItem.ASI_CRM_CN_Sub_Brand__r = subBrand.ASI_CRM_CN_Sub_Brand__r;

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
        }

        function calculateExpectedPSFEstimatedTotal(){
            var estimateTotalSum = $('table[id^=example_]').DataTable().data().reduce(function (initialValue, data) {
                return initialValue + (parseFloat(data.ASI_CRM_CN_Est_Total_Dummy__c) || 0);
            }, 0);

            $('#ExpectedPSFEstimatedTotal').find('input').val(estimateTotalSum.toFixed(2));
            GrandEstimateTotal(estimateTotalSum,'PSFGrandEstimateTotalBeforeAdjustmentId', 'PSFAdjustmentAmountId');
        }
        function addRow(tableId, module) {
            var table = $(tableId).DataTable();
            var newData = {
                ASI_CRM_CN_Contract__c: '{!PageId}',
                ASI_CRM_Type__c: 'PSF',
                ASI_CRM_Volume_Base__c: module.ASI_CRM_Volume_Base__c,
                ASI_CRM_Module__c: module.Id,
                ASI_CRM_CN_Min_Purchase_Target__c: 0,
                RecordTypeId: '{!BRSFLineRecordTypeId}',
            };

            var lastRow = table.row(':last').data();
            if(lastRow){
                if(module.ASI_CRM_CN_Criteria__c === 'By Tax'){
                    newData.ASI_CRM_CN_Min_Purchase_Target__c = lastRow.ASI_CRM_CN_Max_Purchase_Target__c + 0.01 || 0;
                }
                }

            newData.ASI_CRM_CN_Contract_Purchase_Value__c = StringToNumberStr($('#BRSFContractTotalPart').text().trim()) || 0;
            newData.ASI_CRM_CN_Estimate_Purchase_Value__c = StringToNumberStr($('#BRSFEstTotalPart').text().trim()) || 0;


            table.row.add(newData);
            $(tableId).DataTable().draw();
        }
        function deleteRow(rowIndex, tableId, module) {
            var row = $(tableId).DataTable().row(rowIndex);
            let isLastRow = rowIndex === $(tableId).DataTable().rows().count() - 1;
            let rowData = row.data();
            if(rowData.Id){
                deletedLines.push(rowData);
            }
            row.remove();

            if(module.ASI_CRM_CN_Criteria__c === 'By Ladder'){
                $(tableId).DataTable().rows().every(function(rowIdx, tableLoop, rowLoop){
                    let rowData = $(tableId).DataTable().row(rowIdx).data();
                    let nextLineItem = $(tableId).DataTable().row(rowIdx + 1).data();

                    rowData.ASI_CRM_CN_Max_Purchase_Target__c = nextLineItem ? nextLineItem.ASI_CRM_CN_Min_Purchase_Target__c - 0.01 : null;
                    rowData = calculateLineByLadder(rowData, module.ASI_CRM_CN_Is_Capped__c);

                    $(tableId).DataTable().row(rowIdx).data(rowData);
                });
            }

            if(module.ASI_CRM_CN_Criteria__c === 'By Tax'){
                $(tableId).DataTable().rows().every(function(rowIdx, tableLoop, rowLoop){
                    let rowData = $(tableId).DataTable().row(rowIdx).data();
                    let prevLineItem = $(tableId).DataTable().row(rowIdx - 1).data();

                    rowData.ASI_CRM_CN_Min_Purchase_Target__c = prevLineItem ? prevLineItem.ASI_CRM_CN_Max_Purchase_Target__c + 0.01 : 0;
                    rowData = calculateLineByTax(rowData);

                    $(tableId).DataTable().row(rowIdx).data(rowData);
                });
            }


            // invalidate row so every row redraw itself => update onchange function in render()
            $(tableId).DataTable().rows().invalidate();
            $(tableId).DataTable().draw();
            calculateExpectedPSFEstimatedTotal();


        }
        function changeContractIncentive(rowIndex, newValue, change, tableId) {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            var numOfMonths = {!ContractSelected.ASI_CRM_CN_V00_No_of_Month__c};

            if (change === 'contract') {
                lineItem.ASI_CRM_CN_Contract_BRSF_Per_Bottle__c = newValue;
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = lineItem.ASI_CRM_CN_Contract_Monthly_Qty__c * lineItem.ASI_CRM_CN_Contract_BRSF_Per_Bottle__c * numOfMonths;
                change = 'estimate';
            }

            if (change === 'estimate') {
                lineItem.ASI_CRM_CN_Est_BRSF_Per_Bottle__c = newValue;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_CN_Est_Monthly_Qty__c * lineItem.ASI_CRM_CN_Est_BRSF_Per_Bottle__c * numOfMonths;
            }
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            calculateExpectedPSFEstimatedTotal();
        }
        function changeMinPurchaseTarget(rowIndex, newValue, criteria, tableId, isCapped) {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Min_Purchase_Target__c = parseFloat(newValue) || 0;
            $(tableId).DataTable().row(rowIndex).data(lineItem);

            var nextLineItem = $(tableId).DataTable().row(rowIndex - 1).data();
            if(nextLineItem){
                nextLineItem.ASI_CRM_CN_Max_Purchase_Target__c = lineItem.ASI_CRM_CN_Min_Purchase_Target__c - 0.01;
                if(criteria === 'By Ladder'){
                    nextLineItem = calculateLineByLadder(nextLineItem, isCapped);
                }
                $(tableId).DataTable().row(rowIndex - 1).data(nextLineItem);
            }
            if(criteria === 'By Ladder'){
                lineItem = calculateLineByLadder(lineItem, isCapped);
            }

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            calculateExpectedPSFEstimatedTotal();
        }
        function changeMaxPurchaseTarget(rowIndex, newValue, criteria, tableId) {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Max_Purchase_Target__c = parseFloat(newValue);

            var nextLineItem = $(tableId).DataTable().row(rowIndex + 1).data();
            if(nextLineItem){
                nextLineItem.ASI_CRM_CN_Min_Purchase_Target__c = lineItem.ASI_CRM_CN_Max_Purchase_Target__c + 0.01;
                if(criteria === 'By Tax'){
                    nextLineItem = calculateLineByTax(nextLineItem);
                }
                $(tableId).DataTable().row(rowIndex + 1).data(nextLineItem);
            }

            if(criteria === 'By Tax'){
                lineItem = calculateLineByTax(lineItem);
            }

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            calculateExpectedPSFEstimatedTotal();
        }
        function changeRebatePercent(rowIndex, newValue, methodology, tableId, isCapped) {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();

            lineItem.ASI_CRM_CN_Rebate_Percent__c = newValue;
            if(methodology === 'Rebate%'){
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = (lineItem.ASI_CRM_CN_Contract_Purchase_Value__c * lineItem.ASI_CRM_CN_Rebate_Percent__c / 100).toFixed(2);
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = (lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c * lineItem.ASI_CRM_CN_Rebate_Percent__c / 100).toFixed(2);
            }
            if(methodology === 'Rebate%(By Ladder)'){
                lineItem = calculateLineByLadder(lineItem, isCapped);
            }
            if(methodology === 'Rebate%(By Tax)'){
                lineItem = calculateLineByTax(lineItem);
            }

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            calculateExpectedPSFEstimatedTotal();
        }
        function calculateLineByLadder(lineItem, isCapped) {
            let min = lineItem.ASI_CRM_CN_Min_Purchase_Target__c || 0;
            let max = lineItem.ASI_CRM_CN_Max_Purchase_Target__c || Infinity;
            let contractPurchaseValue = lineItem.ASI_CRM_CN_Contract_Purchase_Value__c;
            let estimatePurchaseValue = lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c;

            if({!!isPOModi} && contractPurchaseValue >= min && contractPurchaseValue <= max){
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = contractPurchaseValue * lineItem.ASI_CRM_CN_Rebate_Percent__c / 100;
            } else {
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = 0;
            }
            if(estimatePurchaseValue >= min && estimatePurchaseValue <= max){
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = (isCapped && max === Infinity && estimatePurchaseValue > Math.max(min,contractPurchaseValue) ? Math.max(min,contractPurchaseValue) : estimatePurchaseValue) * lineItem.ASI_CRM_CN_Rebate_Percent__c / 100;
            } else {
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = 0;
            }

            return lineItem;
        }
        function calculateLineByTax(lineItem) {
            var min = lineItem.ASI_CRM_CN_Min_Purchase_Target__c || 0;
            var maxPurchaseTarget = isNaN(lineItem.ASI_CRM_CN_Max_Purchase_Target__c) ? Infinity : lineItem.ASI_CRM_CN_Max_Purchase_Target__c;
            var max;
            var rebatePercent = lineItem.ASI_CRM_CN_Rebate_Percent__c || 0;
            if ({!!isPOModi} && lineItem.ASI_CRM_CN_Contract_Purchase_Value__c >= min) {
                max = Math.min(maxPurchaseTarget, lineItem.ASI_CRM_CN_Contract_Purchase_Value__c);
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = lineItem.ASI_CRM_CN_Contract_Purchase_Value__c > min ? (max - min)  * rebatePercent / 100 : 0;
            } else {
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = 0;
            }
            if (lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c >= min) {
                max = Math.min(maxPurchaseTarget, lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c);
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c > min ? (max - min)  * rebatePercent / 100 : 0;
            } else{
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = 0;
            }

            return lineItem;
        }
        function changeTargetOrRebate(rowIndex, newValue, change, tableId) {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();

            if(change == 'target'){
                lineItem.ASI_CRM_CN_Target__c = newValue;
            }
            if(change == 'rebate'){
                lineItem.ASI_CRM_CN_Rebate__c = newValue;
            }

            if (!lineItem.ASI_CRM_CN_Target__c || !lineItem.ASI_CRM_CN_Rebate__c) {
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = 0;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = 0;
                return;
            }

            lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = parseInt(lineItem.ASI_CRM_CN_Contract_Purchase_Value__c / lineItem.ASI_CRM_CN_Target__c) * lineItem.ASI_CRM_CN_Rebate__c;
            lineItem.ASI_CRM_CN_Est_Total_Dummy__c = parseInt(lineItem.ASI_CRM_CN_Estimate_Purchase_Value__c / lineItem.ASI_CRM_CN_Target__c) * lineItem.ASI_CRM_CN_Rebate__c;

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            calculateExpectedPSFEstimatedTotal();
        }
        function changeTotal(rowIndex, newValue, change, tableId) {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            if (change === 'contract') {
                lineItem.ASI_CRM_CN_Contract_Total_Dummy__c = newValue;
                change = 'estimate';
            }

            if (change === 'estimate') {
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = newValue;
            }
            $(tableId).DataTable().row(rowIndex).data(lineItem);
            $(tableId).DataTable().draw();
            calculateExpectedPSFEstimatedTotal();
        }

        function formatNumber(number){
            if(number && number.toLocaleString){
                return number.toLocaleString('en', {minimumFractionDigits: 2, maximumFractionDigits: 2});
            }
            return number;
        }
    </script>

    <!-- Display -->
    <script type='text/javascript'>
        function calculateExpectedDisplayEstimatedTotal() {
            let sum = 0;
            $('.displayEstimateTotal').each(function() {
                let value = $(this).text() === "" ?  $(this).val() : $(this).text();
                value = currencyToFloat(value) || 0;
                sum += value;
            });

            $('#ExpectedDisplayEstimatedTotal').find('input').val(formatNumber(sum));
            GrandEstimateTotal(sum,'DisplayGrandEstimateTotalBeforeAdjustmentId', 'DisplayAdjustmentAmountId');

        }
    </script>


    <apex:outputPanel id="dataFactory" style="display:none">
        <script>
            var PSF_Item_MapJSON = {!PSF_Item_MapJSON};
            /**
             *
             * @param tableId is the following format: #example_{module id or string}
             */
            function redrawTable(tableId,index){

                var key = tableId.split('_')[1];
                var interimData = PSF_Item_MapJSON[key];
                var KPIBase = interimData.Module.ASI_CRM_CN_KPI_Base__c;
                var volumeBase = interimData.Module.ASI_CRM_Volume_Base__c;
                let methodologyById = {!MethodologyByIdJSON};
                let methodology = methodologyById[interimData.Module.ASI_CRM_Methodology__c].Name;

                var criteria = interimData.Module.ASI_CRM_CN_Criteria__c;
                var isCapped = Boolean(interimData.Module.ASI_CRM_CN_Is_Capped__c);
                var isCreatedInCurrentVersion = Boolean(interimData.isCreatedInCurrentVersion);
                var isPOModi = {!isPOModi};
                var canAddNewLine = criteria === 'By Ladder' || criteria === 'By Tax';

                var isDolphinContract = {!IsDolphinContract};

                var table = $(tableId).DataTable( {
                    paging: false,
                    ordering: false,
                    searching:false,
                    info:false,
                    drawCallback: function(){
                        initalizeAutoCompleteComponent();
                    },
                    footerCallback: function( tfoot, data, start, end, display ) {
                        var api = this.api();
                        var htmlString = '';

                        var summableColumns = api.columns('.summable').indexes();

                        api.columns().every(function () {
                            var column = this;

                            if(column.visible()){
                                htmlString += '<th>';

                                var sum = '';
                                if(summableColumns.indexOf(column.index()) !== -1){
                                    sum = this
                                        .data()
                                        .reduce(function(a, b) {
                                            var x = parseFloat(a) || 0;
                                            var y = parseFloat(b) || 0;
                                            return x + y;
                                        }, 0);
                                    htmlString += formatNumber(sum);
                                }
                                htmlString += '</th>';

                            }

                        });
                        $(tfoot).select('tr').html(htmlString);

                    },
                    columnDefs: [
                        {
                            targets: 'summable',
                            defaultContent: 0.00,
                            render: function ( data, type, row ) {
                                return formatNumber(data);
                            }
                        },
                        {
                            targets: '_all',
                            defaultContent: 0.00,
                            render: function ( data, type, row ) {
                                return formatNumber(data);
                            }
                        }
                    ],
                    // Covert object to array and make sure about the order
                    data: Object.keys(interimData.DetailLineMap).sort().map(key => interimData.DetailLineMap[key]),
                    columns: [
                        {
                            title: canAddNewLine ? '<button type="button" class="BSCommandButtonSM" onclick=\'addRow("'+tableId+'",'+JSON.stringify(interimData.Module)+')\'>{!$Label.ASI_CRM_CN_Add_New}</button>' : '',
                            render: function (data, type, row, meta) {
                                if ($.isEmptyObject(row)) {
                                    return '';
                                }
                                // return '<button type="button" class=" no-border" onclick=\'deleteRow('+meta.row+',\''+tableId+'\','+JSON.stringify(interimData.Module)+')\'><span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span></button>';
                                // return `<button type="button" class=" no-border" onclick="deleteRow(${meta.row},'${tableId}',`+${JSON.stringify(interimData.Module)}+`)"><span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span></button>`;
                                return '<button type="button" class="BSCommandButtonSM" onclick=\'deleteRow('+meta.row+',"'+tableId+'",'+JSON.stringify(interimData.Module)+')\'><span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span></button>';

                            },
                            visible: isCreatedInCurrentVersion && (methodology !== 'Others' && volumeBase === 'By Sub-Brand' && volumeBase!=='By Total' || criteria == 'By Ladder' || criteria == 'By Tax'),
                        },
                        {
                            title: "{!$ObjectType.ASI_MFM_Sub_brand__c.Label}",
                            data: 'ASI_CRM_CN_Sub_Brand__r.Name',
                            render: function (data, type, row, meta) {
                                data = data || '';
                                 return '<a href="/' + row.ASI_CRM_CN_Sub_Brand__c + '">' + data + '</a>';
                            },
                            visible: volumeBase === 'By Sub-Brand'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Volume_Base__c.Label}",
                            data: 'ASI_CRM_Line_Name__c',
                            render: function (data, type, row, meta) {
                                data = data || '';
                                if (volumeBase === 'By Category') {
                                    return '<a href="/' + row.ASI_CRM_Product_Category__c + '">' + data + '</a>';
                                }
                                if (volumeBase === 'By Total') {
                                    return '{!$Label.ASI_CRM_CN_By_Total}';
                                }
                            },
                            visible: methodology !== 'Others' && volumeBase !== 'By Sub-Brand'
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Grade}",
                            data: 'ASI_CRM_Line_Name__c',
                            render: function (data, type, row, meta) {
                                return '<a href="/' + row.ASI_CRM_Sub_Brand_Grade__c + '">' + data + '</a>';
                            },
                            visible: volumeBase === 'By Sub-Brand'
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Contract_Monthly_QTY_StdBottle}",
                            data: 'ASI_CRM_CN_Contract_Monthly_Qty__c',
                            className: 'summable',
                            visible: KPIBase == 'Volume base' && volumeBase=='By Sub-Brand' && !isPOModi
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Estimate_Monthly_QTY_StdBottle}",
                            data: 'ASI_CRM_CN_Est_Monthly_Qty__c',
                            className: 'summable',

                            visible: KPIBase == 'Volume base' && volumeBase=='By Sub-Brand' && !isPOModi
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Contract_Total_QTY_StdBottle}",
                            data: 'ASI_CRM_Contract_Total_QTY_std_Btl__c',
                            className: 'summable',

                            visible: methodology !== 'Others' && KPIBase == 'Volume base' && (volumeBase=='By Sub-Brand' && isPOModi || volumeBase!='By Sub-Brand')
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Estimate_Total_QTY_StdBottle}",
                            data: 'ASI_CRM_Est_Total_QTY_std_Btl__c', className: 'summable',

                            visible: methodology !== 'Others' && KPIBase == 'Volume base' && (volumeBase=='By Sub-Brand' && isPOModi || volumeBase!='By Sub-Brand')
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Contract_Total_QTY_CR12Eqv}",
                            data: 'ASI_CRM_Contract_Total_QTY_CR12_Eqv__c', className: 'summable',

                            visible: methodology !== 'Others' && KPIBase == 'Volume base' && volumeBase!='By Sub-Brand'
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Estimate_Total_QTY_CR12Eqv}",
                            data: 'ASI_CRM_Est_Total_QTY_CR12_Eqv__c', className: 'summable',

                            visible: methodology !== 'Others' && KPIBase == 'Volume base' && volumeBase!='By Sub-Brand'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Contract_BRSF_Per_Bottle__c.Label}",
                            data: 'ASI_CRM_CN_Contract_BRSF_Per_Bottle__c',
                            render: function (data, type, row, meta) {
                                let classes = [];
console.log(row.ASI_CRM_Max_Incentive__c);
                                if (data > row.ASI_CRM_Max_Incentive__c) {
                                    classes.push('overPaid');
                                }

                                if(isCreatedInCurrentVersion && !isPOModi){
                                    return `<input type="number" step=".01" class="${classes.join(' ')}" min="0" value="${data || 0}" onChange="changeContractIncentive(${meta.row}, this.value, 'contract','${tableId}')"/>`;
                                } else {
                                    return `<span class="${classes.join(' ')}">${data}</span>`;
                                }
                            },
                            visible: KPIBase == 'Volume base' && volumeBase=='By Sub-Brand'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Est_BRSF_Per_Bottle__c.Label}",
                            data: 'ASI_CRM_CN_Est_BRSF_Per_Bottle__c',
                            render: function (data, type, row, meta) {
                                let classes = [];

                                if (data > row.ASI_CRM_Max_Incentive__c) {
                                    classes.push('overPaid');
                                }

                                if(isCreatedInCurrentVersion){
                                    return `<input type="number" step=".01" class="${classes.join(' ')}"  min="0" value="${data || 0}" onChange="changeContractIncentive(${meta.row}, this.value, 'estimate','${tableId}')"/>`;
                                } else {
                                    return `<span class="${classes.join(' ')}">${data}</span>`;
                                }
                            },
                            visible: KPIBase == 'Volume base' && volumeBase=='By Sub-Brand'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Min_Purchase_Target__c.Label}",
                            name: "salesTarget",
                            data: 'ASI_CRM_CN_Min_Purchase_Target__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion){
                                    return `<input type="number" step=".01" min="0" value="${data}" onChange="changeMinPurchaseTarget(${meta.row}, this.value,'${criteria}','${tableId}',${isCapped})"/>`;
                                }else{
                                    return formatNumber(data);
                                }

                            },
                            visible: KPIBase == 'Value base' && volumeBase=='By Total' && criteria == 'By Ladder'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Max_Purchase_Target__c.Label}",
                            data: 'ASI_CRM_CN_Max_Purchase_Target__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion){
                                    return `<input type="number" step=".01" min="0" value="${data}" onChange="changeMaxPurchaseTarget(${meta.row}, this.value,'${criteria}','${tableId}')"/>`;
                                } else {
                                    return formatNumber(data);
                                }
                            },
                            visible: KPIBase == 'Value base' && volumeBase=='By Total' && criteria == 'By Tax'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Contract_Purchase_Value__c.Label}",
                            data: 'ASI_CRM_CN_Contract_Purchase_Value__c', className: 'summable',

                            visible: methodology !== 'Others' && KPIBase == 'Value base' && criteria != 'By Ladder' && criteria != 'By Tax'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Estimate_Purchase_Value__c.Label}",
                            data: 'ASI_CRM_CN_Estimate_Purchase_Value__c', className: 'summable',

                            visible: methodology !== 'Others' && KPIBase == 'Value base' && criteria != 'By Ladder' && criteria != 'By Tax'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Rebate_Percent__c.Label}",
                            data: 'ASI_CRM_CN_Rebate_Percent__c',
                            render: function (data, type, row, meta) {
                                data = data || 0;

                                let classes = [];

                                if (data > row.ASI_CRM_CN_Max_Rebate_Percent__c) {
                                    classes.push('overPaid');
                                }

                                if(isCreatedInCurrentVersion && !isDolphinContract){
                                    return `
                                            <input type="number" class="${classes.join(' ')}" step=".01" min="0" value="${data}" onChange="changeRebatePercent(${meta.row}, this.value,'${methodology}','${tableId}',${isCapped})"/>%`;
                                }else if(isCreatedInCurrentVersion && isDolphinContract && index == 1){
                                    return `
                                            <input type="number" class="${classes.join(' ')}" step=".01" min="0" value="${data}" onChange="changeRebatePercent(${meta.row}, this.value,'${methodology}','${tableId}',${isCapped})"/>%`;
                                } else {
                                    return `<span class="${classes.join(' ')}">${data}%</span>`;
                                }
                            },
                            visible: KPIBase === 'Value base' && ['Rebate%', 'Rebate%(By Ladder)','Rebate%(By Tax)'].includes(methodology)
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Target__c.Label}",
                            data: 'ASI_CRM_CN_Target__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion){
                                    return `<input type="number" step=".01" min="0" value="${data}" onChange="changeTargetOrRebate(${meta.row}, this.value, 'target','${tableId}')"/>`;
                                } else {
                                    return data || 0;
                                }
                            },
                            visible: KPIBase === 'Value base' && methodology === 'Reach X get Y'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Rebate__c.Label}",
                            data: 'ASI_CRM_CN_Rebate__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion){
                                    return `<input type="number" step=".01" min="0" value="${data}" onChange="changeTargetOrRebate(${meta.row}, this.value, 'rebate','${tableId}')"/>`;
                                } else {
                                    return data || 0;
                                }
                            },

                            visible: KPIBase === 'Value base' && methodology === 'Reach X get Y'
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Contract_Total}",
                            data: 'ASI_CRM_CN_Contract_Total_Dummy__c',
                            className: 'summable',

                            render: function (data, type, row, meta) {
                                data = parseFloat(data) || 0;

                                var editable = (KPIBase === 'Volume base' && volumeBase !== 'By Sub-Brand' || methodology === 'Others') && isCreatedInCurrentVersion && !isPOModi;
                                if (editable) {
                                    return `<input type="number" step=".01" min="0" value="${data}" onChange="changeTotal(${meta.row}, this.value, 'contract','${tableId}')"/>`;
                                } else {
                                    return formatNumber(data);
                                }
                            }
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Estimate_Total}",
                            data: 'ASI_CRM_CN_Est_Total_Dummy__c',
                            className: 'summable',

                            render: function (data, type, row, meta) {
                                data = parseFloat(data) || 0;
                                var editable = (KPIBase === 'Volume base' && volumeBase !== 'By Sub-Brand' || methodology === 'Others') && isCreatedInCurrentVersion;
                                if (editable) {
                                    return `<input type="number" min="0" value="${data}" onChange="changeTotal(${meta.row}, this.value, 'estimate','${tableId}')"/>`;
                                } else {
                                    return formatNumber(data);
                                }
                            }
                        }
                    ]
                } );

                table.draw();

            }


            function saveRecord(isQuickSave) {
                updateLinesBeforeApex();

                saveRecordApex(isQuickSave, JSON.stringify(PSF_Item_MapJSON), JSON.stringify(deletedLines || []));


            }
            function refreshModule(interimDataKey) {
                updateLinesBeforeApex();
                refreshModuleApex(interimDataKey, JSON.stringify(PSF_Item_MapJSON));
            }
            function resetModule(interimDataKey) {
                updateLinesBeforeApex();
                resetModuleApex(interimDataKey, JSON.stringify(PSF_Item_MapJSON));
            }
            function addModule(interimDataKey) {
                updateLinesBeforeApex();
                addModuleApex(JSON.stringify(PSF_Item_MapJSON));
            }
            function deleteModule(that) {
                updateLinesBeforeApex();
                deleteModuleApex(that.id, JSON.stringify(PSF_Item_MapJSON));
            }

            function updateLinesBeforeApex(){
                for(key in PSF_Item_MapJSON){
                    let PSFLines = $('#example_'+key).DataTable().data().toArray();
                    let newMap = {};
                    PSFLines.forEach(function (line, index) {
                        newMap[line.Id || index] = line;
                    })

                    PSF_Item_MapJSON[key].DetailLineMap = newMap;
                }
            }

        </script>
    </apex:outputPanel>

    <apex:form id="EditHeavyContractDetailPageId">
        <apex:pageMessages id="errorMessage"/>


        <div class="bs ">
            <div class="container-fluid">
                <div class="row" style=" display: inline-block; width: 100%;">
                    <div class="col-md-3" style="font-weight: bold; font-family: Arial,Helvetica,sans-serif; color: #000; font-size: 1.3em; margin: 0.2em 0;">
                        {!$ObjectType.ASI_TH_CRM_Contract__c.Label}
                    </div>
                    <div class="col-md-9">
                        <apex:actionFunction name="saveRecordApex" action="{!saveItems}" reRender="pageMsg,errorMessage" status="ActionStatus">
                            <apex:param name="isQuickSave" value="" />
                            <apex:param name="PSF_Item_MapJSON" value="" />
                            <apex:param name="PSFDeletedLinesJson" value="" />
                        </apex:actionFunction>
                        <input type="button" class="btn BSCommandButton" onclick="saveRecord(false)" value="{!$Label.ASI_CRM_CN_IOM_Save}"/>
                        <input type="button" class="btn BSCommandButton" onclick="saveRecord(true)" value="{!$Label.ASI_CRM_CN_Quick_Save}" />

                        <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_IOM_Cancel}" action="{!CancelProcess}"/>
                    </div>
                </div>

                <apex:outputPanel id="pageMsg">
                    <div class="bs row  ">
                        <div class="alert alert-danger " style="{!IF(UpsertPermission,'display:none;','')}" id="SaveFailPart">
                            <div>
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong>Error!</strong><br/>
                                <apex:outputText escape="false" value="{!msg}"/>
                            </div>
                        </div>

                        <div class="alert alert-warning fade in" style="{!IF(WarningTimes==1,'','display:none;')}" id="SaveFailPart2">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <strong>Warning!</strong><br/>
                            <apex:outputText escape="false" value="{!WarningMsg}"/>
                        </div>
                    </div>
                </apex:outputPanel>


                <!--------------------------- BRSF ------------------------------------------------------------------------>
                <apex:variable value="{!0}" var="BRSFContractMonthlyQty"/>
                <apex:variable value="{!0}" var="BRSFEstMonthlyQty"/>
                <apex:variable value="{!0}" var="BRSFContractTotalQty"/>
                <apex:variable value="{!0}" var="BRSFEstTotalQty"/>
                <apex:variable value="{!0}" var="BRSFContractTotal"/>
                <apex:variable value="{!0}" var="BRSFEstTotal"/>

                <div class="row">
                    <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;">

                        <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;">{!$Label.ASI_CRM_CN_Volume_Value_Target}</div>

                        <div style="grid-column-start: 2; grid-column-end: 2;  ">
                            <div style="margin-left: 5em;">
                                <apex:commandButton styleClass="BSCommandButton"
                                                    value="{!$Label.ASI_CRM_CN_Copy_Historical_Contract}"
                                                    onclick="BRSFNewLine();" oncomplete="Rerender();" status="ActionStatus" action="{!CopyHistoricalV0Contract}" reRender="BRSFPanel,errorMessage,OtherCostPannel"
                                                    rendered="{!!isPOModi && !isGroupPo && !isChildPo}"
                                />
                                <apex:commandButton styleClass="BSCommandButton"
                                                    onclick="BRSFNewLine();" oncomplete="Rerender();"
                                                    value="{!$Label.ASI_CRM_CN_Clear_All}"
                                                    status="ActionStatus" action="{!BRSFClearAll}" reRender="BRSFPanel,EditHeavyContractDetailPageId"
                                                    rendered="{!!isPOModi}"/>

                                <apex:commandButton styleClass="BSCommandButton"
                                                    value="{!$Label.ASI_CRM_CN_Refresh}"
                                                    status="ActionStatus" action="{!BRSFRefreshAll}" reRender="BRSFPanel,PSFPanel,DisplayListingPanel,dataFactory,OtherCostPannel"
                                                    rendered="{!isPOModi}"
                                />
                            </div>

                        </div>
                    </div>

                    <apex:actionFunction name="confirmBRSFVolValBaseChange" action="{!onBRSFVolValBaseChange}" rerender="BRSFPanel,PSFPanel,DisplayListingPanel" status="ActionStatus"/>


                    <div class="PanelBody">
                        <apex:outputPanel id="BRSFPanel">

                        <table class="module-header-table">
                            <tr>
                                <td>
                                    {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Contract_Volume_Base__c.Label}
                                </td>
                                <td>
                                    <apex:inputfield value="{!BRSFItemMap.Module.ASI_CRM_CN_Contract_Volume_Base__c}" styleClass="form-control input-sm" rendered="{!isOpenForPOSData && !isPOModi && !IsDolphinContract}" required="true"/>
                                    <apex:outputField value="{!BRSFItemMap.Module.ASI_CRM_CN_Contract_Volume_Base__c}" rendered="{!!isOpenForPOSData || isPOModi || IsDolphinContract}"/>
                                </td>
                                <td>
                                    {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Volume_Value_Base__c.Label}
                                </td>
                                <td>
                                    <apex:inputfield value="{!BRSFItemMap.Module.ASI_CRM_CN_Volume_Value_Base__c}" styleClass="form-control input-sm" rendered="{!!isPOModi}" required="true" onChange="onBRSFVolValBaseChange(this)"/>
                                    <apex:outputField value="{!BRSFItemMap.Module.ASI_CRM_CN_Volume_Value_Base__c}" rendered="{!isPOModi}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Total_Markup__c.Label}
                                </td>
                                <td>
                                    <apex:outputPanel rendered="{!!isPOModi && !isChildPo && !IsDolphinContract}">
                                        <div class="input-group">
                                            <apex:inputfield value="{!BRSFItemMap.Module.ASI_CRM_CN_Total_Markup__c}" styleClass="form-control input-sm {!IF(BRSFItemMap.Module.ASI_CRM_CN_Total_Markup__c > maxMargin, 'overPaid', '')}">
                                                <apex:actionSupport action="{!onTotalMarkupChange}" event="onchange" rerender="BRSFPanel" status="ActionStatus"/>
                                            </apex:inputField>
                                            <span class="input-group-addon">%</span>
                                        </div>
                                    </apex:outputPanel>

                                    <apex:outputField value="{!BRSFItemMap.Module.ASI_CRM_CN_Total_Markup__c}" rendered="{!isPOModi || isChildPo || IsDolphinContract}"/>
                                </td>
                                <td>
                                    {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Remark__c.Label}
                                </td>
                                <td>
                                    <apex:inputfield value="{!BRSFItemMap.Module.ASI_CRM_Remark__c}" styleClass="form-control input-sm" rendered="{!!isPOModi}"/>
                                    <apex:outputField value="{!BRSFItemMap.Module.ASI_CRM_Remark__c}" rendered="{!isPOModi}"/>
                                </td>
                            </tr>
                        </table>

                            <apex:pageMessages />

                            <table class="bs table table-condensed data-table" id="BRSFDataTable">
                                <thead>
                                <tr>
                                    <th>
                                        <apex:commandButton styleClass="BSCommandButtonSM"
                                                            status="ActionStatus"
                                                            onclick="BRSFNewLine();"
                                                            oncomplete="Rerender();"
                                                            reRender="BRSFPanel"
                                                            value="{!$Label.ASI_CRM_CN_Add_New}"
                                                            action="{!AddNew_BRSF}"
                                                            rendered="{!!isPOModi && !isChildPo}"
                                        />
                                    </th>
                                    <th style="width:20%">
                                        {!$ObjectType.ASI_MFM_Sub_brand__c.Label}
                                    </th>
                                    <th>{!$Label.ASI_CRM_CN_Grade}</th>
                                    <th style="{!IF(isPOModi,'display: none','')}">
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Contract_Monthly_QTY_StdBottle}"/>
                                    </th>
                                    <th style="{!IF(isPOModi,'display: none','')}">
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Estimate_Monthly_QTY_StdBottle}"/>
                                    </th>
                                    <!-- <th>{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_Contract_Total_QTY_std_Btl__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_Est_Total_QTY_std_Btl__c.Label}</th> -->
                                    <th>
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Contract_Total_QTY_StdBottle}"/>
                                    </th>
                                    <th>
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Estimate_Total_QTY_StdBottle}"/>
                                    </th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Contract_Purchase_Value__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Estimate_Purchase_Value__c.Label}</th>
                                    <th style="{!IF(IsDolphinContract,'','display: none;')}">
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Key_Strategy_Sub_Brand}"/>
                                    </th>
                                </tr>
                                </thead>
                                <tbody>

                                <apex:variable value="{!0}" var="BRSFContractMonthlyQty"/>
                                <apex:variable value="{!0}" var="BRSFEstMonthlyQty"/>
                                <apex:variable value="{!0}" var="BRSFContractTotalQty"/>
                                <apex:variable value="{!0}" var="BRSFEstTotalQty"/>
                                <apex:variable value="{!0}" var="BRSFContractTotal"/>
                                <apex:variable value="{!0}" var="BRSFEstTotal"/>
                                <apex:repeat value="{!BRSFItemMap.DetailLineMap}" var="itm" id="item">
                                    <apex:variable var="BRSFContractMonthlyQty" value="{!BRSFContractMonthlyQty+BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Contract_Monthly_Qty__c}"/>
                                    <apex:variable var="BRSFEstMonthlyQty" value="{!BRSFEstMonthlyQty+BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Est_Monthly_Qty__c}"/>
                                    <apex:variable var="BRSFContractTotalQty" value="{!BRSFContractTotalQty+BRSFItemMap.DetailLineMap[itm].ASI_CRM_Contract_Total_QTY_std_Btl__c}"/>
                                    <apex:variable var="BRSFEstTotalQty" value="{!BRSFEstTotalQty+BRSFItemMap.DetailLineMap[itm].ASI_CRM_Est_Total_QTY_std_Btl__c}"/>
                                    <apex:variable var="BRSFEstTotal" value="{!BRSFEstTotal+BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Est_Total_Dummy__c}"/>
                                    <apex:variable var="BRSFContractTotal" value="{!BRSFContractTotal+BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Contract_Total_Dummy__c}"/>
                                    <tr>
                                        <td style="width:2.5%; ">
                                            <apex:commandLink styleClass="bs btn btn-default btn-round pull-left btn-sm"
                                                              style="border: none;background-color: transparent;"
                                                              reRender="BRSFPanel,OtherCostPannel"
                                                              action="{!Remove_BRSF}" onclick="BRSFNewLine();"
                                                              oncomplete="Rerender();"
                                                              status="ActionStatus"
                                                              html-formnovalidate="formnovalidate"
                                                              html-data-loading-text="Loading..."
                                                              rendered="{!!isPOModi && !isChildPo}"
                                            >
                                                <span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span>
                                                <apex:param name="PARAM_Line_ID" value="{!itm}"/>
                                            </apex:commandLink>
                                        </td>
                                        <td style="width:30%">
                                            <div class="style-1" data-value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Sub_Brand__c}" id="{!'BRSFSubBrands_'+itm}">
                                                <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Sub_Brand__c}"
                                                                 styleClass="{!'SubBrandsClass_'+itm} SubBrandClass requiredField"
                                                                 onchange="ChangingSubBrand('{!itm}','');"
                                                                 rendered="{!!isPOModi}"
                                                />
                                                <apex:outputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Sub_Brand__r.Name}" rendered="{!isPOModi}"/>

                                            </div>
                                        </td>
                                        <td style="width:5%" id="{!'SBGrade_'+itm}">
                                            <apex:outputLink value="/{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Sub_Brand_Grade__c}">
                                                {!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Line_Name__c}
                                            </apex:outputLink>
                                        </td>
                                        <td style="{!IF(isPOModi,'display: none','')}" id="{!'ContractQty_'+itm}" data-id="{!itm}">
                                            <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Contract_Monthly_Qty__c}"
                                                             styleClass="BRSFContractQtyClass ApexInputNumberField InputNumberFieldWidth requiredField"
                                                             rendered="{!BRSFIsVolumeBase && !isPOModi}">
                                                <apex:actionSupport action="{!onBRSFContractMonthlyQtyChange}" event="onchange" rerender="BRSFPanel,OtherCostPannel" status="ActionStatus">
                                                    <apex:param value="{!itm}" name="itemKey"/>
                                                    <apex:param value="ASI_CRM_CN_Contract_Monthly_Qty__c" name="change"/>
                                                </apex:actionSupport>
                                            </apex:inputField>
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!BRSFIsValueBase || isPOModi}">
                                                <apex:param value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Contract_Monthly_Qty__c}"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="{!IF(isPOModi,'display: none','')}" id="{!'EstQty_'+itm}" data-id="{!itm}">
                                            <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Est_Monthly_Qty__c }"
                                                             styleclass="ApexInputNumberField InputNumberFieldWidth requiredField BRSFContractEstClass "
                                                             rendered="{!BRSFIsVolumeBase}">
                                                <apex:actionSupport action="{!onBRSFContractMonthlyQtyChange}" event="onchange" rerender="BRSFPanel,OtherCostPannel" status="ActionStatus">
                                                    <apex:param value="{!itm}" name="itemKey"/>
                                                    <apex:param value="ASI_CRM_CN_Est_Monthly_Qty__c" name="change"/>
                                                </apex:actionSupport>
                                            </apex:inputField>
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!BRSFIsValueBase}">
                                                <apex:param value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Est_Monthly_Qty__c }"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="width:5%" data-id="{!itm}">
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                <apex:param value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Contract_Total_QTY_std_Btl__c}"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="width:5%" class="BRSFEstimateIncentive" data-id="{!itm}">
                                            <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Est_Total_QTY_std_Btl__c }"
                                                             styleclass="ApexInputNumberField InputNumberFieldWidth requiredField BRSFContractEstClass "
                                                             rendered="{!BRSFIsVolumeBase && isPOModi}">
                                                <apex:actionSupport action="{!onBRSFContractMonthlyQtyChange}" event="onchange" rerender="BRSFPanel,OtherCostPannel" status="ActionStatus">
                                                    <apex:param value="{!itm}" name="itemKey"/>
                                                    <apex:param value="ASI_CRM_Est_Total_QTY_std_Btl__c" name="change"/>
                                                </apex:actionSupport>
                                            </apex:inputField>


                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!BRSFIsVolumeBase || !isPOModi}">
                                                <apex:param value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Est_Total_QTY_std_Btl__c }"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="width:5%" class="BRSFContractTotal" data-id="{!itm}">
                                            <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Contract_Total_Dummy__c}"
                                                             styleClass="BRSFContractQtyClass ApexInputNumberField InputNumberFieldWidth requiredField" rendered="{!BRSFIsValueBase && !isPOModi}">
                                                <apex:actionSupport action="{!onBRSFContractMonthlyQtyChange}" event="onchange" rerender="BRSFPanel,OtherCostPannel" status="ActionStatus">
                                                    <apex:param value="{!itm}" name="itemKey"/>
                                                    <apex:param value="ASI_CRM_CN_Contract_Total_Dummy__c" name="change"/>
                                                </apex:actionSupport>

                                            </apex:inputField>

                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!BRSFIsVolumeBase || isPOModi}">
                                                <apex:param value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Contract_Total_Dummy__c}"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="width:5%" class="BRSFEstimateTotal" data-id="{!itm}">
                                            <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Est_Total_Dummy__c}"
                                                             styleClass="BRSFContractQtyClass ApexInputNumberField InputNumberFieldWidth requiredField" rendered="{!BRSFIsValueBase}">
                                                <apex:actionSupport action="{!onBRSFContractMonthlyQtyChange}" event="onchange" rerender="BRSFPanel,OtherCostPannel" status="ActionStatus">
                                                    <apex:param value="{!itm}" name="itemKey"/>
                                                    <apex:param value="ASI_CRM_CN_Est_Total_Dummy__c" name="change"/>
                                                </apex:actionSupport>
                                            </apex:inputField>

                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!BRSFIsVolumeBase}">
                                                <apex:param value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_CN_Est_Total_Dummy__c}"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="{!IF(IsDolphinContract,'width: 5%','display: none;')}">
                                            <apex:inputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Key_Sub_brand__c}" rendered="{!!isPOModi}"/>
                                            <apex:outputField value="{!BRSFItemMap.DetailLineMap[itm].ASI_CRM_Key_Sub_brand__c}" rendered="{!isPOModi}"/>
                                        </td>
                                    </tr>
                                </apex:repeat>


                                <tr class="table-summary-row">
                                    <td colspan="2">{!$Label.ASI_CRM_CN_TOTMOT_Total_Amount}
                                    </td>
                                    <td>
                                    </td>
                                    <td style="{!IF(isPOModi,'display: none','')}" id="BRSFTotalContractMonthlyQty">
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                            <apex:param value="{!BRSFContractMonthlyQty}"/>
                                        </apex:outputText>
                                    </td>
                                    <td style="{!IF(isPOModi,'display: none','')}" id="BRSFTotalEstMonthlyQty">
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                            <apex:param value="{!BRSFEstMonthlyQty}"/>
                                        </apex:outputText>
                                    </td>
                                    <td style="padding-right: 2em;">
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                            <apex:param value="{!BRSFContractTotalQty}"/>
                                        </apex:outputText>

                                    </td>
                                    <td style="padding-right: 2em;">
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                            <apex:param value="{!BRSFEstTotalQty}"/>
                                        </apex:outputText>
                                    </td>
                                    <td style="padding-right: 2em;" id="BRSFContractTotalPart">
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                            <apex:param value="{!BRSFContractTotal}"/>
                                        </apex:outputText>
                                    </td>
                                    <td style="padding-right: 2em;" id="BRSFEstTotalPart">
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                            <apex:param value="{!BRSFEstTotal}"/>
                                        </apex:outputText>
                                    </td>
                                    <td style="{!IF(IsDolphinContract,'','display: none;')}"></td>
                                </tr>
                                </tbody>

                            </table>

                            <!-- Reinitialize the autocomplete component -->
                            <script>
                                initalizeAutoCompleteComponent();
                            </script>
                        </apex:outputPanel>
                    </div>

                </div>



                <!-------------------------------------------PSF----------------------------->
                <!-- PSF actionFunction -->
                <apex:actionFunction name="deleteModuleApex" action="{!deleteModule}" rerender="PSFPanel,DisplayListingPanel,dataFactory,errorMessage" status="ActionStatus">
                    <apex:param id="PARAMID" name="PARAMID" value=""/>
                    <apex:param name="PSF_Item_MapJSON" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="refreshModuleApex" action="{!refreshModule}" rerender="PSFPanel,dataFactory,errorMessage,pageMsg" status="ActionStatus">
                    <apex:param name="PARAM_Line_ID" value=""/>
                    <apex:param name="PSF_Item_MapJSON" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="resetModuleApex" action="{!resetModule}" rerender="PSFPanel,dataFactory,errorMessage,pageMsg" status="ActionStatus">
                    <apex:param name="PARAM_Line_ID" value=""/>
                    <apex:param name="PSF_Item_MapJSON" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="addModuleApex" action="{!PSFAddModule}" rerender="PSFPanel,dataFactory,errorMessage" status="ActionStatus">
                    <apex:param name="PSF_Item_MapJSON" value="" />
                </apex:actionFunction>

                <div class="row" style="padding-top: 1em;{!IF(isGroupPo,'display:none;','')}">

                    <apex:outputPanel id="PSFPanel">
                        <apex:actionFunction name="ChangingPSFSubBrandActionFunction" action="{!PSFChangingSB}" rerender="PSFPanel" status="ActionStatus">
                            <apex:param name="PARAM_Module_ID" value=""/>
                            <apex:param name="PARAM_Line_ID" value=""/>
                        </apex:actionFunction>
                        <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;">
                            <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;"> {!$Label.ASI_CRM_CN_PSF} </div>
                            <div style="grid-column-start: 2; grid-column-end: 2;  ">
                                <div style="margin-left: 5em;{!IF(IsDolphinContract,'display:none;','')}">
                                    <input type="button" class="btn BSCommandButton" onclick="addModule()" value="{!$Label.ASI_CRM_CN_Add_New_Module}"/>

                                </div>
                            </div>
                        </div>

                        <div class="PanelBody">
                            <apex:variable value="{!0}" var="i"/>
                            <apex:repeat value="{!PSF_Item_Map}" var="itm" id="PSFitem">
                                <apex:variable var="i" value="{!i+1}"/>

                                    <div class="panel panel-primary">
                                        <div class="panel-heading">{!$Label.ASI_CRM_CN_Module}-{!i}
                                            <span id="{!itm}" class="pull-right clickable" data-effect="fadeOut" style="{!IF((isPOModi && !PSF_Item_Map[itm].isCreatedInCurrentVersion) || IsDolphinContract,'display:none;','')}  "
                                                  onclick="deleteModule(this);InitTooltip();" oncomplete="InitTooltip();">
                                                <i class="fa fa-times"></i></span>
                                        </div>
                                        <div class="panel-body">
                                            <apex:outputPanel id="PSFModuleTable">
                                                <table class="module-header-table">
                                                    <tr>
                                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Methodology__c.Label}</td>
                                                        <td>
                                                            <apex:selectList id="PSFMethodologyInput" value="{!PSF_Item_Map[itm].Module.ASI_CRM_Methodology__c}" styleClass="form-control input-sm" size="1" rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion && !PSF_Item_Map[itm].moduleReadOnly && !IsDolphinContract}">

                                                                <apex:selectOptions value="{!PSF_Item_Map[itm].MethodologyPicklist}"/>
                                                                <apex:actionSupport action="{!onPSFMethodologyChange}" status="ActionStatus" event="onchange" rerender="PSFVolValBaseInput,PSFUnit,PSFModuleTable">
                                                                    <apex:param value="{!itm}" name="itemKey"/>

                                                                </apex:actionSupport>

                                                            </apex:selectList>
                                                            <apex:outputText value="{!PSF_Item_Map[itm].MethodologyDisplay}" rendered="{!(!PSF_Item_Map[itm].isCreatedInCurrentVersion || PSF_Item_Map[itm].moduleReadOnly) || IsDolphinContract}"/>


                                                        </td>
                                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Volume_Base__c.Label}</td>
                                                        <td>
                                                            <apex:selectList id="PSFVolValBaseInput" value="{!PSF_Item_Map[itm].Module.ASI_CRM_Volume_Base__c}" styleClass="form-control input-sm" size="1" rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion  && !PSF_Item_Map[itm].moduleReadOnly && PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Others' && !IsDolphinContract}">
                                                                <apex:selectOptions value="{!PSF_Item_Map[itm].VolumeValueBasePickList}"/>
                                                                <apex:actionSupport action="{!onPSFVolumeBaseChange}" event="onchange" rerender="PSFUnit">
                                                                    <apex:param value="{!itm}" name="itemKey"/>

                                                                </apex:actionSupport>
                                                            </apex:selectList>
                                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_Volume_Base__c}" rendered="{!(!PSF_Item_Map[itm].isCreatedInCurrentVersion || PSF_Item_Map[itm].moduleReadOnly || PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name == 'Others') || IsDolphinContract}"/>

                                                        </td>
                                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Remark__c.Label}</td>
                                                        <td>
                                                            <apex:inputfield value="{!PSF_Item_Map[itm].Module.ASI_CRM_Remark__c}" styleClass="form-control input-sm" rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion}"/>
                                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_Remark__c}" rendered="{!!PSF_Item_Map[itm].isCreatedInCurrentVersion}"/>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Unit__c.Label}</td>
                                                        <td>
                                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_Unit__c}" id="PSFUnit"/>
                                                        </td>
                                                        <td style="{!IF(PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name == 'Reach X get Y' || PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name == 'Others','display:none','')}">
                                                            <apex:outputText value="{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Minimal_Achievement__c.Label}" rendered="{!PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Reach X get Y' && PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Others'}"/>
                                                        </td>
                                                        <td style="{!IF(PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name == 'Reach X get Y' || PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name == 'Others','display:none','')}">
                                                            <apex:outputPanel rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion && PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Reach X get Y' && PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Others' && OR(IsDolphinContract && i != 1,!IsDolphinContract)}">
                                                                <div class="input-group">
                                                                    <apex:inputfield value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Minimal_Achievement__c}" styleClass="form-control input-sm" />
                                                                    <span class="input-group-addon">%</span>
                                                                </div>
                                                            </apex:outputPanel>
                                                            <apex:outputText value="{0, number, 0}%" rendered="{!OR(!PSF_Item_Map[itm].isCreatedInCurrentVersion && PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Reach X get Y' && PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name != 'Others',IsDolphinContract && i == 1)}">
                                                                <apex:param value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Minimal_Achievement__c}"/>
                                                            </apex:outputText>
                                                        </td>
                                                    </tr>
                                                    <tr style="{!IF(PSF_Item_Map[itm].Module.ASI_CRM_CN_Criteria__c == 'By Ladder', '', 'display:none;')}">
                                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Is_Capped__c.Label}</td>
                                                        <td colspan="5">
                                                            <apex:inputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Is_Capped__c}" rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion  && !PSF_Item_Map[itm].moduleReadOnly && !IsDolphinContract}"/>
                                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Is_Capped__c}" rendered="{!(!PSF_Item_Map[itm].isCreatedInCurrentVersion || PSF_Item_Map[itm].moduleReadOnly) || IsDolphinContract}"/>
                                                        </td>
                                                    </tr>
                                                </table>

                                            </apex:outputPanel>


                                            <!-- refresh buttons -->
                                            <apex:outputPanel rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion}">
                                                <div class="bs text-center">
                                                    <input type="button" class="btn BSCommandButton" onclick="refreshModule('{!itm}')" value="{!$Label.ASI_CRM_CN_Refresh}"/>
                                                    <input type="button" class="btn BSCommandButton" onclick="resetModule('{!itm}')" value="{!$Label.ASI_CRM_CN_Reset}" style="{!IF(IsDolphinContract,'display: none;','')}" />
                                                </div>
                                            </apex:outputPanel>

                                            <apex:outputPanel rendered="{!PSF_Item_Map[itm].showLineItems}">
                                                <apex:outputPanel rendered="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Criteria__c == 'By Tax' || PSF_Item_Map[itm].Module.ASI_CRM_CN_Criteria__c == 'By Ladder'}">
                                                    <table class="module-header-table">
                                                        <tr>
                                                            <td>{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Contract_Purchase_Value__c.Label}</td>
                                                            <td>
                                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                    <apex:param value="{!BRSFContractTotal}"/>
                                                                </apex:outputText>
                                                            </td>
                                                            <td>{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Estimate_Purchase_Value__c.Label}</td>
                                                            <td>
                                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                    <apex:param value="{!BRSFEstTotal}"/>
                                                                </apex:outputText>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </apex:outputPanel>


                                                <table id="example_{!itm}" class="bs table table-condensed data-table">
                                                    <tfoot>
                                                    <tr></tr>
                                                    </tfoot>
                                                </table>



                                            </apex:outputPanel>

                                        </div>
                                    </div>


                            </apex:repeat>

                            <!--PSF Summary total-->
                            <div style="{!IF(isPOModi,'','display:none; ')} ">
                                <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto; padding-top:0.5em;">
                                    <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;font-weight: bold;" title="Adjustment and Grand Total">
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_OFF_PSF_Summary_Label}"/>
                                    </div>
                                </div>
                                <div class="PanelBody" style="width:70%">
                                    <table class="bs table table-condensed" style="margin-bottom: 0; width:100%">
                                        <tr>
                                            <td class="PSFAdjLabel">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_V0_PSF_Contract_Total__c.Label}"/>
                                            </td>
                                            <td style="padding-top: 0.4em; ">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_V0_PSF_Contract_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td class="PSFAdjLabel" title="V0.0 PSF Est. Total">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_Expected_V0_PSF_Estimated_Total__c.Label}"/>
                                            </td>
                                            <td style="padding-top: 0.4em; ">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Expected_V0_PSF_Estimated_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td class="PSFAdjLabel">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_Previous_Version_PSF_Est_Total__c.Label}"/>
                                            </td>
                                            <td id="PSFGrandEstimateTotalBeforeAdjustmentId">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Previous_Version_PSF_Est_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>


                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td class="PSFAdjLabel" title="Adjustment">
                                                <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Adjustment}"/>
                                            </td>
                                            <td id="PSFAdjustmentAmountId">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_PSF_Estimate_Adjustment_Amount__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td class="PSFAdjLabel" title="Expected PSF Est. Total">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Expected_PSF_Est_Total__c.Label}"/>
                                            </td>
                                            <td id="ExpectedPSFEstimatedTotal">
                                                <apex:inputField value="{!ContractSelected.ASI_CRM_CN_Expected_PSF_Est_Total__c}" styleClass="form-control input-sm"
                                                                 onchange="GrandEstimateTotal(this.value, 'PSFGrandEstimateTotalBeforeAdjustmentId', 'PSFAdjustmentAmountId');"/>
                                            </td>
                                        </tr>

                                    </table>


                                </div>
                            </div>

                        </div>
                        <script>
                            var PSF_Item_MapJSON = {!PSF_Item_MapJSON};
                            var index = 0;
                            for (var key in PSF_Item_MapJSON) {
                                index = index+1;
                                var tableId = '#example_'+ key;
                                redrawTable(tableId,index);
                            }

                        </script>

                    </apex:outputPanel>

                </div>


                <!-----------Display Listing--------------------------->

                <div class="row" style="padding-top: 1em;{!IF(isGroupPo || IsDolphinContract,'display:none;','')}">

                    <apex:outputPanel id="DisplayListingPanel">

                        <apex:actionFunction name="ChangingPSFSubBrandActionFunction" action="{!onDisplayContractTotalChange}" rerender="DisplayListingPanel" status="ActionStatus">
                            <apex:param name="PARAM_Module_ID" value=""/>
                            <apex:param name="PARAM_Line_ID" value=""/>
                        </apex:actionFunction>
                        <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;">
                            <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;">{!$Label.ASI_CRM_CN_Display}</div>
                            <div style="grid-column-start: 2; grid-column-end: 2;  ">
                                <div style="margin-left: 5em;">
                                    <apex:commandButton styleClass="BSCommandButton"
                                                        value="{!$Label.ASI_CRM_CN_Add_New_Module}"
                                                        reRender="DisplayListingPanel"
                                                        oncomplete="Rerender();"
                                                        action="{!DisplayListingAddModule}"
                                                        status="ActionStatus"/>
                                </div>
                            </div>
                        </div>

                        <div class="PanelBody">
                            <apex:variable value="{!0}" var="i"/>
                            <apex:repeat value="{!DisplayListingItemMap}" var="itm">
                                <apex:variable var="i" value="{!i+1}"/>
                                <apex:variable var="DisplayListingItemMap[itm]" value="{!DisplayListingItemMap[itm]}"/>

                                <div class="panel panel-primary">
                                    <div class="panel-heading">{!$Label.ASI_CRM_CN_Module}-{!i}
                                        <span id="{!itm}" class="pull-right clickable" data-effect="fadeOut" style="{!IF(isPOModi && !DisplayListingItemMap[itm].isCreatedInCurrentVersion,'display:none;','')}  "
                                              onclick="deleteModule(this);InitTooltip();" oncomplete="InitTooltip();">
                                            <i class="fa fa-times"></i></span>
                                    </div>
                                    <div class="panel-body">


                                        <table class="module-header-table">
                                            <tr>
                                                <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Methodology__c.Label}</td>
                                                <td>
                                                    <apex:selectList value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c}" styleClass="form-control input-sm" size="1"
                                                                     rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion && !DisplayListingItemMap[itm].moduleReadOnly}">
                                                        <apex:selectOptions value="{!displayMethodologyOptions}"/>
                                                        <apex:actionSupport action="{!onDisplayMethodologyChange}" event="onchange" status="ActionStatus" rerender="DisplayListingPanel">
                                                            <apex:param value="{!itm}" name="itemKey"/>
                                                        </apex:actionSupport>
                                                    </apex:selectList>

                                                    <apex:outputText value="{!DisplayListingItemMap[itm].MethodologyDisplay}" rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion || DisplayListingItemMap[itm].moduleReadOnly}"/>
                                                </td>
                                                <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Volume_Base__c.Label}</td>
                                                <td>
                                                    <apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Volume_Base__c}"/>
                                                </td>
                                                <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Remark__c.Label}</td>
                                                <td>
                                                    <apex:inputfield value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Remark__c}" styleClass="form-control input-sm" rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion}"/>
                                                    <apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Remark__c}" rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion}"/>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Unit__c.Label}</td>
                                                <td>
                                                    <apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Unit__c}"/>
                                                </td>
                                                <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__r.Name == 'Reach X get Y' || DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__r.Name == 'Others','display:none','')}">{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Minimal_Achievement__c.Label}</td>
                                                <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__r.Name == 'Reach X get Y' || DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__r.Name == 'Others','display:none','')}">
                                                    <apex:outputPanel rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion}">
                                                        <div class="input-group">
                                                            <apex:inputfield value="{!DisplayListingItemMap[itm].Module.ASI_CRM_CN_Minimal_Achievement__c}" styleClass="form-control input-sm" />
                                                            <span class="input-group-addon">%</span>
                                                        </div>
                                                    </apex:outputPanel>

                                                    <apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_CN_Minimal_Achievement__c}" rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion}"/>

                                                </td>
                                            </tr>
                                        </table>

                                        <div class="bs text-center">
                                            <apex:commandButton styleClass="BSCommandButton"
                                                                value="{!$Label.ASI_CRM_CN_Refresh}"
                                                                reRender="DisplayListingPanel,errorMessage,pageMsg"
                                                                oncomplete="Rerender();InitTooltip();"
                                                                action="{!refreshModule}"
                                                                status="ActionStatus"
                                                                rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion}">
                                                <apex:param name="PARAM_Line_ID" value="{!itm}"/>
                                            </apex:commandButton>
                                            <apex:commandButton styleClass="BSCommandButton"
                                                                value="{!$Label.ASI_CRM_CN_Reset}"
                                                                reRender="DisplayListingPanel,errorMessage,pageMsg"
                                                                oncomplete="Rerender();InitTooltip();"
                                                                action="{!resetModule}"
                                                                status="ActionStatus"
                                                                rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion}">
                                                <apex:param name="PARAM_Line_ID" value="{!itm}"/>
                                            </apex:commandButton>
                                        </div>

                                        <apex:outputPanel rendered="{!DisplayListingItemMap[itm].showLineItems}">

                                            <table class="bs table table-condensed data-table">
                                                <thead>
                                                <tr>
                                                    <th style="{!IF(MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Volume_Base__c.Label}
                                                    </th>
                                                    <th style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Contract_Total_QTY_StdBottle}"/>
                                                    </th>
                                                    <th style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Estimate_Total_QTY_StdBottle}"/>
                                                    </th>
                                                    <th style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Contract_Total_QTY_CR12Eqv}"/>
                                                    </th>
                                                    <th style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Estimate_Total_QTY_CR12Eqv}"/>
                                                    </th>
                                                    <th style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Value base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        {!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Contract_Purchase_Value__c.Label}
                                                    </th>
                                                    <th style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Value base'  && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                        {!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Estimate_Purchase_Value__c.Label}
                                                    </th>
                                                    <th>
                                                    <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Contract_Total}"/>
                                                    </th>
                                                    <th>
                                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Estimate_Total}"/>
                                                    </th>
                                                </tr>
                                                </thead>
                                                <tbody>

                                                <apex:repeat value="{!DisplayListingItemMap[itm].DetailLineMap}" var="line" id="lineItem">

                                                    <tr>
                                                        <td style="{!IF(MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            {!$Label.ASI_CRM_CN_By_Total}
                                                        </td>
                                                        <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_Contract_Total_QTY_std_Btl__c}"/>
                                                            </apex:outputText>
                                                        </td>
                                                        <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_Est_Total_QTY_std_Btl__c}"/>
                                                            </apex:outputText>
                                                        </td>

                                                        <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_Contract_Total_QTY_CR12_Eqv__c}"/>
                                                            </apex:outputText>
                                                        </td>
                                                        <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Volume base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_Est_Total_QTY_CR12_Eqv__c}"/>
                                                            </apex:outputText>
                                                        </td>
                                                        <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Value base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Contract_Purchase_Value__c}"/>
                                                            </apex:outputText>
                                                        </td>
                                                        <td style="{!IF(DisplayListingItemMap[itm].Module.ASI_CRM_CN_KPI_Base__c == 'Value base' && MethodologyById[DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c].Name != 'Others','','display:none')}">
                                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Estimate_Purchase_Value__c}"/>
                                                            </apex:outputText>
                                                        </td>

                                                        <td>
                                                            <apex:inputField value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Contract_Total_Dummy__c}"
                                                                             styleclass="ApexInputNumberField InputNumberFieldWidth"
                                                                             onchange="ChangeNextAmount(this)"
                                                                             rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion && !isPOModi}"/>
                                                            <apex:outputField value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Contract_Total_Dummy__c}" rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion || isPOModi}"/>
                                                        </td>
                                                        <td>

                                                            <apex:inputField value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Est_Total_Dummy__c}"
                                                                             styleclass="ApexInputNumberField InputNumberFieldWidth displayEstimateTotal"
                                                                             onChange="calculateExpectedDisplayEstimatedTotal()"
                                                                             rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion}"/>
                                                            <!--<apex:outputText styleclass="displayEstimateTotal" value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Est_Total_Dummy__c}" rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion}"/>-->
                                                            <apex:outputText styleclass="displayEstimateTotal" value="{0, number, ###,###,###,###,##0.00}" rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion}">
                                                                <apex:param value="{!DisplayListingItemMap[itm].DetailLineMap[line].ASI_CRM_CN_Est_Total_Dummy__c}"/>
                                                            </apex:outputText>

                                                        </td>
                                                    </tr>
                                                </apex:repeat>


                                                </tbody>

                                            </table>


                                        </apex:outputPanel>
                                    </div>
                                </div>
                            </apex:repeat>

                            <!--Display Summary total-->
                            <div style="{!IF(isPOModi,'','display:none; ')} ">
                                <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto; padding-top:0.5em;">
                                    <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;font-weight: bold;" title="Adjustment and Grand Total">
                                        <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_OFF_Display_Summary_Label}"/>
                                    </div>
                                </div>
                                <div class="PanelBody" style="width:70%">
                                    <table class="bs table table-condensed" style="margin-bottom: 0; width:100%">
                                        <tr>
                                            <td class="PSFAdjLabel">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_V0_Display_Contract_Total__c.Label}"/>
                                            </td>
                                            <td style="padding-top: 0.4em; ">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_CN_V0_Display_Contract_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td class="PSFAdjLabel" title="V0.0 PSF Est. Total">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Expected_V0_Display_Est_Total__c.Label}"/>
                                            </td>
                                            <td style="padding-top: 0.4em; ">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_CN_Expected_V0_Display_Est_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td class="PSFAdjLabel">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_Prev_Version_Display_Est_Total__c.Label}"/>
                                            </td>
                                            <td id="DisplayGrandEstimateTotalBeforeAdjustmentId">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Prev_Version_Display_Est_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>


                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td class="PSFAdjLabel" title="Adjustment">
                                                <apex:outputText escape="false" value="{!$Label.ASI_CRM_CN_Adjustment}"/>
                                            </td>
                                            <td id="DisplayAdjustmentAmountId">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Display_Estimate_Adjustment_Amt__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td class="PSFAdjLabel" title="Expected PSF Est. Total">
                                                <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Expected_Display_Est_Total__c.Label}"/>
                                            </td>
                                            <td id="ExpectedDisplayEstimatedTotal">
                                                <apex:inputField value="{!ContractSelected.ASI_CRM_CN_Expected_Display_Est_Total__c}" styleClass="form-control input-sm"
                                                                 onchange="GrandEstimateTotal(this.value, 'DisplayGrandEstimateTotalBeforeAdjustmentId', 'DisplayAdjustmentAmountId');"/>
                                            </td>
                                        </tr>

                                    </table>


                                </div>
                            </div>

                        </div>

                    </apex:outputPanel>

                </div>

                <!--------------------------- Other Cost ------------------------------------------------>
                <apex:outputPanel rendered="{!!isGroupPo}" id="OtherCostPannel">
                <div class="row" style="padding-top: 1em;{!IF(isGroupPo,'display:none;','')}">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            {!$Label.ASI_CRM_CN_Other_Cost}
                        </div>
                        <div class="panel-body" style="padding: 0.5em">

                            <div class="bs table-responsive">
                                <table class="bs table table-condensed" style="margin-bottom: 0;" >
                                    <thead>
                                    <tr>
                                        <th></th>
                                        <th style="{!IF(IsDolphinContract,'','display: none;')}">
                                            <apex:outputText value="{!$ObjectType.ASI_CRM_Contract_Cost__c.Fields.ASI_CRM_CN_Contract_Amount_Rate__c.Label}"/>
                                        </th>
                                        <th>
                                            <apex:outputText value="{!$ObjectType.ASI_CRM_Contract_Cost__c.Fields.ASI_CRM_CN_Contract_Amount__c.Label}"/>
                                        </th>
                                        <th style="{!IF(IsDolphinContract,'','display: none;')}">
                                            <apex:outputText value="{!$ObjectType.ASI_CRM_Contract_Cost__c.Fields.ASI_CRM_CN_Estimate_Amount_Rate__c.Label}"/>
                                        </th>
                                        <th>
                                            <apex:outputText value="{!$ObjectType.ASI_CRM_Contract_Cost__c.Fields.ASI_CRM_CN_Estimate_Amount__c.Label}"/>
                                        </th>
                                    </tr>
                                    </thead>
                                    <apex:variable value="{!0}" var="ContractAmount"/>
                                    <apex:variable value="{!0}" var="EstimateAmount"/>
                                    <apex:variable value="{!0}" var="ContractAmountRate"/>
                                    <apex:variable value="{!0}" var="EstimateAmountRate"/>
                                    <apex:variable value="{!0}" var="rowNumber"/>
                                    <tbody>

                                    <apex:repeat value="{!LFixCost}" var="FCLine">
                                        <apex:variable var="ContractAmount" value="{!ContractAmount+FCLine.ASI_CRM_CN_Contract_Amount__c}"/>
                                        <apex:variable var="EstimateAmount" value="{!EstimateAmount+FCLine.ASI_CRM_CN_Estimate_Amount__c}"/>
                                        <apex:variable var="ContractAmountRate" value="{!ContractAmountRate+FCLine.ASI_CRM_CN_Contract_Amount_Rate__c}"/>
                                        <apex:variable var="EstimateAmountRate" value="{!EstimateAmountRate+FCLine.ASI_CRM_CN_Estimate_Amount_Rate__c}"/>
                                        <apex:variable var="rowNumber" value="{!rowNumber+1}"/>
                                        <tr>
                                            <td>
                                                <apex:outputField value="{!FCLine.Name}" rendered="{!!showCN}"/>
                                                <apex:outputField value="{!FCLine.ASI_CRM_CN_Chinese_Description__c}" rendered="{!showCN}"/>
                                            </td>
                                            <td style="{!IF(IsDolphinContract,'','display: none;')}">
                                                <apex:inputField value="{!FCLine.ASI_CRM_CN_Contract_Amount_Rate__c}"
                                                                 styleClass="ApexInputNumberField FixCostContractAmountRate" rendered="{!!isPOModi}" onchange="ChangeContractAmountRate(this)">
                                                </apex:inputField>
                                                <apex:outputField value="{!FCLine.ASI_CRM_CN_Contract_Amount_Rate__c}" rendered="{!isPOModi}"/>
                                                <apex:outputText value="%" rendered="{!!isPOModi}"/>
                                            </td>
                                            <td>
                                                <apex:inputField value="{!FCLine.ASI_CRM_CN_Contract_Amount__c}"
                                                                 styleClass="ApexInputNumberField FixCostContractAmount" onchange="ChangeNextAmount(this);" rendered="{!!isPOModi && !IsDolphinContract}"/>
                                                <apex:outputField value="{!FCLine.ASI_CRM_CN_Contract_Amount__c}" rendered="{!isPOModi || IsDolphinContract}" id="OutputFixCostContractAmount"/>
                                            </td>
                                            <td style="{!IF(IsDolphinContract,'','display: none;')}">
                                                <apex:inputField value="{!FCLine.ASI_CRM_CN_Estimate_Amount_Rate__c}"
                                                                 styleClass="ApexInputNumberField FixCostEstimateAmountRate" onchange="ChangeEstAmountRate(this)">
                                                </apex:inputField>
                                                <apex:outputText value="%"/>
                                            </td>
                                            <td>
                                                <apex:inputField value="{!FCLine.ASI_CRM_CN_Estimate_Amount__c}"
                                                                 styleClass="ApexInputNumberField FixCostEstimateAmount" onchange=" CalculateTotalInputField('FixCostEstimateAmount','FixCostTotalEstimateAmount');"
                                                                 rendered="{!!IsDolphinContract}"/>
                                                <apex:outputField value="{!FCLine.ASI_CRM_CN_Estimate_Amount__c}" rendered="{!IsDolphinContract}" id="OutputFixCostEstimateAmount"/>                
                                            </td>
                                        </tr>
                                    </apex:repeat>
                                    <tr class="table-summary-row">
                                        <td>{!$Label.ASI_CRM_CN_TOTMOT_Total_Amount}
                                        </td>
                                        <td style="{!IF(IsDolphinContract,'','display: none;')}"
                                            id="FixCostTotalContractAmountRate">
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}%">
                                                <apex:param value="{!ContractAmountRate}"/>
                                            </apex:outputText>
                                        </td>

                                        <td id="FixCostTotalContractAmount">
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                <apex:param value="{!ContractAmount}"/>
                                            </apex:outputText>
                                        </td>
                                        <td style="{!IF(IsDolphinContract,'','display: none;')}" 
                                            id="FixCostTotalEstimateAmountRate">    
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}%">
                                                <apex:param value="{!EstimateAmountRate}"/>
                                            </apex:outputText>
                                        </td>
                                        <td id="FixCostTotalEstimateAmount">
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                <apex:param value="{!EstimateAmount}"/>
                                            </apex:outputText>
                                        </td>
                                    </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <script>
                    /*function getNextElementSibling(element,num){
                        var ele = element;
                        for(var i = 0;i<num;i++){
                            if(ele.nextElementSibling){
                                ele = ele.nextElementSibling;
                            }else{
                                var node=ele.nextSibling;
                                while(node&&node.type!==1){
                                    node=node.nextSibling;
                                }
                                ele = node;
                            }
                        }
                        return ele;
                    }*/
                    function ChangeContractAmountRate(that){
                        var CurrentAmountRate = that.value;
                        var TotalContractPurchase = {!TotalContractPurchase};
                        var TotalEstimatePurchase = {!TotalEstimatePurchase};
                        console.log('CurrentAmountRate : ' + CurrentAmountRate);

                        try {
                            that.parentElement.nextElementSibling.nextElementSibling.childNodes[0].value = CurrentAmountRate;
                            that.parentElement.nextElementSibling.childNodes[0].value = (CurrentAmountRate*TotalContractPurchase/100).toFixed(2);
                            that.parentElement.nextElementSibling.childNodes[0].textContent = formatThousandNumber((CurrentAmountRate*TotalContractPurchase/100).toFixed(2));
                            that.parentElement.nextElementSibling.nextElementSibling.nextElementSibling.childNodes[0].value = (CurrentAmountRate*TotalEstimatePurchase/100).toFixed(2);
                            that.parentElement.nextElementSibling.nextElementSibling.nextElementSibling.childNodes[0].textContent = formatThousandNumber((CurrentAmountRate*TotalEstimatePurchase/100).toFixed(2));
                        } catch (err) {
                            //console.log('Failed:  '+that.parentElement.nextSibling.childNodes[0].value);
                            that.parentElement.nextSibling.nextSibling.nextSibling.childNodes[0].value = CurrentAmount;
                        }

                        console.log('FixCostTotalContractAmountRate:');
                        CalculateTotalInputField('FixCostContractAmountRate','FixCostTotalContractAmountRate');
                        console.log('FixCostContractAmount:');
                        CalculateTotalOutputField('OutputFixCostContractAmount', 'FixCostTotalContractAmount');

                        console.log('FixCostTotalEstimateAmountRate:');
                        CalculateTotalInputField('FixCostEstimateAmountRate','FixCostTotalEstimateAmountRate');
                        console.log('FixCostEstimateAmount:');
                        CalculateTotalOutputField('OutputFixCostEstimateAmount', 'FixCostTotalEstimateAmount');
                    }

                    function ChangeEstAmountRate(that){
                        var CurrentAmountRate = that.value;
                        var TotalEstimatePurchase = {!TotalEstimatePurchase};
                        console.log('CurrentAmountRate : ' + CurrentAmountRate);

                        try {
                            that.parentElement.nextElementSibling.childNodes[0].value = (CurrentAmountRate*TotalEstimatePurchase/100).toFixed(2);
                            that.parentElement.nextElementSibling.childNodes[0].textContent = formatThousandNumber((CurrentAmountRate*TotalEstimatePurchase/100).toFixed(2));
                        } catch (err) {
                            //console.log('Failed:  '+that.parentElement.nextSibling.childNodes[0].value);
                            that.parentElement.nextSibling.childNodes[0].value = CurrentAmount;
                        }

                        console.log('FixCostTotalEstimateAmountRate:');
                        CalculateTotalInputField('FixCostEstimateAmountRate','FixCostTotalEstimateAmountRate');
                        console.log('FixCostEstimateAmount:');
                        CalculateTotalOutputField('OutputFixCostEstimateAmount', 'FixCostTotalEstimateAmount');
                    }
                    //Calculate total Amount function (output Field)
                    function CalculateTotalOutputField(OutputFieldId, TotalDivId) {
                        var TotalAmount = 0;
                        //$("span[id*='OutputFixCostContractAmount']")
                        console.log($("span[id*='" + OutputFieldId+"']"));
                        $("span[id*='" + OutputFieldId+"']").each(function () {
                            TotalAmount += Number(StringToNumberStr($(this).text()));
                        });

                        try {
                            $('#' + TotalDivId)[0].childNodes[0].textContent = formatNumber(TotalAmount);
                        } catch (err) {
                            $('#' + TotalDivId)[0].textContent = formatNumber(TotalAmount);
                        }
                    }
                </script>
                </apex:outputPanel>


                <!------------------ Covered Outlet ------------------------------------------->

                <div class="row " style="padding-top: 1em;">

                    <apex:outputPanel id="CoveredOutletPanel">
                        <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;">

                            <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;">{!$Label.ASI_CRM_CN_Covered_Outlet}</div>

                            <div style="grid-column-start: 2; grid-column-end: 2;  ">
                                <div style="margin-left: 5em;">
                                    <apex:commandButton styleClass="BSCommandButton"
                                                        value="{!$Label.ASI_CRM_CN_Add_New}"
                                                        action="{!AddNew_CoveredOutlet}"
                                                        reRender="CoveredOutletPanel"
                                                        status="ActionStatus"/>
                                    <apex:commandButton styleClass="BSCommandButton"
                                                        value="{!$Label.ASI_CRM_CN_Add_All_Child_Outlet}"
                                                        action="{!AddAllChildOutlets}"
                                                        reRender="CoveredOutletPanel" status="ActionStatus"/>
                                </div>
                            </div>
                        </div>

                        <div class="PanelBody">
                            <span>{!$Label.ASI_CRM_CN_No_Covered_Outlet}: {!numberOfCoveredOutlets}</span>

                            <table class="bs table table-condensed" style="margin-bottom: 0;">
                                <thead>
                                <tr>
                                    <th>
                                        {!$Label.ASI_CRM_CN_Select_All}<br/>
                                        <apex:inputCheckbox onclick="selectAllCheckboxes(this,'inputId')"/>
                                    </th>
                                    <th>{!$Label.ASI_CRM_CN_Outlet}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Target_Volume_9L__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Target_Value__c.Label}</th>
                                </tr>
                                </thead>
                                <tbody>

                                <apex:repeat value="{!CoveredOutlet_Item_Map}" var="itm" id="CoveredOutletLine">
                                    <tr>
                                        <td>
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Selected_Covered_Outlet__c }" id="inputId"/>
                                        </td>
                                        <td>
                                            <div class="style-1">
                                                <apex:inputField value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Outlet__c}"/>
                                            </div>
                                        </td>
                                        <td>
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Target_Volume_9L__c }" styleClass="form-control input-sm"/>
                                        </td>
                                        <td>
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Target_Value__c }" styleClass="form-control input-sm"/>
                                        </td>
                                    </tr>
                                </apex:repeat>
                                </tbody>

                            </table>



                        </div>
                    </apex:outputPanel>


                </div>


                <apex:actionstatus id="ActionStatus">
                    <apex:facet name="start">
                        <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb;pointer-events:none;
                                                                             height: 100%; width:100%; opacity:0.65;">
                            <div class="waitingHolder" id="loadtext" style="position: absolute;" align="left" valign="top">
                                &nbsp;&nbsp;&nbsp;
                                <img class="waitingImage" src="/img/loading.gif" title="Please Wait..."/>
                                <span class="waitingDescription">Please Wait...</span>
                            </div>
                        </div>
                    </apex:facet>
                </apex:actionstatus>

            </div>
        </div>

    </apex:form>

</apex:page>