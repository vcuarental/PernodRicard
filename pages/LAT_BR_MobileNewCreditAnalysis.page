<apex:page showHeader="false" sidebar="false"  standardStylesheets="false" standardController="Analise_de_credito__c" extensions="LAT_BR_VFC13_NuevoAnalisisCredito" docType="html-5.0" action="{!pageActionInit}">
    
    <apex:includeScript value="{!$Resource.LAT_BR_CreditAnalysisResources}/js/jquery.min.js" />
    <apex:includeScript value="{!$Resource.LAT_BR_CreditAnalysisResources}/js/accounting.min.js" />
    <apex:stylesheet value="{!$Resource.LAT_BR_CreditAnalysisResources}/css/style.css"/>

    <apex:stylesheet value="//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"/>
    <apex:stylesheet value="{!URLFOR($Resource.LAT_CompassResources, 'static/css/main.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.LAT_CompassResources, 'static/css/edit-account-fieldset.css')}" />

    <meta http-equiv="X-UA-Compatible" content="IE=edge" />  

    <style>
        .displayNone{
            display: none;
        }


      /*  body{
          background-color: #182237;
        }*/

        .mobileTempClass{
            background-color: #182237;
        }

        /* Compass ugly blue app styles  */
        
        body {
            color: #fff;
        }

        body .pbHeader {
            padding: 0 15px;
        
        }

        .detailList tr:nth-child(even) {
            background: #f7f7f7;
        }

        th.labelCol.vfLabelColTextWrap {
            padding: 5px 7px;
        }

        .messageText {
            background: #f7f4c0;
            color: #9e0d0d;
            border: solid 2px #cc6213;
            border-radius: 4px;
            padding: 8px;
            margin-bottom: 14px;
        }

        .dataCell a {
            font-weight: 500;
            border: 1px outset #da1414 !important;
            color: #fff !important;
            background: #d01414 !important;
            padding: 5px 9px!important;
            width: 70px;
            font-size: 14px!important;
            border-radius: 3px;
                }

        .pbBody input:not([type="submit"]), .pbBody select, .pbBody textarea {
            display: block;
            width: 90%!important;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;

        }

        body .pbBody textarea { 
            height: 80px;
        }

        .detailList input[type="submit"] {
           
            margin: 0 auto;
            width: 330px;
            display: block;
            font-weight: 500;
            border: 1px outset green !important;
         
            color: white !important;
            background: green !important;
            padding: 10px!important;
            margin-bottom: 20px!important;
            font-size: 20px!important;
            border-radius: 5px;
        }

        table.list {
            margin-bottom: 30px;
        }

        body .pbHeader table  , .pbBottomButtons table{
            margin: 0 auto 20px;
        
        }

        .pbBody  h3  {
            font-size: 160%;
            font-family: 'Segoe UI', Helvetica, Arial;
            font-weight: bold;
        }

        .pbBody  table  {
            width: 100%;
        }

        body  .buttonSave {
            width: 230px;
            margin-bottom: 0!important;;
            margin-left: 13px!important;
        }

        body .buttonCancel {      
            width: 230px;
            margin-left: 13px!important;
            margin-bottom: 0!important;;
        } 

        .pbBody > div {
            border-bottom: solid 2px #eaf3f7;
            padding-bottom: 21px;
            background: #fefefe;
        }

        .pbBody {
            background: #fff;
            margin: 15px;
            padding: 15px;
            color: #423a3a;
        }

        .pbBody label {
            color: #1663b7;
            font-size: 14px;
            font-weight: 100;
            font-family: 'trebuchet ms';
            padding-top: 9px;
            padding-bottom: 6px;
        }

        .btn-neutral {
            font-weight: 500;
            border: 1px outset #0016ff !important;
            color: #fff !important;
            background: #4c67d6 !important;
            padding: 10px!important;
            margin-left: 13px!important;
            width: 230px;
            font-size: 20px!important;
            float: right;
            margin-right: 25px;
        }
        .pbHeader {
            font-weight: 500;
            margin-left: 15px;
            color: #fff !important;
            padding: 10px!important;
            font-size: 30px!important;
        }

        .requiredText, .assistiveText {
            color: #ab0505;
            padding: 0 4px 0 0;
            font-size: 12px!important;
        }
        .buttonAddProduct {
            margin-top: 1%;
        }
        
        .btnAddProduct {
            padding: 7px;
            border-radius: 3px;
            height: 15px;
        }

        .notFound {
            margin-left: 40px;
        }

        .inHeader {
            margin-bottom: 10px;
            width: 70px;
        }

        .headerRow .TableTitle {
            height: 50px !important;
            border-bottom: 1px !important;; 
        }
        .TableTitle {
            height: 50px !important;
            border-bottom: 1px !important;; 
        }
    </style>

    <script>

        function init() {
            
            /*var total = calcTotal($('.FYCA'), $('.FYPreco'));
             $('.PFTotalFooter').text(total);
             
             var total = 0;
             $('.RecomendColumn').each(function() {
                 var percent = $(this).text().replace('%','');
                 total += eval(percent);
                 console.info(total);
             });
             $('.RecomendFooter').text(total + '%');
             
             var total = calcTotal($('.FYCAAnt'), $('.FYPrecoAnt'));
             $('.PFAntTotalFooter').text(total);
             
             calcPFAtualTotal();
             calcPFAntTotal();
             calcPErcents();
             calcPFCrecimiento();*/
             
            internationalFormat();
            calcPErcents();
        }

        function setInputValues(){
            $( ".dblInput" ).each(function( index ) {
                $(this).next().val(eval($(this).next().val()).toFixed(2));
              $(this).val(parseDotToComma($(this).next().val()));
            }); 
     
            $( ".PFCrescimiento" ).each(function( index ) {
              $(this).text(parseDotToComma($(this).text()));
            }); 
        
                    total = 0;
                    $('.pesoCol').each(function() {
                        var percent = $(this).text().replace('%','');
                        total += eval(percent);
                        $(this).text(parseDotToComma($(this).text()));
                    });
                    $('.pesoFooter').text(total + '%');
            calcPFAntTotal();
            
        }

        function setAllDisabled(){
            $('#MainPB').children().off('click');

        }
        function parseDotToComma(val){
            /*nStr = val.replace(/\./g, '');
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1  ? ',' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            ret = x1 + x2;
            ret = val;
            ret = ret.toString().replace(/\./g, ',');
            ret = ret.toString().replace(/,/g, '.');
            return ret;*/
            
            val = val.toString();
            if(val.indexOf(',') != -1){
                val = val.replace(/\./g, '');
                val = val.replace(/,/g, '.');
            }

           
            val = val.replace(/\./g, ',');
         

            nStr = val;
            x = nStr.split(',');
            x1 = x[0];
            x2 = x.length > 1  ? ',' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            ret = x1 + x2;
            if(ret.indexOf(',') == -1){
                ret += ',00';
            }   
            return ret;
        }

        function parseCommaToDot(val){
            val = val.replace(/\./g, '');
            return val.replace(/,/g, '.');
            //return val;
        }


        function PFAtualchange(thisObj) {

            percent = parseCommaToDot($(thisObj).val().replace('%',''));
            retHidden = eval((parseCommaToDot($('.PFTotalFooter').text()) * percent) / 100).toFixed(2);
            var ret = parseDotToComma(retHidden);
             
            $(thisObj).parent().parent().siblings('.PFValorColumn').find('span').text(ret);
            $(thisObj).parent().parent().siblings('.PFValorColumn').find('input').val(retHidden);
             
            if ($(thisObj).parent().parent().siblings('.PFValorAntColumn').find('input').val() != 'undefined' 
                 && $(thisObj).parent().parent().siblings('.PFValorAntColumn').find('input').val() != undefined) {
                 var ant = $(thisObj).parent().parent().siblings('.PFValorAntColumn').find('span').text().replace('%','');
                if ((ant - 1) != 0) {
                    ant = parseCommaToDot(ant);
                    ret = parseCommaToDot(ret);
                    $(thisObj).parent().parent().siblings('.PFCrescimiento').text(parseDotToComma(Math.round((ret/(ant - 1)) * 100 *(-1)) / 100));
                } else {
                    $(thisObj).parent().parent().siblings('.PFCrescimiento').text(0);
                }
            }
            calcPFAtualTotal();
            calcPFCrecimiento();
        }

        function PFAnteriorchange(thisObj) {
             percent = parseCommaToDot($(thisObj).val().replace('%',''));

             retHidden = eval((parseCommaToDot($('.PFAntTotalFooter').text()) * percent) / 100).toFixed(2);
             var ret = parseDotToComma(retHidden);
             
             $(thisObj).parent().parent().siblings('.PFValorAntColumn').find('span').text(ret);
             $(thisObj).parent().parent().siblings('.PFValorAntColumn').find('input').val(retHidden);
             
             var actual = $(thisObj).parent().parent().siblings('.PFAtualColumn').find('input').val().replace('%','');
             if ((ret - 1)!= 0) {
                    actual = parseCommaToDot(actual);
                    ret = parseCommaToDot(ret);
                $(thisObj).parent().parent().siblings('.PFCrescimiento').text(parseDotToComma(Math.round((actual/(ret - 1)) * 100) / 100));
             } else {
                $(thisObj).parent().parent().siblings('.PFCrescimiento').text(0);
             }
             
             calcPFAntTotal();
             calcPFCrecimiento();
        }

        function calcTotal2(fyCaList, fyPrecoList) {        
                    var total = 0;
                    for (var i = 0; i < fyCaList.length; i++) {
                        total += eval(($(fyCaList[i]).next().val()*$(fyPrecoList[i]).next().val()));
                    }
                    return total.toFixed(2);
                }

        function calcTotal(fyCaList, fyPrecoList) {        
            var total = 0;
            for (var i = 0; i < fyCaList.length; i++) {
                total += eval(($(fyCaList[i]).val()*$(fyPrecoList[i]).val()));
            }
            return total;
        }

        function calcPFAtualTotal(selector) {
            var total = 0;
            $('.PFAtual').each(function() {
                percent = $(this).next().val().replace('%','');
                total += eval(percent);

            });
            $('.PFAtualTotal').text(parseDotToComma(Math.round(total * 100) / 100));
            //$('.PFAtualTotal').text(Math.round(total * 100) / 100 + '%');
        }

        function calcPFAntTotal() {
            var total = 0;
            $('.PFAnterior').each(function() {
                if ($(this).next().val() != 'undefined' && 
                    $(this).next().val() != undefined ) {
                    percent = $(this).next().val().replace('%','');
                    total += eval(percent);
                } else {

                    percent = $(this).text().replace('%','');
                    total += eval(percent);

                }
            });

            $('.PFAntTotal').text(parseDotToComma(Math.round(total * 100) / 100 ));
        }

        function calcPFCrecimiento(selector) {
            var total = 0;
            $('.PFCrescimiento').each(function() {
                var percent = eval(parseCommaToDot($(this).text()));
                total += eval(percent);
            });
            $('.PFTotalCrescimiento').text(parseDotToComma(Math.round(total * 100) / 100 ));
        }

        function calcPErcents() {
            $('.PFAtual').each(function(){
                percent = $(this).next().val().replace('%','');
                percent = eval(percent).toFixed(2);

                retHidden = eval((parseCommaToDot($('.PFTotalFooter').text()) * percent) / 100).toFixed(2);
                var ret = parseDotToComma(percent);

                $(this).text(ret);
                $(this).parent().parent().siblings('.PFValorColumn').find('span').text(parseDotToComma(retHidden));

                $(this).parent().parent().siblings('.PFValorColumn').find('input').val(retHidden);
             });
        }

        function calcPErcentsAnt () {
            $('.PFAnterior').each(function(){

                percent = $(this).next().val().replace('%','');
                percent = eval(percent).toFixed(2);

                retHidden = eval((parseCommaToDot($('.PFAntTotalFooter').text()) * percent) / 100).toFixed(2);
                var ret = parseDotToComma(percent);
                $(this).text(ret);
                $(this).parent().parent().siblings('.PFValorAntColumn').find('span').text(parseDotToComma(retHidden));
                $(this).parent().parent().siblings('.PFValorAntColumn').find('input').val(retHidden);
            });
        }

        function assignValues(thisObj) {
             $(thisObj).parent().siblings('.RecomendColumn').find('span').text($(thisObj).val());
             $(thisObj).parent().siblings('.RecomendColumn').find('input').val($(thisObj).find('option:selected').text());
             var total = 0;
             $('.RecomendColumn').each(function() {
                 var percent = $(this).text().replace('%','');
                 if (eval(percent)) {
                    total += eval(percent);
                 }
             });
             
             $('.RecomendFooter').text(total );
        }

        function internationalFormat() {
            // Sales Forecast
            FormatRowNumbers('FYPrecoAntVendas');
            FormatRowNumbers('FYAntRowTotal');
            
            // Proposed Billing
            FormatRowNumbers('PFValorColumnAnt');
            FormatRowNumbers('PFValorColumn15');
            FormatRowNumbers('PFValorTotal');
            FormatRowNumbers('PFTotalFooterAnt');
        }

        function FormatRowNumbers(selector) {
            $('.' + selector).each(function() {$(this).text(accounting.formatNumber(eval($(this).text().replace(/,/g, '')), 2, ".", ","))});
        }

        function doSaveAllJS() {
            Utils.showLoading();
            doSaveAll();
        }
        function sendApproveJS() {
            Utils.showLoading();
            doSendApproval();
        }

    </script>
    <apex:includeScript value="{!URLFOR($Resource.LAT_CompassResources, 'static/js/utils.js')}" />
        <div id="divModal" style="pointer-events:none;width:100%;height: 100%;background-color: transparent;z-index: 10;position: fixed;" > 
    
        </div>
    <div class="pbHeader">{!$Label.LAT_BR_VFP13_HeaderTitle}
        <button  type="button" class="btn btn-neutral" onclick="doCancel()" value= "saveActionFunction">
                            <i class="glyphicon glyphicon-chevron-left" />
                            Voltar ao Compass</button></div>
    <div class="loading hidden">Loading&#8230;</div>
    <apex:form id="mainform" >
        <!-- STATUS LOADING -->
        <apex:actionStatus id="status" >
            <apex:facet name="start">
                <c:LAT_MX_LoadingLayer ImageUrl="{!URLFOR($Resource.LAT_MX_LoadingGif)}" Message="{!$Label.LAT_BR_VFP05_00023}"/>
                <!-- Label.LAT_BR_VFP05_00023 = Espere... -->
            </apex:facet>
        </apex:actionStatus>
        <apex:pageBlock mode="edit" id="MainPB">
            <apex:pageBlockButtons >
                
                <!--<apex:commandButton action="{!saveAll}" value="{!$Label.LAT_BR_VFP11_00002}" status="status" reRender="mainform"/> -->
                <apex:outputPanel rendered="{!!OR(ac.LAT_BR_Status__c==null,ac.LAT_BR_Status__c=='Em Preenchimento',accStatus=='Novo cadastro')}">
                    <button disabled="True" type="button" class="btn btn-success buttonSave" onclick="doSaveAllJS()" value= "saveActionFunction" > <i class=" glyphicon glyphicon-ok" /> {!$Label.LAT_BR_VFP11_00002}</button>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!OR(ac.LAT_BR_Status__c==null,ac.LAT_BR_Status__c=='Em Preenchimento',accStatus=='Novo cadastro')}">
                    <button  type="button" class="btn btn-success buttonSave" onclick="doSaveAllJS()" value= "saveActionFunction" > <i class=" glyphicon glyphicon-ok" /> {!$Label.LAT_BR_VFP11_00002}</button>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!!OR(ac.LAT_BR_Status__c==null,ac.LAT_BR_Status__c=='Em Preenchimento',accStatus=='Novo cadastro')}">
                    <button disabled="true" type="button" class="btn btn-success buttonCancel" onclick="doCancel()" value= "saveActionFunction">                   <i class="glyphicon glyphicon-remove" /> {!$Label.LAT_MX_VFP04_00005}</button>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!OR(ac.LAT_BR_Status__c==null,ac.LAT_BR_Status__c=='Em Preenchimento',accStatus=='Novo cadastro')}">
                    <button type="button" class="btn btn-success buttonCancel" onclick="doCancel()" value= "saveActionFunction">                   <i class="glyphicon glyphicon-remove" /> {!$Label.LAT_MX_VFP04_00005}</button>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!!OR(ac.LAT_BR_Status__c==null,ac.LAT_BR_Status__c=='Em Preenchimento',accStatus=='Novo cadastro')}">
                    <button disabled="true" type="button" class="btn btn-success buttonSave buttonAprove" onclick="sendApproveJS();return false;">
                        Enviar para Aprovação
                    </button>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!OR(ac.LAT_BR_Status__c==null,ac.LAT_BR_Status__c=='Em Preenchimento',accStatus=='Novo cadastro')}">
                    <button type="button" class="btn btn-success buttonSave buttonAprove" onclick="sendApproveJS();return false;">
                        Enviar para Aprovação
                    </button>
                </apex:outputPanel>
                 <!--<apex:commandButton action="{!cancel}" value="{!$Label.LAT_MX_VFP04_00005}"/> -->
            </apex:pageBlockButtons>
            <apex:pageMessages escape="false" id="errorMessages"/>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP10_00003}">
                <apex:inputField value="{!ac.Conta__c}"/>
                <apex:inputField value="{!ac.Ramo_de_atuacao_Macrosegmento__c}"/>
                <apex:inputField value="{!ac.N_Funcionarios__c}"/>
                <apex:inputField value="{!ac.Atividade_principal__c}" styleClass="textField"/>
                <apex:inputField value="{!ac.N_de_funcionarios_incluindo_filiais__c}"/>
                <apex:inputField value="{!ac.Predio_instala_es__c}"/>
                <apex:inputField value="{!ac.Valor_mensal_folha_de_pagamento__c}"/>
                <apex:inputField value="{!ac.Metros_quadrados__c}"/>  
                <apex:inputField value="{!ac.Empresas_coligadas__c}" styleClass="textField"/>
                <apex:inputField value="{!ac.Valor_mensal_aluguel__c}"/>
                &nbsp;
                <apex:inputField value="{!ac.LAT_BR_Status__c}" rendered="{!isAdmin}"/>
            </apex:pageBlockSection>


            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_SalesForecastSection}" columns="1">
                <apex:actionRegion >
                
                   
                    <apex:outputPanel id="PrevisaoDeVendas" >
                        <apex:outputPanel id="PrevisaoDeVendasFound" rendered="{!salesPrevission.size>0}">
                            <script>
                                setInputValues(); 
                            </script>
                            <apex:variable value="{!0}" var="iter" />
                            <apex:pageBlockTable value="{!salesPrevission}" var="item">
                                <apex:column headerValue="{!$Label.LAT_BR_VFP13_SKUColumn}" >
                                    <apex:selectList id="skuSelect" value="{!item.SKU}" size="1" >
                                        <apex:selectOptions value="{!SKUPFY}"/>
                                    </apex:selectList> 
                                </apex:column>
                                <apex:column headerValue="{!$Label.LAT_BR_VFP13_CAColumn}" >
                                    <c:LAT_inputComponent dblValue="{!item.CA}" stclass="FYCA" />
                                    <!--<apex:inputText title="" value="{!item.CA}" styleClass="FYCA"/>-->
                                </apex:column>
                                <apex:column headerValue="{!$Label.LAT_BR_VFP13_PriceColumn}" >
                                    <c:LAT_inputComponent dblValue="{!item.Preco}" stclass="FYPreco" />
                                    <!--<apex:inputText value="{!item.Preco}" styleClass="FYPreco"/> -->
                                </apex:column>

                                <apex:column headerClass="TableTitle">
                                    <apex:facet name="header">{!$Label.LAT_BR_VFC13_Action} 
                                        <apex:commandLink action="{!addPrevisaoDeVendas}" styleClass="btn-success buttonAddProduct btnAddProduct inHeader" value="Adicionar">
                                        </apex:commandLink>
                                    </apex:facet>
                                    <!--<apex:commandLink action="{!removePrevisaoDeVendas}" reRender="PrevisaoDeVendas" value="{!$Label.LAT_BR_VFC13_Remove}">-->
                                    <apex:commandLink action="{!removePrevisaoDeVendas}" value="{!$Label.LAT_BR_VFC13_Remove}">
                                        <apex:param value="{!iter}" name="index" /> 
                                    </apex:commandLink>
                                    <apex:variable value="{!iter + 1}" var="iter" />
                                </apex:column>

                                
                            </apex:pageBlockTable>
                            
                            <script type="text/javascript">
                                $('.FYCA').change(function() {
                                    var fyCaList = $('.FYCA');
                                    var fyPrecoList = $('.FYPreco');
                                    var total = calcTotal2(fyCaList, fyPrecoList);
                                    $('.PFTotalFooter').text(parseDotToComma(total));
                                    calcPErcents();
                                });
                                $('.FYPreco').change(function() {
                                    var fyCaList = $('.FYCA');
                                    var fyPrecoList = $('.FYPreco');
                                    var total = calcTotal2(fyCaList, fyPrecoList);
                                    $('.PFTotalFooter').text(parseDotToComma(total));
                                    calcPErcents();
                                });
                            </script>
                            
                        </apex:outputPanel>
                        <apex:outputPanel id="PrevisaoDeVendasNotFound" rendered="{!salesPrevission.size==0}" style="display: table;">
                            <apex:outputText >Não tem previsão de vendas para nenhum produto</apex:outputText>
                            <apex:commandLink action="{!addPrevisaoDeVendas}" styleClass="btn-success buttonAddProduct btnAddProduct notFound" value="{!$Label.LAT_BR_VFP13_AddSKU}">
                            </apex:commandLink>
                        </apex:outputPanel>
                    </apex:outputPanel>
                    <!--<apex:commandButton action="{!addPrevisaoDeVendas}" value="{!$Label.LAT_BR_VFP13_AddSKU} hola" styleClass="btn-success buttonAddProduct"/>-->
                    
                </apex:actionRegion>
                
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_ConductedPrevFY}" columns="1" rendered="{!AND(isRevision,isCreditoCobranca)}">
                <apex:actionRegion >
                    <apex:outputPanel id="PrevisaoDeVendasAnterior"> 
                        <script>
                            setInputValues();
                        </script>
                        <apex:variable value="{!0}" var="iterAnt" />
                        <apex:pageBlockTable value="{!salesPrevissionAnt}" var="item">
                            <apex:column headerValue="{!$Label.LAT_BR_VFP13_SKUColumn}" >
                                <apex:selectList id="skuSelect" value="{!item.SKU}" size="1" >
                                    <apex:selectOptions value="{!SKUPFY}"/>
                                </apex:selectList>
                            </apex:column>
                            <apex:column headerValue="{!$Label.LAT_BR_VFP13_CAColumn}" >
                                <c:LAT_inputComponent dblValue="{!item.CA}" stclass="FYCAAnt" />
                                <!--<apex:inputText value="{!item.CA}" styleClass="FYCAAnt"/>-->
                            </apex:column>
                            <apex:column headerValue="{!$Label.LAT_BR_VFP13_PriceColumn}" >
                                <c:LAT_inputComponent dblValue="{!item.Preco}" stclass="FYPrecoAnt" />
                                <!--<apex:inputText value="{!item.Preco}" styleClass="FYPrecoAnt"/>-->
                            </apex:column>
                            <apex:column headerValue="{!$Label.LAT_BR_VFC13_Action}" >
                                <apex:commandLink action="{!removePrevisaoDeVendasAnt}" value="{!$Label.LAT_BR_VFC13_Remove}">
                                <!-- <apex:commandLink action="{!removePrevisaoDeVendasAnt}" reRender="PrevisaoDeVendasAnterior" value="{!$Label.LAT_BR_VFC13_Remove}">-->
                                    <apex:param value="{!iterAnt}" name="indexAnt" /> 
                                </apex:commandLink>
                                
                            </apex:column>
                        </apex:pageBlockTable>
                        
                        <script type="text/javascript">
                            $('.FYCAAnt').change(function() {
                                var fyCaList = $('.FYCAAnt');
                                var fyPrecoList = $('.FYPrecoAnt');
                                var total = calcTotal2(fyCaList, fyPrecoList);
                                $('.PFAntTotalFooter').text(parseDotToComma(total));
                                calcPErcentsAnt();
                            });
                            $('.FYPrecoAnt').change(function() {
                                var fyCaList = $('.FYCAAnt');
                                var fyPrecoList = $('.FYPrecoAnt');
                                var total = calcTotal2(fyCaList, fyPrecoList);
                                $('.PFAntTotalFooter').text(parseDotToComma(total));
                                calcPErcentsAnt();
                            });
                        </script>
                    </apex:outputPanel>
                    <apex:commandLink action="{!addPrevisaoDeVendasAnt}" value="{!$Label.LAT_BR_VFP13_AddSKU}">
                     <!--<apex:commandLink action="{!removePrevisaoDeVendasAnt}" reRender="PrevisaoDeVendasAnterior" value="{!$Label.LAT_BR_VFC13_Remove}">-->
                        <!--<apex:param value="{!iterAnt}" name="indexAnt" /> -->
                    </apex:commandLink>
                    <!--<apex:commandButton action="{!addPrevisaoDeVendasAnt}" value="{!$Label.LAT_BR_VFP13_AddSKU}" />
                    <apex:commandButton action="{!addPrevisaoDeVendasAnt}" value="{!$Label.LAT_BR_VFP13_AddSKU}" rerender="PrevisaoDeVendasAnterior"/>-->
                </apex:actionRegion>
            </apex:pageBlockSection>

            
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_ConductedPrevFY}" columns="1" rendered="{!AND(isRevision,!isCreditoCobranca)}">
                <apex:pageBlockTable value="{!salesPrevissionAnt}" var="item" rendered="{!salesPrevissionAnt.size > 0}">
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_SKUColumn}" >
                        <apex:outputText value="{!item.SKU}" />
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_CAColumn}" >
                        <c:LAT_inputComponent dblValue="{!item.CA}" stclass="FYCAAnt displayNone" />
                       <!-- <apex:inputText value="{!item.CA}" styleClass="FYCAAnt" style="display:none;"/> -->
                        <apex:outputText value="{0, number, ###,###,##0}">
                            <apex:param value="{!item.CA}" />
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_PriceColumn}" >
                        <c:LAT_inputComponent dblValue="{!item.Preco}" stclass="FYPrecoAnt displayNone" />
                       <!-- <apex:inputText value="{!item.Preco}" styleClass="FYPrecoAnt" style="display:none;"/>-->
                        <apex:outputText value="{0, number, ###,###,##0.00}" styleClass="FYPrecoAntVendas">
                            <apex:param value="{!item.Preco}"/>
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_ValueColumn}" >
                        <apex:outputText value="{0, number, ###,###,##0.00}" styleClass="FYAntRowTotal">
                            <apex:param value="{!item.Preco * item.CA}"/>
                        </apex:outputText>
                    </apex:column>
                </apex:pageBlockTable>
                <script type="text/javascript">
                    $('.FYCAAnt').change(function() {
                        var fyCaList = $('.FYCAAnt');
                        var fyPrecoList = $('.FYPrecoAnt');
                        var total = calcTotal2(fyCaList, fyPrecoList);
                        $('.PFAntTotalFooter').text(parseDotToComma(total));
                        calcPErcentsAnt();
                    });
                    $('.FYPrecoAnt').change(function() {
                        var fyCaList = $('.FYCAAnt');
                        var fyPrecoList = $('.FYPrecoAnt');
                        var total = calcTotal2(fyCaList, fyPrecoList);
                        $('.PFAntTotalFooter').text(parseDotToComma(total));
                        calcPErcentsAnt();
                    });
                </script>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFC13_BillingProposalSection}" columns="1">
               <apex:pageBlockTable value="{!billingProposal}" var="item" >
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_QuarterColumn}" footerValue="Total">
                        {!item.Trimestre}
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_PrevFY}" footerValue="0" footerClass="PFAntTotal" rendered="{!isRevision}" styleClass="PFAnteriorColumn">
                        <c:LAT_inputComponent dblValue="{!item.FYAnt}" stclass="PFAnterior" onChange="PFAnteriorchange(this)" rendered="{!isCreditoCobranca}" renderSpan="True"/>
                    <!--<apex:inputText value="{!item.FYAnt}" styleClass="PFAnterior" onchange="PFAnteriorchange(this)" rendered="{!isCreditoCobranca}"/> 

                        <c:LAT_inputComponent dblValue="{!item.FYAnt}" stclass="PFAnterior displayNone" onChange="PFAnteriorchange(this)" rendered="{!!isCreditoCobranca}" />-->

                        <c:LAT_inputComponent dblValue="{!item.FYAnt}" stclass="PFAnterior" onChange="PFAnteriorchange(this)" rendered="{!!isCreditoCobranca}" renderSpan="True"/>

                        <!--<apex:inputText value="{!item.FYAnt}" styleClass="PFAnterior" onchange="PFAnteriorchange(this)" rendered="{!!isCreditoCobranca}" style="display:none;"/> 
                        <apex:outputText value="{!item.FYAnt}" rendered="{!!isCreditoCobranca}" />-->
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_CurrentFY}" footerValue="0" footerClass="PFAtualTotal" styleClass="PFAtualColumn">
                        <c:LAT_inputComponent dblValue="{!item.FY}" stclass="PFAtual" onChange="PFAtualchange(this)"/>
 
                        <!--<apex:inputText value="{!item.FY}" styleClass="PFAtual" onchange="PFAtualchange(this)"/>-->
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_FatPrevColumn}" footerValue="0" footerClass="PFAntTotalFooter" styleClass="PFValorAntColumn" rendered="{!isRevision}">
                        <apex:inputHidden value="{!item.ValorAnt}" id="PFValorAntInput"/>
                        <apex:outputpanel >
                            {!ROUND(item.ValorAnt, 2)}
                        </apex:outputpanel>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_CurrentFatColumn}" footerValue="0" footerClass="PFTotalFooter" styleClass="PFValorColumn">
                        <apex:inputHidden value="{!item.Valor}" id="PFValorAtualInput"/>
                        <apex:outputpanel >
                            {!ROUND(item.Valor, 2)}
                        </apex:outputpanel>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP_Growth}" footerValue="0" footerClass="PFTotalCrescimiento" styleClass="PFCrescimiento" rendered="{!isRevision}">
                        {!IF(item.ValorAnt != 0, ROUND(((item.Valor - item.ValorAnt)/ item.ValorAnt ) * 100, 2), 0)}
                    </apex:column>
                </apex:pageBlockTable>
                <script type="text/javascript">
                    var total = calcTotal2($('.FYCA'), $('.FYPreco'));
                    $('.PFTotalFooter').text(parseDotToComma(Math.round(total * 100) / 100));

                    var total = calcTotal2($('.FYCAAnt'), $('.FYPrecoAnt'));
                    $('.PFAntTotalFooter').text(parseDotToComma(Math.round(total * 100) / 100));
                    setInputValues();
                    calcPFAtualTotal();
                    calcPFAntTotal();
                    calcPErcents();
                    calcPErcentsAnt();
                    calcPFCrecimiento();
                </script>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFC13_ClientBehavior}" columns="1" rendered="{!isCreditoCobranca}">
                <apex:pageBlockTable value="{!clientB}" var="item2" >
                    <apex:column headerValue="{!$Label.LAT_BR_VFC13_ClientBehavior}" footerValue="Total">
                        {!item2.comportamentC}
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_ValueColumn}">
                        <apex:selectList value="{!item2.Recomendacao}" size="1" onchange="assignValues(this)">
                            <apex:selectOptions value="{!item2.sOption}"/>
                        </apex:selectList>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_Weights}" footerValue="0" styleClass="pesoCol" footerClass="pesoFooter">
                        {!item2.Pesos}
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP_Recommendation}" footerValue="" styleClass="RecomendColumn" footerClass="RecomendFooter">
                        <apex:inputHidden value="{!item2.CCValor}" id="RecomendColumnInput"/>
                        <apex:outputpanel >
                            {!item2.Recomendacao}
                        </apex:outputpanel>
                    </apex:column>
                </apex:pageBlockTable>
                <script type="text/javascript">
                    var total = 0;
                    $('.RecomendColumn').each(function() {
                        var percent = $(this).text().replace('%','');
                        if (eval(percent)) {
                            total += eval(percent);
                        }
                    });
                    total = total || 0;
                    $('.RecomendFooter').text(total + '%');
                    total = 0;
                   
                    total = total || 0;
                    $('.pesoFooter').text(total + '%');
                </script>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFC13_ClientBehavior}" columns="1" rendered="{!!isCreditoCobranca}">
                <apex:pageBlockTable value="{!clientB}" var="item3" >
                    <apex:column headerValue="{!$Label.LAT_BR_VFC13_ClientBehavior}" footerValue="Total">
                        {!item3.comportamentC}
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_ValueColumn}">
                        {!item3.CCValor}
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_Weights}" footerValue="" styleClass="pesoCol" footerClass="pesoFooter">
                        {!item3.Pesos}
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP_Recommendation}" footerValue="" styleClass="RecomendColumn" footerClass="RecomendFooter">
                        {!item3.Recomendacao}
                    </apex:column>
                </apex:pageBlockTable>
                <script>
                    var total = 0;
                    $('.RecomendColumn').each(function() {
                         var percent = $(this).text().replace('%','');
                         if (eval(percent)) {
                            total += eval(percent);
                         }
                    });
                    $('.RecomendFooter').text(total + '%');
                    total = 0;
                    $('.pesoCol').each(function() {
                        var percent = $(this).text().replace('%','');
                        total += eval(percent);
                        $(this).text(parseDotToComma($(this).text()));
                    });
                    total = total || 0;
                    $('.pesoFooter').text(total + '%');
                </script>
            </apex:pageBlockSection>
            <!--<apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_Billing12months}">
                <apex:inputField value="{!ac.Ano__c}" />
                &nbsp;
                <apex:inputField value="{!ac.Janeiro__c}"/>
                <apex:inputField value="{!ac.Fevereiro__c}"/>
                <apex:inputField value="{!ac.Marco__c}"/>
                <apex:inputField value="{!ac.Abril__c}" />
                <apex:inputField value="{!ac.Maio__c}"/>
                <apex:inputField value="{!ac.Junho__c}"/>
                <apex:inputField value="{!ac.Julho__c}"/>
                <apex:inputField value="{!ac.Agosto__c}"/>
                <apex:inputField value="{!ac.Setembro__c}"/>                
                <apex:inputField value="{!ac.Outubro__c}" />
                <apex:inputField value="{!ac.Novembro__c}" />
                <apex:inputField value="{!ac.Dezembro__c}" />
                <apex:inputField value="{!ac.Valor_atual_de_estoques__c}" />
                
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_DuplierDetails}" columns="1" rendered="{!isCreditoCobranca}">
                <apex:actionRegion >
                   <apex:pageBlockTable value="{!suppliers}" var="item" id="fornecedoresTable">
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_Associate}" >
                            <apex:inputCheckbox value="{!item.Associado}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_AssociateName}">
                            <apex:inputText value="{!item.NomeAssociado}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_GreaterAccumulation}">
                            <apex:inputText value="{!item.MaiorAcumulo}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_CurrentDebit}">
                            <apex:inputText value="{!item.DebitoAtual}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_CreditLimit}">
                            <apex:inputText value="{!item.LimiteCredito}" />
                        </apex:column>
                    </apex:pageBlockTable>
                
                    <apex:commandButton action="{!addDetalhesMaioresFornecedore}" value="{!$Label.LAT_BR_VFP13_AddProviders}" rerender="fornecedoresTable"/>
                </apex:actionRegion>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_CISPinformation}" columns="1" rendered="{!!isCreditoCobranca}">
                <apex:pageBlockTable value="{!CISPInfo}" var="item" id="CISPInfoTable" rendered="{!CISPInfo.size > 0}">
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_CISPinformation}" >
                        <apex:outputText value="{!item.InfoCISP}" />
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_Ordination}">
                        <apex:outputText value="{!item.Ordenacao}" />
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_Company}">
                        <apex:outputText value="{!item.Empresa}" />
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_GreaterAccumulation}">
                        <apex:outputText value="{0, number, ###,###,##0}">
                            <apex:param value="{!item.MaiorAcum}" />
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_Date}"> 
                        <apex:outputText value="{0,date,MM'/'dd'/'yyyy}">
                            <apex:param value="{!item.Data}" />
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="{!$Label.LAT_BR_VFP13_Limit}">
                        <apex:outputText value="{0, number, ###,###,##0}">
                            <apex:param value="{!item.Limite}" />
                        </apex:outputText>
                    </apex:column>
                </apex:pageBlockTable>
            </apex:pageBlockSection>-->

            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_CISPinformation}" columns="1" rendered="{!isCreditoCobranca}">
                <apex:actionRegion >
                   <apex:pageBlockTable value="{!CISPInfo}" var="item" id="CISPInfoTable">
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_CISPinformation}" >
                            <apex:selectList id="InfoSelect" value="{!item.InfoCISP}" size="1">
                                <apex:selectOptions value="{!CISPInfoSO}"/>
                            </apex:selectList>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_Ordination}">
                            <apex:inputText value="{!item.Ordenacao}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_Company}">
                            <apex:inputText value="{!item.Empresa}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_GreaterAccumulation}">
                            <apex:inputText value="{!item.MaiorAcum}" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_Date}">
                            <apex:input value="{!item.Data}" type="auto"/>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LAT_BR_VFP13_Limit}">
                            <apex:inputText value="{!item.Limite}" />
                        </apex:column>
                    </apex:pageBlockTable>
                
                    <!--<apex:commandButton action="{!addCISPInfo}" value="{!$Label.LAT_BR_VFP13_AddInformationCISP}" rerender="CISPInfoTable"/>-->
                    <apex:commandButton action="{!addCISPInfo}" value="{!$Label.LAT_BR_VFP13_AddInformationCISP}" />
                </apex:actionRegion>
            </apex:pageBlockSection>


            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_AdditionalInformation}" columns="1">
                <apex:inputField value="{!ac.Observacoes__c}" styleClass="textField"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_CompositionOfCapital}">
                <apex:inputField value="{!ac.Capital_social__c}" rendered="{!isCreditoCobranca}"/>
                <apex:outputText value="{!ac.Capital_social__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Patrimonio_liquido__c}" rendered="{!isCreditoCobranca}"/>
                <apex:outputText value="{!ac.Patrimonio_liquido__c}" rendered="{!!isCreditoCobranca}"/>
            </apex:pageBlockSection>



            <apex:pageBlockSection title="{!$Label.LAT_BR_VFP13_SuggestedCreditLimit}" columns="1">
                <apex:inputField value="{!ac.Prazo_normal_de_pagamento__c}" rendered="{!isCreditoCobranca}"/>
                <apex:outputText value="{!ac.Prazo_normal_de_pagamento__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Special_term__c}" rendered="{!isCreditoCobranca}"/>
                <apex:outputText value="{!ac.Special_term__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Coface_Limit__c}" rendered="{!isCreditoCobranca}"/>
                <apex:outputText value="{!ac.Coface_Limit__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Current_Limit__c}" rendered="{!AND(isRevision, isCreditoCobranca)}"/>
                <apex:outputText value="{!ac.Current_Limit__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Greater_Exposure__c}" rendered="{!AND(isRevision, isCreditoCobranca)}"/>
                <apex:outputText value="{!ac.Greater_Exposure__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Greater_Exposure_month__c}" rendered="{!AND(isRevision, isCreditoCobranca)}"/>
                <apex:outputText value="{!ac.Greater_Exposure_month__c}" rendered="{!!isCreditoCobranca}"/>

                <apex:inputField value="{!ac.Sugestao_do_analista__c}"/>
                <apex:inputField value="{!ac.Comentarios_Consideracoes_finais__c}" styleClass="textField" />
            </apex:pageBlockSection>
        </apex:pageBlock>
        <apex:actionFunction name="refreshBI" action="{!retryBi}" status="status">

        </apex:actionFunction>
        <apex:actionFunction action="{!saveAll}" name="doSaveAll"/>
        <apex:actionFunction action="{!cancel}" name="doCancel"/>
        <apex:actionFunction action="{!saveAndSendApproval}" name="doSendApproval"/>
    </apex:form>
    <script type="text/javascript">
        init();
        setInputValues();
    </script>
</apex:page>