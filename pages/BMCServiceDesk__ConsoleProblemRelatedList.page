<apex:page standardController="BMCServiceDesk__Problem__c" showHeader="false" sidebar="false" extensions="BMCServiceDesk.consoleExtensionController" >
<style>
    .tertiaryPalette, .individualPalette .Custom20Block .tertiaryPalette, .layoutEdit .individualPalette .Custom20Block .tertiaryPalette {
        background-color: #00A3D1;
        border-color: #00A3D1;
    }
	.backtotop {
	color: #015BA7 !Important;
	position: relative;
	white-space: nowrap; 
}
	.bPageBlock.brandSecondaryBrd.bDetailBlock.secondaryPalette .pbBody,.bPageBlock.brandSecondaryBrd.bDetailBlock.secondaryPalette .pbHeader,
	.bPageBlock.brandSecondaryBrd.bDetailBlock.secondaryPalette .content,.bPageBlock.brandSecondaryBrd.bDetailBlock.secondaryPalette .listHoverLinks{
		display: none !important;
	}
</style>
<script>
var _RemotingActions={}
	_RemotingActions.deleteAttachment = '{!$RemoteAction.consoleExtensionController.deleteAttachment}';
	var strKeyPrefixAndObjNames;
	var recordId;
    var isLightningExperience = {!isLightningExperience};
	var contentVersionDocMap;
    if( isLightningExperience ) {
		contentVersionDocMap = JSON.parse('{!contentVersionDocJson}'); 
		_RemotingActions.PopulateKeyPrefixAndRelationshipData ='{!$RemoteAction.consoleExtensionController.PopulateKeyPrefixAndRelationshipData}'
    	recordId = '{!JSENCODE(recordId)}';
        Visualforce.remoting.Manager.invokeAction(_RemotingActions.PopulateKeyPrefixAndRelationshipData, recordId , false, function(result, event) {
            if (event.status) {
                if( null != result && '' != result ) {
                    strKeyPrefixAndObjNames = JSON.parse( result );	
                }
                
            }
        }, {escape: false});
    }
	
</script>
 <chatter:feedWithFollowers entityId="{!$CurrentPage.parameters.Id}" />
 
<apex:outputPanel id="afterSavePanel">
    <apex:detail /> 
    <script>
        var idrec = '{!JSENCODE(recordId)}';
        var _CONFIRMATIONTOKEN=''; 
        var message = '{!JSENCODE(message)}'; 
        var objname='Problem__c';
        var RecordClosed = '{!JSENCODE($label.problemclosed)}'; 
		var ApprovalPageURL = '{!$Page.ApprovalWindow}';
		var ServiceTargetStatus ='{!JSENCODE(ServiceTargetStatus)}';
        var consoleDetailElements ;
        function showmessage()
        {
            if(message == 'Redirect')
            {
                var stdApprovalPageUrl = '{!URLFOR($Action.Problem__c.submit, recordId)}';
				var submitforapprovalHandlerwindow=window.open(ApprovalPageURL +'?isApprovlWin=true&srcurl='+encodeURIComponent(stdApprovalPageUrl),null,'width=900,height=500,resizable = 1,scrollbars=1,status=1,top=200,left=300');
				var IsApprovalwindowClosed = setInterval(function() {   
			    if(submitforapprovalHandlerwindow.closed) {  
			        clearInterval(IsApprovalwindowClosed); 
			        refreshRelatedLists();
			      
			         
			    }  
			}, 1000);
            }
            else if(message.length > 0)
            {
                if (message != 'RefreshRelatedList')
					alert(message);
            }
			else{
				if(window.parent.isFocusOnProblemForm) {
                    for(var i = 0;i<this.parent.frames.length;i++){
	                    if(this.parent.frames[i].name == "problemDetailsFrame"){
                          this.parent.frames[i].showapprovalsucesmsg();
                          break;
                        }
                    }
                }
			}
			window.parent.checkApprovalstatus(true);			
            
        }
        function onCompleteEvent()
        {
            try{
				var wp =window.parent;
				if(wp!=null && wp!=undefined && ServiceTargetStatus!=''){
					wp.ServiceTargetStatus=ServiceTargetStatus;
					wp.ChangeServiceTargetButtonState(ServiceTargetStatus);
					var stBtn=wp.Ext.getCmp('servicetargets').getEl();
					if(stBtn!=null && stBtn!=undefined)
					wp.changeServiceTargetIcons(stBtn,ServiceTargetStatus);
				}
			}catch(err){}

        }
      
    </script> 
<script src="{!$Resource.SDEFCommonJS}/ConsoleRelatedList.js"  type="text/javascript" />
<script src="{!$Resource.SDEFCommonJS}/OverideLinksandbuttons.js"  type="text/javascript" />
<script type="text/javascript">
var orgNamespace ='{!orgNamespace}';
var TooltipCreate_Link_TStoPR = '{!JSENCODE($Label.TooltipFor_Create_Task_and_Link_to_Problem)}';
var TooltipLink_TStoPR = '{!JSENCODE($Label.TooltipFor_Link_task_to_Problem)}';
var TooltipLink_RMtoPR = '{!JSENCODE($Label.TooltipFor_Link_Release_to_Problem)}';
var TooltipNewLink = '{!JSENCODE($Label.TooltipFor_KM_PR_Link)}';       
var TooltipLinkCI = '{!JSENCODE($Label.TooltipFor_Problem_CI_Link)}';
var TooltipLink_CRtoPR = '{!JSENCODE($Label.TooltipFor_Link_Change_Request)}';
var TooltipLinkIncident = '{!JSENCODE($Label.TooltipFor_Link_Incident_toProblem)}';
var TooltipForCreate_Link_ChangeToProblem  = '{!JSENCODE($Label.TooltipForCreate_Link_ChangeToProblem )}';
var TooltipNewTask = '{!JSENCODE($Label.Tooltip_NewTask_Problem)}';
overridecustomnewbtnsTooltip();
hidedetails();  
overrideapprovallinks();
OverrideNotesandAttachmentsBtns();
overridecustomnewbtns();
overridelinks();
window.onclick = function() {parent.hideMenu();}       
window.onload = function() {setRelatedListBodyWidth();}
</script>
</apex:outputpanel>
<apex:form >
 
<apex:actionFunction name="createAndLinkfun" action="{!createAndLinkToProblem}" rerender="afterSavePanel" oncomplete="showmessage();" >
<apex:param assignTo="{!linkName}" value="" name="linkName"/>
</apex:actionFunction>
<apex:actionFunction name="refreshRelatedListsfun" action="{!refreshRelatedLists}" rerender="afterSavePanel" oncomplete="showmessage();onCompleteEvent();"  >
</apex:actionFunction>
<apex:actionFunction name="SubmitforApproval" action="{!SubmitforApproval}" rerender="afterSavePanel" oncomplete="showmessage();"   >
</apex:actionFunction>
</apex:form>
<table style="border: 1;" align="Center">
							<tr>
								<td align="center"><span><a class="backtotop" href="#">{!$Label.Console_BackToTop}</a> </span> 
								
								</td>
							</tr>
</table>


 </apex:Page>