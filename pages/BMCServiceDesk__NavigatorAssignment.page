<apex:page showHeader="false" controller="BMCServiceDesk.NavigatorAssignmentController" standardstylesheets="false">

 
    <c:CommonIncludes />

    <link rel="Stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/Knowledge.css" />

    <script type="text/javascript" src="{!$Resource.SDEFExtJS}/ex/ux/CheckColumn.js"></script>
    
    <script>
	var enablesavebtn = {!enablesavebutton};
Ext.onReady(function(){
    Ext.QuickTips.init();

 
    // shorthand alias
    var fm = Ext.form;
 //   var objectNameData=[['category__c'],['BMC_IPEndpoint']];
   
   	function getSysAdminNavId()
   	{
   		
   		var fetchedId = '';
   		var idx = NavStore.find('apiName', 'SYSTEM ADMINISTRATOR');
   		if(idx >= 0)
   			fetchedId = NavStore.getAt(idx).get('navid');
   		return fetchedId;
   	}
    function getObjectData(){
				return <apex:outputText escape="false" value="{!ObjectList}" />;
			}
    var NavStore = new Ext.data.ArrayStore({
            id:'objectStore',
            fields:[
                {name:'apiName'} ,             
                {name:'navid'} 
            ]
        });
 		var nlist = getObjectData();
        NavStore.loadData(nlist);
        
        NavStore.sort('apiName');
  		var sysAdminNavId = getSysAdminNavId();       
  		
        var NavNameCombo = new Ext.form.ComboBox({
            id: 'ObjectNameCombo_id',    
            typeAhead: true,

            triggerAction: 'all',
            mode: 'local',
            store: NavStore,
            valueField: 'navid',
            displayField: 'apiName',
      
            forceSelection: false
            
        });
        
       
       Ext.util.Format.navComboRenderer= function(combo) {
            return function(value) {
                var record = combo.findRecord(combo.valueField, value);
                return record ? record.get(combo.displayField) : combo.valueNotFoundText;
            }
       }

    var cm = new Ext.grid.ColumnModel([
        {
           id: 'Profile',
           header: '{!JSENCODE($Label.Profile)}',
           dataIndex: 'Profile'

        },{
           id: 'Navigator',
           header: '{!JSENCODE($Label.Navigator)}',
           dataIndex: 'Navigator',
           tooltip: '{!JSENCODE($Label.TooltipNavigatorAssignmentNavigator)}', 
           editor: NavNameCombo,
           renderer: Ext.util.Format.navComboRenderer(NavNameCombo)
        }
    ]);

    // by default columns are sortable
    cm.defaultSortable = true;
    
    // load grid data
    function getGridStore(){
    	return <apex:outputText escape="false" value="{!gridstore}" />;
    }
    var ds = new Ext.data.Store({
        reader: new Ext.data.ArrayReader({}, [
                {name: 'Profile'},
                {name: 'Navigator'},
                {name: 'ProfileId'}
             ])
    });
	var myData = getGridStore();
	
    ds.loadData(myData);
   
    // create the editor grid
    var navigator_editable_grid = new Ext.grid.EditorGridPanel({
        id: 'navigatorgrid_id', 
        store: ds,
        cm: cm,
        renderTo: 'navigatoreditor-grid',
        anchorSize: '100%',
        height: 500,
        autoExpandColumn: 'Profile',
        autoExpandColumn: 'Navigator',
        title: '{!JSENCODE($Label.NavigatorAssignment)}',
        frame: true,
  
        clicksToEdit: 1,
        sortable: false,
        enableHdMenu:false,
        cls: 'no-dirty-mark',
        width: 1000,
        viewConfig: {
                            forceFit: true
                           
                    }                    
    });
    
    var navigatorgridPanel = new Ext.Panel({
        renderTo: 'navigatoreditor-grid',
        layout:'fit',
        items:[navigator_editable_grid]
    });
    
    Ext.EventManager.onWindowResize(navigatorgridPanel.doLayout, navigatorgridPanel);
Ext.EventManager.onWindowResize(
    function()
    {
 
    navigator_editable_grid.startEditing(0, 0);
    
    }
);
    function save(){    
       var griddata =null;
      var sysAdminNavAssigned = false;
       for (var i=0; i<ds.data.length; i++){
       	if(ds.getAt(i).get('Navigator') == sysAdminNavId) sysAdminNavAssigned = true;
            if(griddata ==  null){
               griddata = String.format('[{0},{1}]', ds.getAt(i).get('ProfileId'), ds.getAt(i).get('Navigator'));
           } else {
               griddata += String.format('[{0},{1}]', ds.getAt(i).get('ProfileId'), ds.getAt(i).get('Navigator'));       
               
           }           
        }
        if (sysAdminNavAssigned == false)
        {
        	Ext.MessageBox.show({
                    width: 250,
                    title: '{!JSENCODE($Label.NavigatorAssignment)}',
                    msg: '{!JSENCODE($Label.No_Profile_With_SysAdmin_Navigator)}',
                    buttons: Ext.MessageBox.OK
                });
        	return false;
        }    
        Ext.getCmp('bmcSave').setDisabled(true);
        waitbox(0); 
        navigatorProfile(griddata);          
    }
  
 var tb = new Ext.Toolbar({
           id: 'nav_toolbar_id', 
           height: 30,
           anchor:'100%',
           border:true,
           renderTo:'navigator_toolbar',
           items: [{
                    xtype: 'box',
                    id: 'bmcSave',                    
                    autoEl: {tag: 'img', src:'{!$Resource.SDEFStyles}/SDEFbuttons/b_save.gif', title:'{!JSENCODE($Label.Save)}',name:'addBtn'},
                    style : 'cursor:pointer;padding-left:5px;padding-right:5px;',
                    listeners:{
                        render: function(c) {                                                         
                            c.getEl().on('click', function(){
                                save();                              
                            });                                    
                        }
                    }
                }]
            });
           
  if(!enablesavebtn)
     {
     	
		Ext.getCmp('bmcSave').setDisabled(true);
     }
 
});
</script>
       
<apex:outputPanel id="successId">
<script>
        function saveDone(){          
            var success_message = '{!success}';  
            if(success_message == 'success'){
                Ext.MessageBox.show({
                    width: 250,
                    title: '{!JSENCODE($Label.NavigatorAssignment)}',
                    msg: '{!JSENCODE($Label.savedSuccessfully)}',
                    buttons: Ext.MessageBox.OK
                });            
            }
            else{
                 Ext.MessageBox.show({
                    width: 250,
                    title: '{!JSENCODE($Label.NavigatorAssignment)}',
                    msg: '{!JSENCODE($Label.MsgSaveError)}'+success_message,
                    buttons: Ext.MessageBox.OK
                });
            }             
        }
        
        function enableSaveButton() {
        		Ext.getCmp('bmcSave').setDisabled(false);
      	} 
</script>
</apex:outputPanel> 
     
    <apex:form id="frmKss">
        <div id="ks-search-grid" style="width:100%;height:0px;"></div>
    
        <div id = "navigator_toolbar" style="width:100%;"></div>
        <div id = "navigator_info" style="padding-left:10px;">{!$Label.NavigatorInfo}</div>
        <div id="navigatoreditor-grid" style="margin-top: 30px;"></div>
        <apex:actionFunction Name="navigatorProfile" action="{!SaveNewSettings}"  onComplete="waitMsg.hide();saveDone(),enableSaveButton()" reRender="successId">
             <apex:param name="griddata" value="" assignTo="{!FormDataString}"/>     
        </apex:actionFunction>
    </apex:form>
     
</apex:page>