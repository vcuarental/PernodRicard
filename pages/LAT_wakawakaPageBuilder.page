<apex:page controller="LAT_wakawakaPageBuilderController" showheader="false" applyBodyTag="false" applyHtmlTag="false" standardstylesheets="false" tabStyle="Account" title="Form Render"  sidebar="false" lightningStylesheets="true"  >

<!-- <apex:page controller="LAT_wakawakaForm" showheader="false" action="{!checkIfEntryExists}" applyBodyTag="false" applyHtmlTag="false" standardstylesheets="false" tabStyle="Account" title="Form Render"  sidebar="false" lightningStylesheets="true"  > -->

<!-- applyHtmlTag="false" applyBodyTag="false" -->
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >

    <head>
        <title>Entry - Schema Form Builder</title>
        <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" />
        <apex:slds />
        <apex:stylesheet value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/css/demo.css')}"/>
        <!-- TO MOVE TO DEMO CSS -->
        <style media="all">
            body.slds-scope hr {
                margin: 0!important;
            }

            h4.page {
                font-size: 25px;
    padding-right: 10px;
    color: #328ba3;
            }

            .toast {
                z-index: 10000;
            }

            .info-small {
                font-size: 12px;
/* clear: both; */
color: #444;
border: solid 1px #ddd;
padding: 5px;
border-radius: 5px;
display: block;
float: left;
margin: 0 5px 5px 0;
            }

            .field-container {
                margin-top: 8px;
            }

            h5 span.objName b {
                    color: #1c8bbf;
            }

            .draft {
                background: #736e6e;
                border: solid 1px #2b2626;
                color: #fff;
                padding: 0px 7px;
                text-transform: uppercase;
                border-radius: 6px!important;
                letter-spacing: 1.3px;
            }

            .published {       background: #2e8339;
    border: solid 1px #102b0d;
                color: #fff;
                padding: 0px 7px;
                text-transform: uppercase;
                border-radius: 6px!important;
                letter-spacing: 1.3px;
            }

            html body.slds-scope .slds-spinner_container {
                position: fixed;
            }

            body  label.slds-radio_button__label, body  label.slds-checkbox_button__label {
                margin-right: 0!important;
            }

            body .myerror {    text-align: center;
                color: #b31212;
                font-size: 18px;
                background: #ffe8e8;
                border: solid 1px #cd4b4b;
                padding: 10px;
                border-radius: 10px;
            }

            body .myerror  ul li {
                font-size: 14px;
color: #111;
/* list-style: circle!important; */
            }

            .toast {
                position: fixed;
                /* height: 4rem; */
                /* POSITION: absolute; */
                top: 50px;
                left: 50%;
                margin-left: -217px;
                display: none;
            }

            .slds-scope img.preview-special {
                max-width: 180px;
max-height: 180px;
border-radius: 6px;
border: solid 3px #6aa0be;
            }

            .prev-cont {
                clear: both;
    display: block;
    border-top: solid 1px #ddd;
    padding-top: 15px;

            }
        </style>
    </head>



    <body class="slds-scope">

        <div class="slds">

            <div class="content">


                    <div class="slds-grid" style="border-bottom: solid 1px #ddd;padding-bottom: 10px;">
                      <div>
                          <ul class="slds-carousel__indicators" id="carru"  role="tablist">


                          </ul>
                      </div>

                      <div class="slds-col_bump-left">
                        <h4 class="page"><span id="p-name" style="color: #888;">Page Name</span> - Preview {!fbs.Name} </h4>
                          </div>

                    </div>



                    <div class="slds-grid slds-grid_align-center slds-wrap">
                        <div class="slds-col slds-size_1-of-1">
                            <div id="custom-preview" class="form-custom slds-p-horizontal_small" >
                                <form action="" id="full-form">
                                    <div id="form-insertion" class="page">

                                    </div>
                                </form>
                            </div>

                        </div>

                    </div>



                <div style="height: 180px;">

                    <div class="slds-docked-form-footer">
                        <!-- <a class="slds-button slds-button_neutral" href="/apex/LAT_wakawakaForms?id={!fbs.id}">BACK TO EDITOR</a> -->
                        <button type="button" lass="slds-button slds-button_neutral"   onclick="javascript:window.history.back();">BACK TO EDITOR</button>
                    </div>

                </div>

                <!-- Footer  -->


                <div class="slds-grid slds-grid_align-center slds-wrap">
                    <div class="slds-col slds-size_1-of-1">
                        <div id="custom-preview" class="form-custom slds-p-horizontal_small" >
                            <form action="" id="full-form">
                                <div id="form-insertion" class="page">

                                </div>
                            </form>
                        </div>

                    </div>

                </div>
            </div>

            <!-- overlay lookup -->
            <div class="lookupOverlay" style="height: auto;">
            <section role="dialog" tabindex="-1" class="slds-modal slds-max-medium-table_stacked  slds-max-medium-table_stacked-horizontal slds-modal_small slds-list-builder"
              aria-labelledby="id-of-modalheader-h2" aria-modal="true" aria-describedby="modal-content-id-1">
              <div class="slds-modal__container">
                <header class="slds-modal__header">
                  <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="hideOverlay('lookupOverlay');"
                    title="Close">
                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                        <use xlink:href="{!URLFOR($Asset.SLDS, 'icons/utility-sprite/svg/symbols.svg#close')}"></use>

                      <!-- <use xlink:href="static/icons/utility-sprite/svg/symbols.svg#close" xmlns:xlink="http://www.w3.org/1999/xlink" /> -->
                    </svg>
                    <span class="slds-assistive-text">Close</span>
                  </button>
                  <h2 id="id-of-modalheader-h2" class="slds-text-heading_medium">Choose Salesforce Object</h2>
                  <!-- <p class="slds-m-top_x-small">Pricebook: Salesforce Products</p> -->
                </header>
                <div class="slds-modal__content slds-grid slds-grow" id="modal-content-id-1">
                  <div class="slds-hide lookupLoader" style="height: 6rem;">
                    <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                      <span class="slds-assistive-text">Loading</span>
                      <div class="slds-spinner__dot-a"></div>
                      <div class="slds-spinner__dot-b"></div>
                    </div>
                  </div>
                  <div class="slds-grid lookupContent slds-grid_vertical ">
                    <div class="slds-p-vertical_x-small slds-p-horizontal_large slds-shrink-none slds-theme_shade">

                      <div class="slds-form-element">
                        <!-- <label class="slds-form-element__label" for="text-input-id-1">Salesforce Objects</label> -->
                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
                          <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                              <use xlink:href="{!URLFOR($Asset.SLDS, 'icons/utility-sprite/svg/symbols.svg#search')}"></use>

                            <!-- <use xlink:href="static/icons/utility-sprite/svg/symbols.svg#search" xmlns:xlink="http://www.w3.org/1999/xlink" /> -->
                          </svg>
                          <input type="text" id="filter-lookup" class="slds-input" placeholder="Filter Objects" />
                        </div>
                      </div>

                      <div class="slds-text-title slds-m-top_x-small lookup-count" aria-live="polite">
                        <span>0</span> Objects Availables</div>
                    </div>
                    <div class="slds-scrollable slds-grow">

                      <table role="grid" class="resultLookup slds-table slds-table_fixed-layout slds-table_bordered  slds-scrollable_none">
                        <thead>
                          <tr class="slds-text-title_caps slds-line-height_reset">
                            <th scope="col" style="width: 3.75rem;"></th>
                            <th scope="col">
                              <span class="slds-truncate" title="Name">Name</span>
                            </th>
                            <!-- <th scope="col">
                              <span class="slds-truncate" title="Name">Label</span>
                            </th> -->

                          </tr>
                        </thead>
                        <tbody>


                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>

              </div>
            </section>
            <div class="slds-backdrop"></div>
          </div>


            <!-- Remote Objects definition to set accessible sObjects and fields -->




            <!-- TOAST  -->

            <div class="toast" >
<div class="slds-notify_container slds-is-relative">
<div class="slds-notify slds-notify_toast slds-theme_success" role="status">
<span class="slds-assistive-text">success</span>
<span class="slds-icon_container slds-icon-utility-success slds-m-right_small slds-no-flex slds-align-top" title="Description of icon when needed">
<svg class="slds-icon slds-icon_small" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#success')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
</svg>
</span>
<div class="slds-notify__content">
<h2 class="slds-text-heading_small " id="toastTitle" ></h2>
</div>
<div class="slds-notify__close">
<button class="slds-button slds-button_icon slds-button_icon-inverse" title="Close">
<svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
</svg>
<span class="slds-assistive-text">Close</span>
</button>
</div>
</div>
</div>
</div>

        </div>

        <!-- GENERIC LOADER -->
        <div id="spinner" class="slds-spinner_container slds-hide" >
            <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                <div class="slds-spinner__dot-a"></div>
                <div class="slds-spinner__dot-b"></div>
            </div>
        </div>


        <!-- Vendor JS (Jquery) -->
        <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/vendor.js')}"/>
        <!-- Builders -->
        <!-- <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/waka-render.js')}"/> -->
        <!-- TO MOVE TO WAKA RENDER -->
        <script>

        function handleFile(file, inputFileName) {
            var f = file.files;
            if(f.length == 1){
                var fileName = file.files[0].name;
                var size = file.files[0].size;
                //console.log(fileName);
                //console.log(file.files[0]);
                var src = window.URL.createObjectURL(file.files[0]);
                var previewImg = '<img class="preview-special" src="'+src+'" /> ';
                //$('.prev-cont').remove();
                $('#label-'+inputFileName).parent().find('.prev-cont').remove();
                $('#'+inputFileName).addClass('updated-files');
                $('#label-'+inputFileName).parent().append('<div class="prev-cont">'+previewImg+'</div>');
                // fileName
            }
            // console.log(inputFileName);
            // console.log();
            // console.log(f);
            // var reader  = new FileReader();
            // reader.file = f;
            // var fileobj = f;
            // // document.getElementById("fileName").innerHTML = fileobj.name;
            // console.log(fileobj.name);
            // console.log(inputFileName);

        }

        // We set the conditions and the id of the item that we must to show (or hide)
        var currentConditions = [];

        function checkConditions(){

            var liError = '';
            $.each(currentConditions, function(key, condition) {
                var strCon = currentConditions[key].con;
                var elemId = currentConditions[key].elem;
                // console.log(strCon);
                try {
                     var conditionOk = eval(strCon);
                }
                catch(err) {
                    // alert(err.message);

                    liError += '<li>'+err.message+'</li>';

                }

                // console.log(conditionOk);
             // console.log(currentConditions[key]);
              if(conditionOk) {
                  $(elemId).removeClass('slds-hide');
              } else {
                 $(elemId).addClass('slds-hide');
              }


          });

          if(liError != '') {
              $('.content .slds-grid').hide();
               $('.content').append('<div class="myerror">Error - Sorry, we can\'t process the preview, please check the following errors. <ul>'+liError+'</ul></div>');
          }




        }


        //  waka-render.js
/*
* Waka waka form render powered By pirata@zimmic.com
* Converts a JSON to a custom html form or a salesforce form
* Tsamina mina, eh eh
* Waka waka, eh eh
* Tsamina mina zangalewa
* This time for Africa!
*/
class WakaWakaRender {

config () {}

// This time for Africa!
build(formJson, elToInsert) {

    var myJson = JSON.parse(formJson) ;
    var formHTML = '';
    var _this = this;
    $.each(myJson, function(key, value) {
        formHTML += _this.markup(value, elToInsert+'-'+key);
        // console.log(ind,myJson[ind] );
    });

    // for(var ind in myJson) {
    //
    //
    // }

    // draw all the html templates
    $('#'+elToInsert).html(formHTML);

    // then we have to run the validations

    $('#form-insertion').change(function(){
checkConditions();
});

$('#form-insertion input').keyup(function(){
checkConditions();
});

}

// Tsamina mina zangalewa
markup(config, key) {
    var generatedEl = 'not found';
    //console.log(key);
    var hideClass = '';
    if(config.condition && config.condition != '') {
        var condition = new Object();
        condition.elem = '#customElem-'+key;
        condition.con = config.condition;
        //console.log(condition);
        currentConditions.push(condition);
        hideClass = 'slds-hide';
    }
    //console.log(hideClass + '-' + key);
    switch (config.type) {
        case 'Line':
            var w = (config.width) ? config.width : '100%';
            var h = (config.height) ? config.height : '2px';

            return '<div id="customElem-'+key+'" class="slds-form-element '+hideClass+'"><div style="width:'+w+'; margin-bottom: 10px;"><hr style="border-top:'+h+'px solid #ccc" /></div></div>';
            // break;
        case 'header':

            var styles = "style='color: "+config.color+"; align"+config.position+"'";
            return '<div id="customElem-'+key+'" class="slds-form-element '+hideClass+'"><'+config.subtype+' '+styles+' >'+config.label+'</'+config.subtype+'></div>';
        case 'select':
            return this.processComponent(config, key, hideClass);

        case 'Photo':
            return this.processComponent(config, key, hideClass);
        case 'Action':
            return this.processComponent(config, key, hideClass);
        default:
            return this.processComponent(config, key, hideClass);

    }
    return '<div>Pirate</div>';
}


processComponent(config, key, hideClass) {
    var html = config.type + ' - item not found <br/>';
    var requiredHML = (config.required) ? '<abbr class="slds-required" title="required">*</abbr> ' : '';
    switch (config.type) {

        // SELECT
        // This time for Africa!
        case 'select':
            var multiple = (config.multiple) ? 'multiple' : '';
            var options = '';
            var placeholder = (config.placeholder) ? ('<option value="" >'+config.placeholder+'</option>') : '<option value="" >Please Select</option>';
            if(multiple == 'multiple') {
                placeholder = '';
            }
            config.values.forEach(function(element) {
                options += '<option value="'+element.value+'">'+element.label+'</option>';
            });

            html = '<div id="customElem-'+key+'" class="slds-form-element '+hideClass+'">\
            <label class="slds-form-element__label" for="'+config.name+'">'+requiredHML +config.label+'</label>\
                <div class="slds-form-element__control">\
                <div class="slds-select_container">\
                    <select '+multiple+' name="'+config.name+'" class="slds-select" id="'+config.name+'">\
                    '+placeholder+'\
                    '+options+'\
                    </select>\
                </div>\
                </div>\
            </div>';
            break;

        // PHOTO
        // This time for Africa!
        case 'Photo':
            var label = (config.label) ? config.label : 'Foto';
            var value = (config.value) ? config.value : '';
            var currentEl = '';
            //console.log('photo value', config);
            if(value != ''){
                currentEl = '<div  class="slds-box slds-theme_shade">\
                                <p><img  src="/servlet/servlet.FileDownload?file='+value+'" /></p>\
                            </div>';
            }
            html =  '<div class="slds-form-element '+hideClass+'" id="customElem-'+key+'">'+currentEl+'<label class="buttonFile slds-button_neutral btn-block slds-button"><svg class="slds-icon slds-icon-text-default" aria-hidden="true"><use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#photo"></use></svg> <span id="label-'+config.name+'">'+config.label+'</span><input class="image-selector"  name="'+config.name+'" id="'+config.name+'" value=""  capture="camera"  onchange="handleFile(this, \''+config.name+'\')"  style="display: none;" type="file" accept="image/*;"></label></div>';
        break;


        // Action
        // This time for Africa!
        case 'Action':
            var action = (config.action) ? config.action : 'submit';
            var label = (config.text) ? config.text : 'save';
            var cssStyle = (config.cssStyle) ? config.cssStyle : 'slds-button_neutral';
            var fullButton = (config.fullButton == 'yes') ? 'btn-block' : '';
            var position = (config.position == 'left' ) ? '' : 'slds-float_right';
            var background = (config.background  ) ? config.background : '';
            var color = (config.color) ? config.color : '';
            var goPage = (config.goPage) ? config.goPage : '';

            //console.log('PIRATE', config);
            var myStyle = '';
            if(background != '' && color != '') {
                myStyle = 'background: '+ background +'; color: '+ color+';';
                cssStyle = 'slds-button_neutral';
            }

                html = '<div    class="slds-form-element '+hideClass+'" id="customElem-'+key+'"><a  style="'+myStyle+'" onclick="runEvent(\''+action +'\', \''+goPage +'\' )"  class="slds-button '+position +' '+fullButton+' '+cssStyle+'">'+label+'</a></div>';

        break;


        // Action
        // This time for Africa!
        case 'TextInput':
            var label = (config.label) ? config.label : '';
            var required = (config.required) ? ' <abbr class="slds-required" title="required">* </abbr>' : '';
            var rows = config.rows;
            var value = (config.value) ? config.value : '';
            var readOnly = (config.readOnly) ? 'disabled': '';
            var placeholder = (config.placeholder) ? config.placeholder : '';
            var customType = (config.customType) ? customType : 'text';
            // var customType = () ? : '';
            // var customType = () ? : '';
            // var customType = () ? : '';


            customType =  (config.hidden) ?  'hidden' : customType;

            html = '<div id="customElem-'+key+'" class="slds-form-element '+hideClass+'">\
              <label class="'+config.name+'" for="text-input-id-1">'+required+label+'</label>\
              <div class="slds-form-element__control">';
              if(rows > 1) {
                html += ' <textarea '+readOnly+ ' name="'+config.name+'" id="'+config.name+'" class="slds-textarea" placeholder="'+placeholder+'">'+value+'</textarea>';
              } else {
                html += '<input '+readOnly+' name="'+config.name+'" id="'+config.name+'" class="slds-input" type="'+customType+'" value="'+value+'" />';
              }

            html += '</div>\
            </div>';




        break;


        // checkbox-group
        // This time for Africa!
        case 'checkbox-group':
            var label = (config.label && config.label != 'undefined' ) ? config.label : '';
            var required = (config.required) ? ' <abbr class="slds-required" title="required">* </abbr>' : '';
            var rows = config.rows;
            var value = (config.value) ? config.value : '';
            var placeholder = (config.placeholder) ? config.placeholder : '';
            var customType = (config.customType) ? customType : '';
            var values = (config.values) ?  config.values : [];
            // var customType = () ? : '';
            // var customType = () ? : '';
            // var customType = () ? : '';


            customType =  (config.hidden) ?  'hidden' : customType;

            html = '        <fieldset id="customElem-'+key+'" class="slds-form-element '+hideClass+'">\
                <legend class="slds-form-element__legend slds-form-element__label">'+required+label+'</legend>\
                <div class="slds-form-element__control">\
                    <div class="slds-checkbox_button-group">';

                    $.each(values, function(key, value) {
                        html += '<span class="slds-button slds-checkbox_button">\
                            <input id="'+config.name+'-'+key+'" name="'+config.name+'" type="checkbox" value="'+value.value+'" />\
                            <label class="slds-checkbox_button__label" for="'+config.name+'-'+key+'">\
                                <span class="slds-checkbox_faux">'+value.label+'</span>\
                            </label>\
                        </span> ';
                    });



            html += '     </div>\
                </div>\
            </fieldset>';




        break;
        case 'Lookup':
            var label = (config.label) ? config.label : '';
            var name = (config.name) ? config.name : slugify(config.label);
            var filterSalesforce = (config.filter) ? config.filter : '';
            // Escape error fix , we replace quotes to # and then before to send to salesforce, we will add it again
            filterSalesforce = filterSalesforce.replace(/["']/g, "#");

            var relationFields = (config.relationFields) ? config.relationFields : '';

            //console.log('########################', config);
            //console.log('############## filterSalesforce ##########', filterSalesforce);
            html =             '<article id="customElem-'+key+'" class="slds-card  '+hideClass+'">\
                <div class="slds-card__header slds-grid">\
                <header class="slds-media slds-media_center slds-has-flexi-truncate">\
                <div class="slds-media__figure">\
                <span class="slds-icon_container slds-icon-action-follow" title="'+label+'">\
                <svg aria-hidden="true" class="slds-icon" title="when needed"><use xlink:href="/_slds/icons/standard-sprite/svg/symbols.svg#default"></use></svg>\
                <span class="slds-assistive-text">'+label+'</span>\
                </span>\
                </div>\
                <div class="slds-media__body">\
                <h5 id="lookup-'+name+'" class="slds-card__header-title">\
                    <a href="javascript:void(0);" onclick="openSalesforceLookup(\''+filterSalesforce+'\',  \''+relationFields+'\', \''+label+' \', \' '+config.displayFields+' \', \''+config.object+'\',\''+config.orderBy+'\',\''+config.orderBy+'\', \''+name+'\')" class="slds-card__header-link slds-truncate" title="'+label+'">\
                    <input class="lookup" type="hidden" id="'+name+'" value="" name="'+name+'" />\
                <span class="objName">'+label+' <b></b></span>\
                </a>\
                <div class="field-container" id="fields-'+name+'">\
                </div>\
                </h5>\
                </div>\
                </header>\
                </div>\
                </article>';

        break;



        default:
            break;
    }

    return html;
}


}

        </script>

        <script>

        var timeout = null;


        function openLookup(eId, objectName, fields, unProcessFields, relationFields, filter) {
        //    console.log('>>>>>>>'+fields);
          //var currentValue = $('#' + eId).val();
          $('#filter-lookup').on('keyup', function () {
            clearTimeout(timeout);
            timeout = setTimeout(function () {
                var searchTerm = $('#filter-lookup').val();
                if(searchTerm.length > 2) {
                    invokeRemoting(searchTerm, objectName, fields, eId, unProcessFields, relationFields, filter);
                }

          }, 500);
          });
        }

        function hideOverlay(elParent) {
          $('.' + elParent + ' section').removeClass('slds-fade-in-open');
          $('.' + elParent + ' .slds-backdrop').removeClass('slds-backdrop_open');
        }

        function showOverlay(elParent) {
          $('.' + elParent + ' section').addClass('slds-fade-in-open');
          $('.' + elParent + ' .slds-backdrop').addClass('slds-backdrop_open');


        }

        function setObjectInfo(objectLabel){
            $('#id-of-modalheader-h2').html('Choose '+objectLabel+' Object.');
            $('#filter-lookup').attr('placeholder', 'Filter '+objectLabel);


        }

        function openSalesforceLookup(filter, relationFields, label, fields, object, orderBy,  orderByColumn, elName){

            showOverlay('lookupOverlay');
            $('#filter-lookup').val('');
            setObjectInfo(label);
            var rex = /\(([^)]+)\)/g;
            var matches = fields.match(rex);
            var fieldsArray = [];

            //console.log('pirate', fields)
            for (var i = 0; i < matches.length; i++) {
                fieldsArray.push(matches[i].replace('(', ' ').replace(')', ' '));
            }
            // Add Relation Fields TO DO: ADD LABEL
            var relationArray = (relationFields != '') ?  relationFields.split('# ') : [];

            $(relationArray).each(function(ind , relF){
                fieldsArray.push(relF);
                //console.log('>>>>>', relF);
            });

            //console.log('>>>>> fieldsArray', fieldsArray);



            // console.log();
            openLookup(elName, object, fieldsArray.join(), fields, relationFields, filter );
            $('.lookupOverlay tbody tr').remove();
            $('.lookup-count span').html('0');
        }

        function setCurrent(relationFields, unProcessFields, elId, parentElId){
            var myJson = $('#'+elId).val();
            // aca


            //$('#'+parentElId).val(myJson);
            processValues(relationFields, unProcessFields, myJson, parentElId);
            //console.log('unProcessFields', unProcessFields);

        }

        function processValues(relationFields, unProcessFields, myJson, elId){
            var currentJson = $.parseJSON(myJson);
            //console.log(currentJson);
            var items = unProcessFields.split('#');
            var lookupEntry = new Object();

            lookupEntry.name = elId;
            lookupEntry.values = [];

            // new pirate implementation

            // Clear Pills
            $('#fields-'+elId + ' span').remove()

            $.each(items, function(ind, el){
                var splitedElement =  el.split('-');
                var elLabel = splitedElement[0];
                // console.log(elLabel);
                var regExp = /\(([^)]+)\)/;
                var matches = regExp.exec(splitedElement[1]);
                var objectName = matches[1];
                // console.log(objectName);

                var exist = false;

                $(currentJson).each(function(i , elem){

                    //console.log('###### ', elem);
                    if(elem.hasOwnProperty(objectName) ){
                        exist = true;
                        $('#fields-'+elId).append('<span class="info-small"><b>'+elLabel+'</b>:  '+elem[objectName]+'</span>');
                        var el = new Object();
                        //el.name =  elLabel ;
                        el[elLabel] =  elem[objectName] ;
                        lookupEntry.values.push(el);
                    }
                });

                if(!exist) {
                    $('#fields-'+elId).append('<span class="info-small"><b>'+elLabel+'</b>: - </span>');
                    var el = new Object();
                    el[elLabel] =  '' ;
                    lookupEntry.values.push(el);
                }



            });

            // Process Relation Fields
            var arrayRelation = (relationFields != '') ? relationFields.split('#') : [];
            // arrayRelation.push(relationFields);
            $(arrayRelation).each(function(i , elem){

                var elemSplit = elem.split('.');
                var relationName = elemSplit[0].trim().toString();
                var relationField =  elemSplit[1].trim().toString();



                $(currentJson).each(function(index , controllerObj){

                    // console.log(controllerObj.hasOwnProperty(relationField));
                    if(controllerObj.hasOwnProperty(relationName) ){
                        var myObject = controllerObj[relationName];

                        var ref = elemSplit[0].trim().toString();
                        // var relationField = Object.keys(myObject)[0];
                        console.log('myObject', myObject);

                        // exist = true;
                        $('#fields-'+elId).append('<span class="info-small"><b>'+elem+'</b>:  '+ myObject[relationField] +'</span>');
                        // console.log('###### relationField ', relationField.toString());
                        // console.log('###### controllerObj ', myObject);
                        var el = new Object();
                        // el.name =  elem ;
                        el[elem] =   myObject[relationField] ;
                        lookupEntry.values.push(el);
                    }
                });

            });



            // Force to add Name and Id
            var el = new Object();
            // el.name =  'Name' ;
             // =  elem[objectName] ;
            el['Name'] =  currentJson['Name'] ;
            lookupEntry.values.push(el);

            $('#lookup-'+elId + ' a span b').html(' - '+el['Name']);

            // $('#fields-'+elId).append('<span class="info-small"><b>Name</b>: '+currentJson['Name']+' </span>');

            el = new Object();
            el['Id'] =  currentJson['Id'] ;
            lookupEntry.values.push(el);
            // Pirate
            $('#'+elId).val(JSON.stringify(lookupEntry.values));

            hideOverlay('lookupOverlay');
            checkConditions();

        }

        function invokeRemoting(searchText, objectName, fields, eId, unProcessFields, relationFields, filter){
            //console.log(searchText);
            //console.log('fieldsfieldsfieldsfields', fields);


            // Filter in format: accountId = {{FIELDNAME}} must be replaced before to send to the controller
            var reg = /\{{([^}]+)\}}/;
            if(reg.test(filter)) {
                var regProcessed = filter.match(reg)
                var valueToUpdate = regProcessed[0];
                var inputId =  regProcessed[1];
                var currentValue = $('#'+inputId).val();
                var salesforceId = '';
                if(currentValue != '') {
                    var obj = JSON.parse(currentValue);
                    // check all the fields to get the salesforce Id
                    $.each(obj, function(ind, el){
                        if(this.Id){
                            salesforceId = this.Id;
                        }
                    });
                }
                // If we get the salesforceId we can update the filter
                filter = filter.replace(valueToUpdate, "'"+salesforceId+"'");
            }
            $('.lookupOverlay tbody tr').remove();
            Visualforce.remoting.Manager.invokeAction(
               '{!$RemoteAction.LAT_wakawakaPageBuilderController.getSalesforceObject}', fields, objectName,  searchText, filter,
               function(result, event){
                   if (event.status) {

                       $('.lookup-count span').html(result.length);

                        $(result).each(function(ind , el){
                            var checked = '';
                            var textFormated = '';
                            var elem = '';
                            var index = 0;
                            var text = el.Name;
                            var jsonInfo = JSON.stringify(el);
                            var row = '<tr class="slds-hint-parent">\
                                         <td role="gridcell" tabindex="0" class="slds-text-align_right" style="width: 3.75rem;">\
                                           <div class="slds-checkbox_add-button">\
                                             <input id="info-'+el.Id+'" type="hidden" value=\''+jsonInfo+'\' /> \
                                             <input type="checkbox" '+checked+' onclick="setCurrent(\''+relationFields+'\', \''+unProcessFields+'\',\'info-'+el.Id+'\', \''+eId+'\')" class="slds-assistive-text" id="add-checkbox-'+ind+'" value="add-checkbox-'+ind+'" tabindex="-1" />\
                                             <label for="add-checkbox-'+ind+'" class="slds-checkbox_faux">\
                                               <span class="slds-assistive-text">Select item '+ind+'</span>\
                                             </label>\
                                           </div>\
                                         </td>\
                                         <th scope="row">\
                                           <div class="slds-truncate" title="'+text+'">'+text+'</div>\
                                         </th>\
                                       </tr>';
                            $('.lookupOverlay tbody').append(row);
                        });
                        if(result.length == 0) {
                            $('.lookupOverlay tbody').append('<tr><td colspan="2"><center>No results found</center></td></tr>');
                        }
                       //console.log(result);

                   } else if (event.type === 'exception') {
                       alert(event.message + " - " + event.where);

                   } else {
                       alert(event.message );
                   }
               },
               {escape: true}
           );
            //console.log("PROCESSED FILTER", filter);


        }

        // We can have differnts lookups with the same object, we need to identify
        function slugify(string) {
          return string
            .toString()
            .trim()
            .toLowerCase()
            .replace(/\s+/g, "-")
            .replace(/[^\w\-]+/g, "")
            .replace(/\-\-+/g, "-")
            .replace(/^-+/, "")
            .replace(/-+$/, "");
        }

        var formId = '{!fbs.Id}';
        var isEdition = false;

        var entryId = "";
        var entryName  = "demo";



		function runEvent(evt, goPage) {
			var elementsToSave = [];
            var fieldPopulated = 0;
			// Save Entry
			if(evt == 'Submit' || evt == 'Save' ) {
                alert('Save Action not alowed');

			}
            else if(evt == 'Next'){
                $('.page-child').hide();
                nextInd = parseInt(nextInd)+1;
                if(goPage != ''){
                    $($('.page-child').get(goPage)).slideDown();
                } else {
                    $($('.page-child').get(nextInd)).slideDown();
                }
                $('.slds-carousel__indicator a').removeClass('slds-is-active');
                $($('.slds-carousel__indicator a').get(nextInd)).addClass('slds-is-active');
                $('#p-name').html(pageNames[nextInd]);

            }
            else if(evt == 'Back'){
                $('.page-child').hide();
                nextInd = parseInt(nextInd)-1;
                // ind = ind-1;
                if(goPage != ''){
                    $($('.page-child').get(goPage)).slideDown();
                } else {
                    $($('.page-child').get(nextInd)).slideDown();
                }
                $('.slds-carousel__indicator a').removeClass('slds-is-active');
                $($('.slds-carousel__indicator a').get(nextInd)).addClass('slds-is-active');
                $('#p-name').html(pageNames[nextInd]);
            }
            else {

				alert(evt);
			}
		}

        function processImageFileIdConvertion(elementsToSave){
            // Process Pictures
            var imgSelectors = $('.image-selector');
            $.each(imgSelectors, function(key, value) {
                var el = new Object();
                el.name = $(value)[0].name;
                el.value = ($(value).data('imageId')) ? $(value).data('imageId') : '' ;
                elementsToSave.push(el);
            });
            return elementsToSave;
        }

        function imagePopulatorCount(){

            var ret = 0;
            var imgSelectors = $('.image-selector');
            $.each(imgSelectors, function(key, value) {

                ret = ($(value).data('imageId')) ? ret+1 : ret ;

            });
            //console.log('tetetete',ret);
            return ret;
        }

        var ind = 0;
        var nextInd = 0;
        var pageNames = [];

        // Build each page
        <apex:repeat value="{!fbs.Form_Builder_Pages__r}"  var="page"  >
            $('<div class="page-child" id="page-'+ind+'"><div id="{!page.id}">{!page.Name}</div></div>').appendTo('#form-insertion');
            var {!page.id}myRender = new WakaWakaRender();
            // var json{!page.id} = '{!page.Json__c}';
            var json{!page.id} = JSON.stringify({!page.Json__c});
            {!page.id}myRender.build(json{!page.id}, '{!page.id}');

            var newLi = '<li class="slds-carousel__indicator" role="presentation">\
              <a id="indicator-id-{!page.id}" class="slds-carousel__indicator-action" href="javascript:display('+ind+', \'{!page.Name}\');" role="tab" tabindex="'+ind+'" aria-selected="true" aria-controls="content-id-{!page.id}" title="{!page.Name}">\
                <span class="slds-assistive-text">{!page.Name}</span>\
              </a>\
            </li>';

            if(ind == 0) {
                $('#p-name').html('{!page.Name}');
            }
            ind++;
            pageNames.push('{!page.Name}');
            $(newLi).appendTo('#carru');

        </apex:repeat>



        // Hide pages
        $('.page-child:not(:first-child)').hide();
        // indicator
        $('.slds-carousel__indicator:first-child a').addClass('slds-is-active');

        function display(ind, pageName){
            $('.page-child').hide();
            $($('.page-child').get(ind)).slideDown()
            $('.slds-carousel__indicator a').removeClass('slds-is-active');
            $($('.slds-carousel__indicator a').get(ind)).addClass('slds-is-active');
            nextInd = ind;
            $('#p-name').html(pageNames[nextInd]);
        }


        checkConditions();

        </script>


    </body>



</html>





</apex:page>