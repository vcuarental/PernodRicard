<apex:page standardController="ASI_MFM_Payment__c"  sidebar="false"  docType="html-5.0" extensions="ASI_MFM_JP_PaymentManageAllCtrl" action="{!init}">
    
   <head>
       <meta charset="utf-8"/>
       <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
       <meta name="viewport" content="width=device-width, initial-scale=1"/>

       
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_JP_Library, 'dist/css/bootstrap.min.css')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_JP_Datatable, 'DataTables-1.10.7/media/css/jquery.dataTables.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_JP_Library, 'dist/css/SimpleTable.css')}" />
         <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_JP_Jqueryui,'jquery-ui-1.11.4.custom/jquery-ui.css')}"/>
    
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"/>
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/jquery-ui.min.js"/>  
        
    
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_JP_Library, 'dist/js/bootstrap.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_JP_Datatable, 'DataTables-1.10.7/media/js/jquery.dataTables.min.js')}" />
        
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_JP_Library, 'dist/js/numericInput.min.js')}" />
        
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_JP_Library, 'dist/js/CurrencyUtil.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_JP_Library, 'dist/js/currency.js')}" />    
        
        <script type="text/javascript">
        $j = jQuery.noConflict();
        var headerId = null;
        var resultTable;
        var PORLTable;
        var returnURL;
        var datatableILength = 15;   
        var initCurrency; 
        var allowReceiptAmountFloat = false;
        var allowInputVATAdjust = true;
        var totalAmountDecimalPlace = 0;
        var finishRetrievePaymentLineItems = false;
        var origLineItems = [];
        var subBrand = ['Loading'];
        var ACCodes = ['Loading'];
        var api;
        
        function initPaymentManageAllPage(config) {
            if (config) {
                headerId = config.headerId;
                initCurrency = config.initCurrency;
                if(initCurrency!=="JPY") { 
                    allowReceiptAmountFloat = true;
                    totalAmountDecimalPlace = 2;
                    //allowInputVATAdjust = false;
                }
                setResultTable(true);
                setPORLineTable(true);
                retrieveLineItems();
                initalizeAutoCompleteComponent();
            }
        }
        
        
        
        $j(document).on('mousemove', function(e){
            $j('#loadtext').css({
                left:  e.pageX,
                top:   e.pageY
            });
        });
        

        /*method for stop enter to submit form*/
         function stopRKey(evt) {
           var evt = (evt) ? evt : ((event) ? event : null);
           var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
           if ((evt.keyCode == 13) && (node.type=="text")) {return false;}
        }
        
        document.onkeypress = stopRKey; 

        function formatNumber(n) {
                return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        function setResultTable(newTable){
            
            console.log("draw payment table");
     
            resultTable =  $j('#dt_PaymentLineItems').on( 'init.dt', function () {
                
                console.log("init draw payment table");
                
            }).DataTable({   
                
                                                                         "bDestroy":true,
                                                                         "bSearch":false,
                                                                         "dom": '<"top">irt<"bottom"p><"clear">',
                                                                         "bAutoWidth":false,                        
                                                                         "bSort": false, 
                                                                         "iDisplayLength":datatableILength,
                                                                         "sPaginationType": "full_numbers",
                                                                         "bLengthChange": false,
                                                                         "columnDefs": [{
                                                                                                    "targets": [ 0 ],
                                                                                                    "searchable": false,
                                                                                                    "orderable": false
                                                                                                            },
                                                                                        {
                                                                                                    "targets": [ 8 ],
                                                                                                    "searchable": false,
                                                                                                    "visible": allowInputVATAdjust                                                                                             
                                                                                        }
                                                                         ],
                                                                         "initComplete": function(){
                                                                            // calculateSum();
                                                                         },
                                                                        "fnDrawCallback": function() {
                                                                            
                                                                                api = this.api();
                                                                            
                                                                                $j('.payline_amount input').change();
                                                                                $j('.payline_adjust input').change();
                                                                                
                                                                                $j('.amount').numericInput({ allowNegative: false ,allowFloat: allowReceiptAmountFloat });
                                                                                $j('.vatamount').numericInput({  allowNegative: true , allowFloat: allowReceiptAmountFloat });
                                                                                
                                                                                api.column(12).nodes().to$().each(function(index) { 
                                                                                    
                                                                                        $j(this).find('.amount').each(function() { 
                                                                                            
                                                                                            var columnAmount = parseFloat($j(this).val().replace(/[$,]+/g,""));//.replace(",", ".")); //$j(this).val().replace(/[$,]+/g,"");
                                                                                            
                                                                                            if(!allowReceiptAmountFloat && (!isNaN(columnAmount))){
                                                                                                
                                                                                                      $j(this).val(columnAmount);
                                                                                            
                                                                                                      console.log('Now:'+$j(this).val() );
                                                                                            }
                                                                                          

                                                                                        });
                                                                                    
                                                                                });         

                                                                                api.column(13).nodes().to$().each(function(index) { 
                                                                                    
                                                                                        $j(this).find('.vatamount').each(function() { 
                                                                                            
                                                                                            var columnAmount = parseFloat($j(this).val().replace(/[$,]+/g,""));//.replace(",", ".")); //$j(this).val().replace(/[$,]+/g,"");
                                                                                            
                                                                                            if(!allowReceiptAmountFloat && (!isNaN(columnAmount))){
                                                                                                
                                                                                                      $j(this).val(columnAmount);
                                                                                            
                                                                                                      console.log('Now:'+$j(this).val() );
                                                                                            }
                                                                                          

                                                                                        });
                                                                                    
                                                                                });  
                                                                                
                                                                                $j('.payline_amount input').on("focus", function() {
                                                                                    
                                                                                }).change(function () {
                                                                                    console.log("need to re-calculate the amount");
                                                                                    calculateSum();
                                                                                    
                                                                                });
                                                                                 
                                                                                $j('.payline_adjust input').on("focus", function() {
                                                                                    
                                                                                }).change(function () {
                                                                                    console.log("need to re-calculate the adjustment");
                                                                                    calculateAdjust();
                                                                                });
                                                                                
                                                                                
                                                                                //$j('#total_payment_amount').html(sum.toFixed(2));
                                                                                //$j('#total_vat_amount').html(sum.toFixed(2));
                                                                                //console.log($j('#total_payment_amount').html());
                                                                                //console.log($j('#total_vat_amount').html());
                                                                                ////$j('#total_final_amount').change();
                                                                        },
                                                                          "footerCallback": function( tfoot, data, start, end, display ) {
                                                                          
                                                                            api = this.api();
                                                                            
                                                                            calculateSum();
                                                                            calculateAdjust();
                                                                        } 
                                                                        
                
            });
        }
        
        function setPORLineTable(newTable){
            // $j('#dt_PoLineItems').DataTable({"bAutoWidth":false,"bSort":true});
                                                        
            PORLTable =  $j('#dt_PorLineItems').DataTable({
                "bDestroy":true,
                "bSort":true,
                "dom": '<"top">irt<"bottom"p><"clear">',
                "iDisplayLength":datatableILength,
                "order": [],
                "columnDefs": [
                                                                                {
                                                                                "targets": [ 0 ], // action button
                                                                                "searchable": false,
                                                                                "orderable": false
                                                                            },
                                                                            {
                                                                                 "render": function ( data, type, row ) {
                                                                                   return formatNumber(data) +' '+ row[10] + ''; //for Receipt Amount
                                                                            },
                                                                                  "targets": -2,
                                                                                  type: 'currency'
                                                                            },
                                                                            { 
                                                                                  "visible": false,   //Currency 
                                                                                  "searchable": true,
                                                                                  "targets": -3
                                                                            }  
                            ]
                
                
            });
        }
        
       function setAutoFilterAction(){
           var search_Plan = $j('.search_Plan').val();
           var search_PO = $j('.search_PO').val();
           var search_POline = $j('.search_POline').val();
           var search_PORL = $j('.search_PORL').val();
           var localSBList = $j('#localSBList').val();
           var localCodeList = $j('#localCodeList').val();
           
           PORLTable.column(1)
           .search(search_Plan)
           .column(2)
           .search(search_PO)
           .column(3)
           .search(search_POline)
           .column(4)
           .search(search_PORL)
           .column(5)
           .search(localSBList)
           .column(6)
           .search(localCodeList)
           .draw();                
       }
       
       function setFilterAction(){
           $j('.search_Plan,  .search_PO, .search_POline, .search_PORL').change( function() { 
               
               var search_Plan = $j('.search_Plan').val();
               var search_PO = $j('.search_PO').val();
               var search_POline = $j('.search_POline').val();
               var search_PORL = $j('.search_PORL').val();
               var localSBList = $j('#localSBList').val();
               var localCodeList = $j('#localCodeList').val();
               
               PORLTable.column(1)
               .search(search_Plan)
               .column(2)
               .search(search_PO)
               .column(3)
               .search(search_POline)
               .column(4)
               .search(search_PORL)
               .column(5)
               .search(localSBList)
               .column(6)
               .search(localCodeList)
               .draw();             
           });
       }
       
        function retrieveLineItems() {
            finishRetrieveLineItems = false;
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_JP_PaymentManageAllCtrl.PaymentLineItems}',headerId
                , callbackLineItem
                , {escape: true, timeout: 10000}
            );
        }
        
        /*
        function retrieveSubBrandList(response){
            var subBrand = $j('#rowObjAll_Subbrand').val();
            console.log(subBrand);
            
            if(subBrand!==""){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ASI_MFM_JP_PaymentManageAllCtrl.InitializeSubBrandList}',subBrand
                    , function (Subbrands, event){
                        if(event.status){
                            console.log(JSON.stringify(Subbrands));
                            var objList = [];
                            for(var i = 0; i < Subbrands.length; i++){
                                var obj = new Object();
                                obj.label = Subbrands[i].Name;
                                obj.value = Subbrands[i].Name;
                                obj.id = Subbrands[i].Id;
                                objList.push(obj);
                               
                            }
                            response(objList);
                            //rowObjAll_Subbrand
                        }else{
                            
                        }
                    }
                    , {escape: true, timeout: 10000}               
                );
            }
        }
        
        
        function retrieveACCodeList(response){
            var ac = $j('#rowObjAll_ACCode').val();
            console.log(ac);
            
            if(ac!==""){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ASI_MFM_JP_PaymentManageAllCtrl.InitializeACCodeList}',ac
                    , function (accodes, event){
                        if(event.status){
                            console.log(JSON.stringify(ac));
                            var objList = [];
                            for(var i = 0; i < accodes.length; i++){
                                var obj = new Object();
                                obj.label = accodes[i].Name;
                                obj.value = accodes[i].Name;
                                obj.id = accodes[i].Id;
                                objList.push(obj);
                            }
                            response(objList);
                            //rowObjAll_Subbrand
                        }else{
                            
                        }
                    }
                    , {escape: true, timeout: 10000}               
                );
            }
        }
        */
        
        function callbackLineItem(lineItems, event) {
            if (event.status) {
                if (lineItems) {
                    origLineItems = [];
                    var size = lineItems.length;
                    for (var i = 0; i < size; i++) {
                        var lineItem = lineItems[i];
                        origLineItems[lineItem.Id] = lineItem;
                    }
                    finishRetrieveLineItems = true;
                    //displayDataIfReady();
                }
            } else {
                // TODO: Handle error
                //displayErrorMsg(event.message);
            }
        }
       function calculateSum(){
           var sum = 0;
           
           api.column(12).nodes().to$().each(function(index) { 
               $j(this).find('.amount').each(function() { 
                   
                   var columnAmount = $j(this).val().replace(/[$,]+/g,"");
                   
                   if(!isNaN(columnAmount) && columnAmount.length!=0) {
                       
                       sum += parseFloat(columnAmount);
                   }
                   console.log('find:'+$j(this).val() );
               });
           });
           
           console.log("Need to re-calculate the amount: " + sum);
           
           var totalAmountColumn = api.column( 12);
           
           $j( totalAmountColumn.footer() ).html(formatNumber(sum.toFixed(totalAmountDecimalPlace)));     
           calculateGrandTotal();
       }
       
       function calculateAdjust(){ 
           var sum = 0;
           
           api.column(13).nodes().to$().each(function(index) { 
               
               $j(this).find('.vatamount').each(function() { 
                   
                   var columnAmount = $j(this).val().replace(/[$,]+/g,"");
                   
                   if(!isNaN(columnAmount) && columnAmount.length!=0) {
                       
                       sum += parseFloat(columnAmount);
                   }
                   
                   console.log($j(this).val() );
               });
               
           });
           
           console.log("Need to re-calculate the adjust amount: " + sum);
           
           var totalAmountColumn = api.column(13);
           
           $j( totalAmountColumn.footer() ).html(formatNumber(sum.toFixed(totalAmountDecimalPlace)));     
           
           calculateGrandTotal();
           setFilterAction();
       }     
       
        
        function calculateGrandTotal(){ 
            var total = 0;
            
            var paymentAmount = parseFloat($j('#total_payment_amount').html().replace(/[$,]+/g,""));
            var adjustmentAmount = parseFloat($j('#total_vat_amount').html().replace(/[$,]+/g,""));
            
            total = paymentAmount + adjustmentAmount;
            
            $j('#total_final_amount').html(formatNumber(total.toFixed(totalAmountDecimalPlace)) +' ' + initCurrency);     
        }
        /*
        
        function calculateSum() {
            
           // var taxrate='{!Header.ASI_MFM_VAT_Rate__c}'/100;
            
            var sum = 0;
            //iterate through each textboxes and add the values
            $j('.amount').each(function() {
                
                //add only if the value is number
                if(!isNaN(this.value) && this.value.length!=0) {
                    //$j(this).closest('tr').children('.taxamount').text((parseFloat(this.value)*taxrate).toFixed(2));
                    sum += parseFloat(this.value);
                    console.log('calculateEnd');
                }else{
                    //this.value = ("");
                    //$j(this).closest('tr').children('.taxamount').text("");
                    var val = $j(this).val();
                    val = val.replace(/[^0-9\.]/g,'');
                    if(val.split('.').length>2) val =val.replace(/\.+$/,"");
                    $j(this).val(val); 
                    
                }
            });
            
           
            
            //.toFixed() method will roundoff the final sum to 2 decimal places
            $j('#total_payment_amount').html(sum.toFixed(2));
            
        }    
        */
        /*
        function calculateAdjust() {
            var sum = 0;
            //iterate through each textboxes and add the values
            $j('.vatamount').each(function() {
                
                //add only if the value is number
                if(!isNaN(this.value) && this.value.length!=0) {
                    sum += parseFloat(this.value);
                    console.log('calculateEnd');
                }else{
                    var val = $j(this).val();
                    val = val.replace(/[^0-9\.]/g,'');
                    if(val.split('.').length>2) val =val.replace(/\.+$/,"");
                    $j(this).val(val); 
                    
                }
            });
            
            //.toFixed() method will roundoff the final sum to 2 decimal places
            $j('#total_vat_amount').html(sum.toFixed(2));
            
        }    
         */
         
        
        function retrieveSBCode(response){
            var sb = $j('#localSBList').val();
            
            var $mapParentChildren = jQuery.parseJSON('{!JSENCODE(mapPORlineJSON)}');
             var objList = [];
             var TempList = [];
             for(key in $mapParentChildren){
                var obj = new Object();
                obj.label = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_Sub_brand_Code__r.Name;
                obj.value = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_Sub_brand_Code__r.Name;
                obj.id = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_Sub_brand_Code__c;
                
                if(TempList.indexOf(obj.value)==-1 && (obj.label.indexOf(sb)>-1 || obj.label.indexOf(sb.toLowerCase())>-1 || obj.label.indexOf(sb.toUpperCase())>-1)){
                    TempList.push(obj.value);
                    objList.push(obj);
                    console.log(obj);
                }
            }
            
            response(objList);
        }
        
        
        
        
        function retrieveACCode(response){
            var ac = $j('#localCodeList').val();
            console.log(ac);
            
            var $mapParentChildren = jQuery.parseJSON('{!JSENCODE(mapPORlineJSON)}');
             var objList = [];
             var TempList = [];
             for(key in $mapParentChildren){
                var obj = new Object();
                obj.label = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_AP_Code__r.Name;
                obj.value = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_AP_Code__r.Name;
                obj.id = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_AP_Code__c;
                
                if(TempList.indexOf(obj.value)==-1 && obj.label.indexOf(ac)>-1){
                    TempList.push(obj.value);
                    objList.push(obj);
                }
            }
            response(objList);
        }
        
        
           function retrieveCurrency(response){
            var cu = $j('#localcurrList').val();
            console.log(cu);
            
            var $mapParentChildren = jQuery.parseJSON('{!JSENCODE(mapPORlineJSON)}');
            var objList = [];
            var TempList = [];
            for(key in $mapParentChildren){
                var obj = new Object();
                obj.label = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Currency__c;
                obj.value = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Currency__c;
                obj.id = $mapParentChildren[key].ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Currency__c;
                
                if(TempList.indexOf(obj.value)==-1 && (obj.label.indexOf(cu)>-1 || obj.label.indexOf(cu.toLowerCase())>-1 || obj.label.indexOf(cu.toUpperCase())>-1)){
                    TempList.push(obj.value);
                    objList.push(obj);
                }
            }
            response(objList);
        }
        
        
        
        function initalizeAutoCompleteComponent() {
            // SB code with data on page
             $j('.SBList').attr('id','localSBList');
            $j('#localSBList').autocomplete({
                source: function(request, response){
                    retrieveSBCode(response);
                },
                change: function (event, ui) {  
                    setAutoFilterAction();
                },
                select: function(event, ui){
                    $j('#localSBList').val(ui.item.value);
                    event.preventDefault(); 
                    return false;
                }    
            }).focus(function() {
                $j(this).autocomplete("search", "");
            });
            
            
            
            // A/C Code with data on page
            $j('.CodeList').attr('id','localCodeList');
            $j('#localCodeList').autocomplete({
                source: function(request, response){
                    retrieveACCode(response);
                },
                change: function (event, ui) {  
                    setAutoFilterAction();
                },
                select: function(event, ui){
                    $j('#localCodeList').val(ui.item.value);
                    event.preventDefault(); 
                    return false;
                }    
            }).focus(function() {
                $j(this).autocomplete("search", "");
            });
            
            
             $j('.CurrList').attr('id','localcurrList');
             $j('#localcurrList').autocomplete({
                source: function(request, response){
                    retrieveCurrency(response);
                },autoFocus: true,
                scroll: true,
                select: function(event, ui){
                    $j('#localcurrList').val(ui.item.value);
                    event.preventDefault(); 
                    return false;
                }    
            }).focus(function() {
                $j(this).autocomplete("search", "");
            });
            
            
           /* // A/C Code
            $j('.ACCode').attr('id','rowObjAll_ACCode');
            
            $j('#rowObjAll_ACCode').autocomplete({
                source: function(request, response){
                    retrieveACCodeList(response);
                },
                select: function(event, ui){
                    $j('#rowObjAll_ACCode').val(ui.item.value);
                    event.preventDefault(); 
                    return false;
                }    
            }).focus(function() {
                $j(this).autocomplete("search", "");
            });
            
            //Sub-Brand Code
            $j('.SBCode').attr('id','rowObjAll_Subbrand');
            
            $j('#rowObjAll_Subbrand').autocomplete({
                source: function(request, response){
                    retrieveSubBrandList(response);
                },
                select: function(event, ui){
                    $j('#rowObjAll_Subbrand').val(ui.item.value);
                    return false;
                }    
            }).focus(function() {
                $j(this).autocomplete("search", "");
            });     */
            
        }
        
        $j(document).ready(function() {
            
            
            //$j('.simpleTable tr:nth-child(odd)').addClass("odd-row");
            
            window.setTimeout(function(){
                $j('input').blur();
                window.scrollTo(0, 0);
            }, 1500);
            
            
            initPaymentManageAllPage({
                headerId: '{!header.Id}',
                initCurrency: '{!Header.ASI_MFM_Currency__c}'
            });
            
           // calculateSum();
            
            //iterate through each textboxes and add keyup                    handler to trigger sum event  createEventBindings();
            $j('.amount').bind("keyup change", function(e) {
                calculateSum();
            })
        } );
        
        /*     
        function setResultTable(newTable){
            //used for set Result Table
            
            var taxrate='{!Header.ASI_MFM_VAT_Rate__c}'/100;
           
            
            
            if ( $j.fn.dataTable.isDataTable( '#dt_PaymentLineItems' ) ) {
                var table = $('#dt_PaymentLineItems').DataTable();
            }
            else { 
               
            resultTable = $j('#dt_PaymentLineItems').DataTable({
                                                          
                                                            });
            }
            
            
       
            }
        */
        /*
        function createEventBindings(){
           $('.lookupIcon').hide();
           ASI_MFM_JP_PaymentManageAllCtrl.findSObjects('ASI_MFM_Sub_brand__c', ' WHERE RecordType.DeveloperName LIKE \'ASI_JP_Sub_brand%\' ', function(result, event){
               if(event.type == 'exception') {
                   //alert(event.message);
               } else {
                   subBrand = result;
                    for(var i = 0, len = subBrand.length;i<len;i++ )
                   {
                      subBrand[i] =  htmlEncode(subBrand[i]);
                   }
                     $( ".lookupInput" ).each(function(){
                        $(this).find('input.ASI_MFM_Sub_brand_Code__c').autocomplete({
                            source: subBrand
                        });               
                    }) 
                    $('[id$=SBCode]').autocomplete({ 
                        source: subBrand
                    });  
                    $('[id$=rowObjAll_Subbrand]').autocomplete({ 
                        source: subBrand
                    });  
                    $('[id$=search_SubBrand]').autocomplete({ 
                        source: subBrand
                    });  
               }
           });
*/
       function disableButton() {
           $j('#divpaymentForm .btn').button('loading');
       } 
       
       function backToManageAll(hasError) {
           if (hasError) {
               $j('#divpaymentForm .btn').button('reset');
               return;
           }else{
               $("#dt_PaymentLineItems").dataTable().fnDraw();
               
               $("#dt_PaymentLineItems").dataTable().clear().draw();
               
               $("#dt_PaymentLineItems").dataTable().columns.adjust().draw(); // Redraw the DataTable 
               
               calculateSum();
               
           }
           
       }  
       
       </script>
       
       <style type="text/css">
           .bs.panel-heading.div-size {
           border-radius: 10px;
           }
           
           body {
           font-family: Arial;
           font-size: 9pt;
           }
           
           th { 
           white-space: nowrap; 
           }
           
           .form-group.required .control-label:after {
           content:"*";
           color:red;
           }    
           
           .amount{
           border-left: 3px solid darkred !important;          
           
           }
           
           
           .dropdownDiv {
           border-radius: 5px;
           margin-bottom: 5px;
           color: #666;
           display: inline-block;
           padding: 5px;
           background: #ddd
           
           }
           .headsUpDiv {
           padding: 5px; 
           border-radius: 3px; 
           background-color: rgb(217, 237, 247); 
           color: #31708f; 
           border: 1px solid #9acfea; 
           display: inline-block;
           }
           .btn-size {
           height: 30px;
           }
           .div-size {
           height: 30px;
           }
           .btn-round {
           width: 40px;
           height: 40px;
           border-radius: 50% !important;
           font-size: 14px !important;
           }
           
           
           .btn-round.btn-lg {
           width: 48px;
           height: 48px;
           }
           
           .btn-round.btn-sm {
           width: 34px;
           height: 34px;
           }
           
           .btn-round.btn-xs {
           width: 24px;
           height: 24px;
           }
           
           .lookupInput a{
           display: block;
           position: absolute !important;
           top:0px !important;
           }
           
           .lookupInput img{
           float: right;
           }
           
           span.lookupInput {
           position: relative !important;
           display:inherit !important;
           }
           
           .lookupInput a, .lookupInput a{
           border:none !important;
           border-left: 3px solid darkred !important;          
           background: none !important;
           }
           
             .headerNum {
            font-weight:bold;
            text-align: right;
            }
              .headerCen {
            text-align: center !important;
            }
       </style>
       
    </head>
    
    <apex:form id="frm_paymentForm" styleclass="objectFormCls">
        <div id="divpaymentForm" class="bs container-fluid">
            <div class="bs row" style="margin:0;">
                <div class="bs col-xs-12">  
                    <apex:outputPanel styleclass="bs panel-primary" id="paymentDetailPanel">
                        <div class="bs panel-heading div-size">
                            <h5 class="bs panel-title">Payment Details</h5>
                        </div>
                        <div class="bs panel-body">                                           
                            <div class="bs table-responsive" >     
                            <!-----------------------------------------------  Payment Header         ------------------------------------------------------------------->
                                <table class="bs table">
                                    <tbody>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.Name.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!Header.ID}" target="_blank">
                                                <apex:outputField value="{!Header.Name}"></apex:outputField>
                                                </apex:outputLink>
                                            </td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Supplier_Name__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Supplier_Name__c}"></apex:outputField>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Invoice_Number__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Invoice_Number__c}" ></apex:outputField></td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Invoice_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Invoice_Date__c}" ></apex:outputField></td>                              
                                        </tr>
                                        
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_VAT_Rate__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_VAT_Rate__c}" id="VATRate"></apex:outputField></td>
                                             <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Tax_Code__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Tax_Code__c}" styleclass="bs form-control"></apex:outputField></td>
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Currency__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Currency__c}"></apex:outputField></td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Exchange_Rate__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputText value="{0, number, ###,###,###,###,##0.0000000}"><apex:param value="{!Header.ASI_MFM_Exchange_Rate__c}"/></apex:outputText></td>
                                        </tr>
                                        
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_JP_Payment_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_JP_Payment_Date__c}" ></apex:outputField></td> 
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Invoice_Amount__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Invoice_Amount__c}" styleclass="bs form-control"></apex:outputField></td>
                                        </tr>
                                        
                                         <tr>                                           
                                            <td><apex:outputLabel value="Tax Amount" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                             <td><apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!TaxAmount}"/></apex:outputText></td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Payment__c.Fields.ASI_MFM_Payment_Amount__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!PaymentAmount}"/></apex:outputText></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <!--
                    
                    <apex:outputPanel id="errorMessagePanel">
                        
                        <apex:pageMessages ></apex:pageMessages>
                        
                    </apex:outputPanel>
                    
                    --> 
                    
                    <!-----------------------------------------------  Payment Line Items    ------------------------------------------------------------------->
                    
                    <apex:outputPanel styleclass="bs panel-primary" id="LinePanel">
                        <div class="bs panel-heading div-size">
                            <h5 class="bs panel-title">Payment Line Items</h5>
                        </div>   
                        <div class="bs panel-body">  
                            
      
                        
                        <div class="alert alert-danger fade in" style="{!IF(UpsertPermission,'display:none;','')}"  id="SaveFailPart">
                            <strong>Error,Can not Save!  </strong><br/>
                            <apex:outputText escape="false" value="{!Msg}"/>
                        </div>  
                        
                        
                        <div class="alert alert-success fade in" style="{!IF(SaveSuccess,'','display:none;')}" id="SaveSuccessPart">
                            <strong>Quick Save Success!</strong><br/>
                            <apex:outputText escape="false" value="{!Msg}"/>
                        </div>
                        
                        
                                        <div class='bs wrapper text-center' id='bs toolbar' >
                                            <div class="bs btn-group " role="group" >
                                                <apex:commandLink styleClass="bs btn btn-default btn-size" 
                                                                  value="Save"
                                                                  style="font-weight: bold"
                                                                  action="{!saveLinetems}"
                                                                  status="ActionStatus"
                                                                  onclick="resultTable.page.len( -1 ).draw(false);"
                                                                  oncomplete="console.log('Save');setResultTable(true);setPORLineTable(true);initalizeAutoCompleteComponent();"    
                                                                  reRender="SaveFailPart, SaveSuccessPart, LinePanel, porLinePanel" 
                                                                  target="_parent" >
                                                <apex:param name="IS_QUICK_SAVE" value="false"/>
                                                </apex:commandLink>
                                             </div>&nbsp;                                            
                                              <div class="bs btn-group " role="group" >
                                                <apex:commandButton styleClass="bs btn btn-default btn-size"
                                                                    style="font-weight: bold"
                                                                    value="Quick Save"
                                                                    action="{!onCommitted}"
                                                                    status="ActionStatus"
                                                                    onclick="resultTable.page.len( -1 ).draw(false);"
                                                                    oncomplete="console.log('Quick Save');setResultTable(true);setPORLineTable(true);initalizeAutoCompleteComponent();"    
                                                                    reRender="SaveFailPart, SaveSuccessPart, LinePanel, porLinePanel" 
                                                                    html-data-loading-text="Loading..." >
                                                <apex:param name="IS_QUICK_SAVE" value="true"/>
                                                </apex:commandButton>
                                            </div>&nbsp;
                                            <div class="bs btn-group " role="group" >
                                                
                                                <apex:commandButton styleClass="bs btn btn-default btn-size"
                                                                    style="font-weight: bold"
                                                                    value="Cancel"
                                                                    action="{!cancel}" 
                                                                    html-data-loading-text="Loading..."
                                                                    html-formnovalidate="formnovalidate"/>
                                            </div>                             
                                    </div>
                                    

                            
                            
                            
                            <table id="dt_PaymentLineItems"  class="hover responsive no-wrap compact" style="width: 100%;" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>Action</th>
                                        <th>PO</th>
                                        <th>Plan</th>
                                        <th>POL</th>
                                        <th>PO Receipt</th>
                                        <th>PO Line Remaining Amount</th>
                                        <th class="headerCen" >PO Receipt Line Amount</th>
                                        <!---<th>Exchange Rate</th>--->
                                        <th class="headerCen">Available <br/>PO Receipt Line Amount({!Header.ASI_MFM_Currency__c})</th>
                                        <th>PO Line Description</th>
                                        <th>AP Code</th>
                                        <th>A/C Code</th>
                                        <th>Sub-Brand Code</th>
                                        <th class="headerCen">Payment Amount ({!Header.ASI_MFM_Currency__c})</th>
                                        <th class="headerCen">VAT Adjustment</th>
                                        <th class="headerCen">Payment Line Description</th>
                                        
                                    </tr>
                                </thead>
                                <tbody>
                                    <apex:repeat value="{!allPaymentLineItemMap}" var="PolId">
                                        <tr>
                                            <td>
                                                
                                                <!--<apex:commandButton styleClass="bs btn btn-danger btn-round pull-left" 
                                                    value="X"
                                                    reRender="errorMessagePanel,paymentLinePanel,poLinePanel"
                                                    action="{!removePaymentLine}"
                                                    onclick="disableButton();"
                                                    oncomplete="backToManageAll(false);"                                                            
                                                    immediate="false"
                                                    status="ActionStatus"
                                                    html-data-loading-text="Loading..." >
                                                    <apex:param name="PARAM_PAYLine_ID" value="{!PolId}" />
                                                    </apex:commandButton>     --> 
                                                
                                                
                                                <apex:commandLink styleClass="bs btn btn-danger btn-round pull-left btn-sm" 
                                                                  style="border: none;background-color: transparent;"
                                                                  reRender="SaveFailPart, SaveSuccessPart, LinePanel, porLinePanel" 
                                                                  action="{!removePaymentLine}"
                                                                  onclick="disableButton();"
                                                                  status="ActionStatus"
                                                                  oncomplete="console.log('Remove');setResultTable(true);setPORLineTable(true);initalizeAutoCompleteComponent();setAutoFilterAction();"                                                 
                                                                  immediate="false"
                                                                  html-data-loading-text="Loading..." 
                                                                  >
                                                    <span class="bs glyphicon glyphicon-trash"  style="color:red;font-size: 20px;"></span><apex:param name="PARAM_PORLine_ID" value="{!PolId}" />
                                                    <apex:param name="PARAM_PAYLine_ID" value="{!PolId}" />
                                                </apex:commandLink>
                                                
                                            </td>
                                            <td><apex:outputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_PO__c}"></apex:outputField></td>
                                            <td>
                                                <apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!allPaymentLineItemMap[PolId].Plan.id}" target="_blank">
                                                    {!allPaymentLineItemMap[PolId].Plan.name}
                                                </apex:outputLink>
                                            </td>
                                            <td><apex:outputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__c}"></apex:outputField></td>
                                            <td><apex:outputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Receipt_Item__c}"></apex:outputField></td>
                                            <td class="headerCen"><apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!allPaymentLineItemMap[PolId].PoLRemain}"/></apex:outputText>&nbsp;{!allPaymentLineItemMap[PolId].POCurrency}&nbsp;<spam style="{!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'display:none;','')}" > <br/>(</spam>{!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'',round(allPaymentLineItemMap[PolId].exchangerate*allPaymentLineItemMap[PolId].PoLRemain,2))} {!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'',Header.ASI_MFM_Currency__c)}<spam style="{!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'display:none;','')}" > )</spam></td>
                                            <td class="headerCen"><apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!allPaymentLineItemMap[PolId].OrignalPoRAmount}"/></apex:outputText>&nbsp;{!allPaymentLineItemMap[PolId].POCurrency} &nbsp;<spam style="{!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'display:none;','')}" > <br/>(</spam>{!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'',round(allPaymentLineItemMap[PolId].exchangerate*allPaymentLineItemMap[PolId].OrignalPoRAmount,2))} {!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'',Header.ASI_MFM_Currency__c)}<spam style="{!if(allPaymentLineItemMap[PolId].POCurrency=Header.ASI_MFM_Currency__c,'display:none;','')}" > )</spam></td>
                                            <td class="headerCen">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!allPaymentLineItemMap[PolId].PoRAmount}"/></apex:outputText>
                                               <!--- <apex:outputText value="{0, number, ###,###,###,###,##0.0000000}"><apex:param value="{!allPaymentLineItemMap[PolId].exchangerate}"/></apex:outputText>---->
                                            </td>
                                            <td>{!allPaymentLineItemMap[PolId].POLDescription}</td>
                                            <td>
                                                <apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!allPaymentLineItemMap[PolId].APCode.id}" target="_blank">
                                                    {!allPaymentLineItemMap[PolId].APCode.name}
                                                </apex:outputLink>
                                            </td>
                                            <td>
                                                <apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!allPaymentLineItemMap[PolId].ACCode.id}" target="_blank">
                                                    {!allPaymentLineItemMap[PolId].ACCode.name}
                                                </apex:outputLink>
                                            </td>
                                            <td>
                                                <apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!allPaymentLineItemMap[PolId].SBCode.id}" target="_blank">
                                                    {!allPaymentLineItemMap[PolId].SBCode.name}
                                                </apex:outputLink>
                                            </td>
                                            
                                            
                                            <td  class="payline_amount" id="payline_amount_{!PolId}_textfield" > 
                                                <apex:inputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_Payment_Amount__c}" styleclass="bs form-control amount input-sm"  html-placeholder="Payment Amount" style="text-align: right;" rendered="{!if(allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Status__c='Complete',false,true)}"  ></apex:inputField>
                                                <apex:inputtext value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_Payment_Amount__c}" styleclass="bs form-control amount input-sm"  style="text-align: right;" rendered="{!if(allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Status__c='Complete',true,false)}" html-readonly="true"  ></apex:inputtext>
                                                
                                            </td>
                                            
                                            <td  class="payline_adjust" id="payline_adjust_{!PolId}_textfield"> 
                                                <apex:inputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_VAT_Adjustment__c}" styleclass="bs form-control vatamount input-sm"  html-placeholder="Adjustment" style="text-align: right;" rendered="{!if(allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Status__c='Complete',false,true)}" ></apex:inputField>
                                                <apex:inputtext value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_VAT_Adjustment__c}" styleclass="bs form-control vatamount input-sm" style="text-align: right;" rendered="{!if(allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Status__c='Complete',true,false)}"  html-readonly="true" ></apex:inputtext>    
                                            </td> 
                                           
                                            <td> 
                                                <apex:inputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_Payment_List_Item_Description__c}" styleclass="bs form-control input-sm"  html-placeholder="Line Description" required="false" rendered="{!if(allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Status__c='Complete',false,true)}" ></apex:inputField>
                                                <apex:outputField value="{!allPaymentLineItemMap[PolId].payl.ASI_MFM_Payment_List_Item_Description__c}" styleclass="bs form-control input-sm" rendered="{!if(allPaymentLineItemMap[PolId].payl.ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Status__c='Complete',true,false)}" ></apex:outputField>
                                            </td>
                                          
                                        </tr>
                                    </apex:repeat>                                                    
                                    
                                    
                                </tbody>
                           
                                <tfoot>
                                    <tr class="summary">
                                        <th></th>
                                        
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th>Total:</th>
                                        <th style="text-align:center" id="total_payment_amount"></th>
                                        <th style="text-align:center" id="total_vat_amount"></th>
                                        <th></th>
                                    </tr>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>                                    
                                        <th>Grand total:</th>
                                        <th style="text-align:center" id="total_final_amount"></th> <!--------- colspan="2"-------------->
                                        <th></th>
                                    </tr>
                                </tfoot>  
                               
                                
                            </table>
                            <script type="text/javascript">
                            /*
                            var taxrate='{!Header.ASI_MFM_VAT_Rate__c}'/100;
                            var columns = [
                                { "data": "Action", "bSortable": false, sDefaultContent: "n/a"  },
                                { "data": "Complete" , "sClass": "check-box", sDefaultContent: "false"},
                                { "data": "PO", sDefaultContent: "n/a"  },
                                { "data": "POL" , sDefaultContent: "n/a" },
                                { "data": "PO Receipt" , sDefaultContent: "n/a" },
                                { "data": "Payee", sDefaultContent: "n/a"  },
                                { "data": "Tax Code" , sDefaultContent: "n/a" },
                                { "data": "BC_Code", sDefaultContent: "n/a"  },
                                { "data": "Phase_Code" , sDefaultContent: "n/a" },
                                { "data": "Payment_Amount" ,"sType": 'numeric', sDefaultContent: "n/a" },
                                { "data": "Tax_Amount" , "bSortable": false, sDefaultContent: "n/a" },
                                { "data": "Adjustment" , "bSortable2": false, sDefaultContent: "n/a" },
                                { "data": "Payment_Line_Description", sDefaultContent: "n/a"  }
                            ];
                            
                            if ( $j.fn.dataTable.isDataTable( '#dt_PaymentLineItems' ) ) {
                                var table = $('#dt_PaymentLineItems').DataTable();
                            }
                            else { 
                                var table = $j('#dt_PaymentLineItems').DataTable({"bAutoWidth":false,
                                                                                  "aoColumns": columns,
                                                                                  "aaSorting":[],
                                                                                  "iDisplayLength": 10,
                                                                                  "fnDrawCallback": function() {
                                                                                      $j('.amount').numericInput({ allowNegative: false ,allowFloat: true });
                                                                                      $j('.amount').blur();
                                                                                      $j('.amount').each(function() {
                                                                                          $j(this).closest('tr').children('.taxamount').text((parseFloat(this.value)*taxrate).toFixed(2));
                                                                                      }); //END .eac
                                                                                  },
                                                                                  "footerCallback": function ( row, data, start, end, display ) {
                                                                                      calculateSum();
                                                                                  }
                                                                                  
                                                                                 });
                                
                            }
                            
                            
                            $j.fn.dataTableExt.ofnSearch['html-input'] = function(value) { 
                                return $j(value).val();
                            };
                            
                            
                            
                            $j('#dt_PaymentLineItems td input').on('change', function() {
                                var td = $j(this).parent();    
                                $j(this).parent().find('input').attr('value', this.value);
                                
                                table.cell(td).invalidate().draw();
                            }); 
                            */
                            
                            </script>            
                        </div>
                    </apex:outputPanel>
                    
                     <!--------------------------------------------------------- POR Line Items      ------------------------------------------------------------------->
                    
                    <apex:outputPanel styleclass="bs panel-primary" id="porLinePanel">
                        <div class="bs panel-heading div-size">
                            <h5 class="bs panel-title">PO Receipt Line Items</h5>
                        </div>   
                        <div class="bs panel-body">  
                           
                                
                                
                                <span><apex:outputLabel style="font-weight: bold; font-size: 12px;" value="Plan ID: " />  &nbsp;   
                                    <apex:inputText id="search_Plan"  styleClass="search_Plan" value="{!PlanIDFilter}"/>&nbsp; &nbsp;</span>
                                
                                <span><apex:outputLabel style="font-weight: bold; font-size: 12px;" value="PO: " /> &nbsp;    
                                    <apex:inputText id="search_PO" styleClass="search_PO"  value="{!POFilter}"/>&nbsp; &nbsp;</span>
                                
                                <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="PO Line: " /> &nbsp;    
                                <apex:inputText id="search_POline"  styleClass="search_POline"  value="{!POlineFilter}"/>&nbsp; &nbsp;
                                
                                <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="PO Receipt Line: " />  &nbsp;  
                                <apex:inputText id="search_PORL"  styleClass="search_PORL"  value="{!PORlineFilter}"/>&nbsp; &nbsp; 
                                
                                
                                <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="Sub-brand: " /> &nbsp;  
                                <apex:inputText id="localSBList"  styleClass="SBList" value="{!subBrandNameFilter}"/>&nbsp; &nbsp;
                                
                                
                                <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="AP Codes: " />  &nbsp;  
                                <apex:inputText id="localCodeList" styleClass="CodeList" value="{!ACcodeFilter}"/>&nbsp;  &nbsp;
                                <!----   
                                <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="Currency: " />&nbsp;
                                <apex:inputText id="localcurrList" styleClass="CurrList"  value="{!CurrencyFilter}" />&nbsp;  &nbsp;
                                
                                
                                <apex:commandButton styleClass="btn-default btn-size" style="font-weight: bold" value="Search" status="ActionStatus" action="{!search}" reRender="errorMessagePanel,paymentLinePanel,poLinePanel" />
                                
                             <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="Sub-brand: " />
                                <apex:inputText id="rowObjAll_Subbrand"  styleClass="SBCode" value="{!subBrandNameFilter}"/>&nbsp; &nbsp;
                                class="dropdownDiv" 
                                <apex:outputLabel style="font-weight: bold; font-size: 12px;" value="AC Code: " />
                                <apex:inputText id="rowObjAll_ACCode" styleClass="ACCode" value="{!ACcodeFilter}"/>&nbsp;  &nbsp;---->
                                
                     
                            <!--
                            <select id="chooseColor" name="chooseColor" size="1">
                            <option value="ABSOLUT APEACH-AAP">ABSOLUT APEACH-AAP</option>
                            <option value="ABSOLUT ELYX-AEL">ABSOLUT ELYX-AEL</option>
                            <option value="ABERLOUR_12YO-AR2" selected="selected">ABERLOUR_12YO-AR2</option>
                            </select>
                            
                            <apex:selectList value="{!subBrandNameFilter}" size="1">
                            <apex:selectOptions value="{!subBrandPicklist.pickList}"  />
                            </apex:selectList>  -->                                         
                            
                            
                            <table id="dt_PorLineItems" class="hover responsive no-wrap compact" style="width: 100%;">
                                <thead>
                                    <tr>
                                        <th>Action</th>
                                        <th>Plan</th>
                                        <th>PO</th>
                                        <th>POL</th>
                                        <th>PO Receipt Line</th>
                                        <th>Sub-Brand</th>
                                        <th>AP Code</th>
                                        <th>AC Code</th>
                                        <th>Customer</th>
                                        <th>Remark</th>
                                        <th>Currency</th>
                                        <th>PO Receipt Line Amount (JPY)</th>
                                        <th>PO Receipt Balance Amount(JPY)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <apex:repeat value="{!allPORLineMap}" var="PorlIne">
                                        <tr>
                                            <td> <apex:commandLink styleClass="bs btn btn-success btn-round pull-left btn-sm"
                                                                   style="border: none;background-color: transparent;"
                                                                   action="{!addLineItem}"
                                                                   reRender="SaveFailPart, SaveSuccessPart, LinePanel, porLinePanel" 
                                                                   onclick="resultTable.page.len( -1 ).draw(false);PORLTable.page.len( -1 ).draw(false);"
                                                                   oncomplete="console.log('Add');setResultTable(true);setPORLineTable(true);initalizeAutoCompleteComponent();setAutoFilterAction();"
                                                                   immediate="false"
                                                                   status="ActionStatus"
                                                                   html-data-loading-text="Loading..." >
                                                <span class="bs glyphicon glyphicon-plus"  style="color:GREEN;font-size: 20px;"></span> <!-- onclick="disableButton();"oncomplete="setResultTable(true);backToManageAll(false);"-->
                                                                   
                                                <apex:param name="PARAM_PORLINE_SOURCE_ITEM_ID" value="{!PorlIne}" />
                                                </apex:commandLink>
                                                
                                            </td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Plan__c}"></apex:outputField></td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO__c}"></apex:outputField></td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__c}"></apex:outputField></td>
                                            <td>
                                                <apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!allPORLineMap[PorlIne].id}" target="_blank">
                                                    <apex:outputField value="{!allPORLineMap[PorlIne].name}"></apex:outputField>
                                                </apex:outputLink>
                                            </td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__r.ASI_MFM_Sub_brand_Code__c}"></apex:outputField></td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__r.ASI_MFM_AP_Code__c}"></apex:outputField></td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__r.ASI_MFM_A_C_Code__c}"></apex:outputField></td>
                                            <td><apex:outputField value="{!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__r.ASI_MFM_Customer_Name__c}"></apex:outputField></td>
                                            <td>{!allPORLineMap[PorlIne].ASI_MFM_Remark__c}</td>
                                            <td>
                                              <!---  {!allPORLineMap[PorlIne].ASI_MFM_PO_Line_Item__r.ASI_MFM_PO__r.ASI_MFM_Currency__c}--->
                                            </td>
                                            <td class="headerNum">{!allPORLineMap[PorlIne].ASI_MFM_Amount__c}</td>
                                            <td class="headerNum">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!allPORLineMap[PorlIne].ASI_MFM_Remaining_Balance__c}"/></apex:outputText>
                                                
                                            </td>
                                            
                                        </tr> 
                                    </apex:repeat>
                                </tbody>
                            </table>
                            
                            <script type="text/javascript">
                            /*
                            $j('#dt_PorLineItems').dataTable({"bAutoWidth":false,"bSort":true,"fnDrawCallback": function() {
                                initalizeAutoCompleteComponent(); }
                                                            });
                            */
                            </script>            
                            
                        </div>
                    </apex:outputPanel>                           
                    
                </div>
            </div>
            <!-- <apex:actionstatus id="status">
                    <apex:facet name="start">
                    <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb;
                    height: 100%;opacity:0.65;width:100%;"> 
                    <div class="waitingHolder" style="top: 74.2px; width: 91px;">
                    <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                    <span class="waitingDescription">Loading...</span>
                    </div>
                    </div>
                    </apex:facet>
                    </apex:actionstatus>-->
            <apex:actionstatus id="ActionStatus">
                <apex:facet name="start">
                    <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb;
                                                                         height: 1000%; width:1000%; opacity:0.65;"> 
                        <div class="waitingHolder" id="loadtext" style="position: absolute;" align="left" valign="top">
                            &nbsp;&nbsp;&nbsp;
                            <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                            <span class="waitingDescription">Please Wait...</span>
                        </div>
                    </div>
                </apex:facet>
            </apex:actionstatus>   
        </div>
    </apex:form>    
    
    
    
    
    
    
</apex:page>