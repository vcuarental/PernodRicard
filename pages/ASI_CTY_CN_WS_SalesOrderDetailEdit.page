<apex:page standardController="ASI_KOR_Sales_Order_Transaction__c" extensions="ASI_CTY_CN_WS_SalesOrderDetailEditCtrl" recordSetVar="soReqDetails" sidebar="false">
    <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_CN_Common, '/ASI_HK_CRM_Common/css/common.min.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.ASI_CTY_CN_WS_PriceAndDiscountDetail, '/ASI_CTY_CN_WS_PriceAndDiscountDetail/libs/jquery/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.ASI_CTY_CN_WS_PriceAndDiscountDetail, '/ASI_CTY_CN_WS_PriceAndDiscountDetail/styles/common.min.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_WS_PriceAndDiscountDetail, '/ASI_CTY_CN_WS_PriceAndDiscountDetail/libs/jquery/js/jquery-1.9.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_WS_PriceAndDiscountDetail, '/ASI_CTY_CN_WS_PriceAndDiscountDetail/libs/jquery/js/jquery-ui-1.10.3.custom.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_WS_PriceAndDiscountDetail, '/ASI_CTY_CN_WS_PriceAndDiscountDetail/libs/DataTables/jquery.dataTables.min.js')}" />

    <style>
        .rightAlign{
            text-align: right;
        }
        table.sf-table td.sf-td2{
            margin: 0px;
            padding: 4px 2px 4px 5px;
            border: 1px solid #ededed;
            border-width: 0 0 1px 0;
            border-bottom: 1px solid #e3deb8;
            background-color: #fff;
            color: #333;
            vertical-align: middle;
            font-size: 1em;
            font-weight: normal;
            font-family: Arial, Helvetica, sans-serif;
            text-align: left;
        }
        .datatablerowhighlight {
            background-color: #CCFFFF !important;
        }
        .dataTables_paginate{
            margin-left: -6rem;
        }
        #dialogBG {
            position: absolute;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
            z-index: 10000;
            background: rgb(255, 255, 255) transparent;
            background-color: rgba(255, 255, 255, 0.85);
            background-image: url({!URLFOR($Resource.ASI_HK_CRM_Common, '/ASI_HK_CRM_Common/img/bg_loading.png')});
            background-repeat: repeat;
            filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#D8FFFFFF, endColorstr=#D8FFFFFF);
            -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#D8FFFFFF, endColorstr=#D8FFFFFF)";
            display: none;
        }
        #loadingDiv {
            position: relative;
            top: 48%;
            left: 45%;
            vertical-align: middle;
            display: block;
        }
        #loadingImg {
            display: inline;
            float: left;
            height: 14px;
            width: 14px;
        }
        #loadingText {
            display: inline;
            color: #666;
            font-weight: bold;
            margin-left: 6px;
            font-size: 1em;
        }
        .button{
            border: 1px solid #79b7e7;
            background: #FFF;
            color: #5D8BBF;
            padding: 7px;
            cursor: pointer;
            -webkit-border-radius: 5px;
            -moz-border-radius: 5px;
            border-radius: 5px;
            margin: 1px;
        }

    </style>
    <div id="dialogBG">
        <div id="loadingDiv">
            <img id="loadingImg" src="/img/loading.gif" title="Please Wait..."/>
            <span id="loadingText">Loading...</span>
        </div>
    </div>
    <apex:pageBlock title="Edit Sales Order Details" rendered="false">
        <apex:pageMessages />
        <apex:outputLink value="/{!BLANKVALUE(soHeaderId, 'home/home.jsp')}">Return</apex:outputLink>
    </apex:pageBlock>

    <apex:form id="pageMainForm" rendered="true">
        <div id="wholeDiv" style="min-width:1100px;min-height:600px;height:95%;">
            <apex:pageMessages />
            <div id="page-btn-div">
                <div id="page-btn-inner-div">
                <apex:outputPanel rendered="{!!hasError}">
                    <input type="button" name="saveAll" class="button" value="Save" onclick="saveAllChanges()" />
                </apex:outputPanel>
                    <input type="button" name="cancel" class="button" value="Cancel" onclick="cancelAll()" />
                </div>
            </div> 
            <div id="main-tab-div">
                <ul>
                    <li><a href="#tab-detail-normal">Sales Order Details</a></li>
                </ul>
                <div id="tab-detail-normal">
                     <apex:outputPanel id="panel-pd-normal-exist" rendered="{!!hasError}">
                        <apex:pageBlock id="page-block-detail-normal-exist">
                            <div id="whole-div-exist">
                            <div id="div-detail-normal-exist">
                                <table id="table-detail-normal-exist" class="sf-table">
                                    <thead>
                                        <tr>
                                            <th class="sf-th">Action</th>
                                            <th class="sf-th">Product Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                                            <th class="sf-th">Unit Price (Btl) with VAT</th>
                                            <th class="sf-th">Order Qty</th>
                                            <th class="sf-th">UOM</th>
                                        </tr>
                                    </thead> 
                                    <tbody>
                                    </tbody>
                                </table>
                                <div style="height:1px"></div>
                            </div>
                            </div>
                        </apex:pageBlock>
                    </apex:outputPanel>
                    
                </div>
                <div id="tab-pd-pos">
                </div>
            </div>

            <div id="page-btn-div">
                <div id="page-btn-inner-div">
                <apex:outputPanel rendered="{!!hasError}">
                    <input type="button" name="saveAll" class="button" value="Save" onclick="saveAllChanges()" />
                </apex:outputPanel>
                    <input type="button" name="cancel" class="button" value="Cancel" onclick="cancelAll()" />
                </div>
            </div> 
            <script type="text/javascript">
                $('#main-tab-div').tabs();
                
                $('.button').hover(function(){$(this).addClass('datatablerowhighlight');}, function(){$(this).removeClass('datatablerowhighlight');});
            </script>
        </div>
    </apex:form>
    
    <apex:outputPanel rendered="true">
        <script type="text/javascript">
            var origLineItems = [];
            var allNormalProducts = [];
            var deleteItems = [];
            var headerId = '{!soHeaderId}';
            var isError = {!hasError};
            $(document).ready(function() {
                if (!isError) {
                    retrieveLineItems();
                }
            });

            function retrieveLineItems() {
              finishRetrieveLineItems = false;
              ASI_CTY_CN_WS_SalesOrderDetailEditCtrl.lineItemList(
                headerId, callbackLineItem, {
                  escape: true,
                  timeout: 10000
                }
              );
            }

            function callbackLineItem(lineItems, event) {
              if (event.status) {
                if (lineItems) {
                  origLineItems = [];
                  var size = lineItems.length;
                  for (var i = 0; i < size; i++) {
                    var lineItem = lineItems[i];
                    origLineItems[lineItem.Id] = lineItem;
                  }
                  initFullLineItemTable();
                }
              } else {
                // TODO: Handle error
              }
            }

            function initFullLineItemTable() {
              if (origLineItems && $('#table-detail-normal-exist').length > 0) {
                var allLineItems = fullLineItems();
                var colSettings = fullLineItemTableColumnSetting();
                var theTable = $('#table-detail-normal-exist');
                theTable.dataTable({
                  aaData: allLineItems,
                  fnRowCallback: function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    renderFullLineItemTableRow($(nRow), aData);
                  },
                  aoColumns: colSettings,
                  bPaginate: true,
                  bStateSave: true,
                  sPaginationType: "full_numbers",
                  oLanguage: {
                    oPaginate: {
                      sFirst: "<<",
                      sPrevious: "< Previous",
                      sNext: "Next >",
                      sLast: ">>",
                    }

                  },
                  iDisplayLength: 20,
                  bLengthChange: false,
                  bSort: true,
                  aaSorting: [
                    [0, 'asc']
                  ],
                  bFilter: true,
                  sDom: 'lrt<"table-below"pi>',
                  bAutoWidth: false,
                  bDeferRender: true
                });
              }
            }

        function fullLineItems() {
              var result = [];
              var existingLineItemArray = arrayValues(origLineItems, 'object');
              for (var i = 0; i < existingLineItemArray.length; i++) {
                var existingLineItem = existingLineItemArray[i];
                if (existingLineItem.Id) {
                  setNullForUndefinedProperties(existingLineItem);
                  result.push(existingLineItem);
                }
              }
              return result;
            }

        function fullLineItemTableColumnSetting() {
           var cols = ['action', 'productName', 'unitPirceWithVAT', 'orderQty', 'UOM'];
           var props = ['action', 'productName', 'unitPirceWithVAT', 'orderQty', 'UOM'];

          var colSettings = [];
          for (var i = 0; i < cols.length; i++) {
            var mDataFunction = function() {
              var prop = props[i];
              if (prop) {
                return function(source, type, val) {
                  return source[prop] ? source[prop] : null;
                }
              }
              return null;
            }

            colSettings.push({
                bSortable: true,
                bSearchable: false,
                sClass: 'sf-td',
                mData: mDataFunction()
              });
          }

          var colIndices = [];

          for (var i = 0; i < cols.length; i++) {
            colIndices[cols[i]] = i;
          }

          colSettings[colIndices['action']].mRender = function(data, type, full) {
            return '<a href="#" onclick="delRow(\''+full.Id+'\')"; return false;" >Delete</a>';
          };

          colSettings[colIndices['productName']].mRender = function(data, type, full) {
              return '<a href="#" onclick="window.open(\'' + (full.ASI_CRM_CN_Product_Name__c ? '/' + full.ASI_CRM_CN_Product_Name__c : '') + '\',\'fullscreen,scrollbars\'); return false;" >' + full.ASI_CRM_CN_Product_Name__r.Name + '</a>';
          };

        colSettings[colIndices['unitPirceWithVAT']].mRender = function(data, type, full) {
            return '<span class="unitPirceWithVAT">' + full.ASI_CRM_CN_Unit_Price_BT_with_VAT__c.toFixed(4) + '</span>';
            };

        colSettings[colIndices['orderQty']].mRender = function(data, type, full) {
                return '<input type="text" class="mandatory" style="text-align: right;" name="' + full.ASI_KOR_Order_Qty__c + '" maxlength="18" size="15" onchange="handleQuantityChange(event)" value="' + full.ASI_KOR_Order_Qty__c + '"/>';
            };

            colSettings[colIndices['UOM']].mRender = function(data, type, full){
              return '<span class="UOM">' + full.ASI_CRM_UOM_Text__c + '</span>';
            };

          return colSettings;
        }

        function setNullForUndefinedProperties(theObj) {
          for (var prop in theObj) {
            var val = theObj[prop];
            if (typeof val === 'undefined')
              theObj[prop] = null;
          }
        }

        function arrayValues(theArray, expectedDataType) {
          var result = [];
          for (var index in theArray) {
            var val = theArray[index];
            if (val != null && (!expectedDataType || typeof val === expectedDataType)) {
              result.push(val);
            }
          }
          return result;
        }

        function renderFullLineItemTableRow(row, lineItem) {
          row.data('orderQty', lineItem.ASI_KOR_Order_Qty__c);
          row.data('rid', lineItem.Id);
          row.addClass('data-row');
          return row;
        }

        function delRow(rowid){
            if (origLineItems[rowid]) {
               var existingLineItemArray = arrayValues(origLineItems, 'object');
                if(existingLineItemArray.length == 1){
                    alert('please keep at least one product');
                    return;
                } else if (confirm('are you sure?')) {
                    triggerRemoveProduct(rowid);
                }
            }
            
        }

        function triggerRemoveProduct(rid) {
          var foundRow = $('#table-detail-normal-exist tr.data-row').filter(function() {
            return rid && rid == $(this).data('rid');
          });
          origLineItems[rid] = null;
          deleteItems.push(rid);
          foundRow.remove();
        }

        function handleQuantityChange(e) {
          e = e || window.event;
          var thisRow = $(eTarget(e));
          var r = /^\+?[1-9][0-9]*$/;
          if (!r.test(thisRow[0].value)) {
              alert('the format is error');
              thisRow[0].value = '';
              thisRow[0].focus();
          }else if (thisRow[0].value == null || thisRow[0].value == '') {
              thisRow[0].focus();
          } else if (Number(thisRow[0].name) < Number(thisRow[0].value)){
              alert('you cannot increase qty');
              thisRow[0].value = thisRow[0].name;
              thisRow[0].focus();
          }
        }

        function eTarget(e) {
          return e.target ? e.target : e.srcElement;
        }

        function saveAllChanges() {

            $('input.mandatory').each(function() {
                var input = $(this);
                if (input.val() == null || $.trim(input.val()) === '') {
                  alert('Please fill in the blank value');
                  return false;
                }
            });

            var changeItems = [];
            var rows = $('#table-detail-normal-exist tr.data-row');
            if (rows.length > 0) {
               rows.each(function() {
                var curRow = $(this);
                  var lineItem = lineItemFromRow(curRow);
                  if (lineItem) {
                    changeItems.push(lineItem);
                  }
              });
            }

            if (deleteItems.length > 0 || changeItems.length > 0) {
                var confirmed = confirm('are you sure?');
                if (confirmed) {
                  ASI_CTY_CN_WS_SalesOrderDetailEditCtrl.saveChanges(
                    headerId, JSON.stringify(changeItems), JSON.stringify(deleteItems), saveResultCallback, {
                      escape: true,
                      timeout: 30000
                    }
                  );
                } 
            } else {
                alert('no item is changed');
            }
        }

        function saveResultCallback(result, event) {
            if (result === 'SUCCESS') {
                alert('sucess');
                cancelAll();
            } else {
                alert(result);
            }
        }

        function cancelAll(){
            var redirectURL = '/home/home.jsp';
            if (headerId && headerId != '') {
              redirectURL = '/' + headerId;
            }
            location.href = redirectURL;
        }

        function lineItemFromRow(row){
            var rid = row.data('rid');
            var newValue = (row.find('input[type="text"]'))[0].value;
            var oldValue = (row.find('input[type="text"]'))[0].name;
            if (newValue != oldValue && Number(newValue) > 0) {
                return {id: rid, orderQty: newValue};
            } else {
                return null;
            }
        }


        </script>
    </apex:outputPanel>
</apex:page>