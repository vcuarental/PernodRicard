<apex:page showHeader="false" Controller="BMCServiceDesk.CloseProblemController" extensions="BMCServiceDesk.ConsoleRemoteActions" standardStyleSheets="false">
<c:CommonIncludes />
<apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/CloseProblemPage.js" />
<link rel="stylesheet" href="{!$Resource.SDEFStyles}/TypeAhead.css" type="text/css" />
<link rel="stylesheet" href="{!$Resource.SDEFStyles}/CloseForms.css" type="text/css" />

 <script>
  
  var calledFrom = '{!JSENCODE(CalledFrom)}';
  
  if(calledFrom == 'rfconsole' || calledFrom == 'stdform'){
     document.title='{!JSENCODE($Label.Close)}'+': {!JSENCODE($Label.ProblemRecordPrefix)}'+'{!closeProblemBean.problem.name}';
  }

  var isAutocomplete;
  var taboutFlag=false;
  var change= false;
  var SearchPage = '{!$Page.SearchPage}';
  var orgNamespace ='{!orgNamespace}';
  var strStatusName ='{!JSENCODE(closeProblemBean.statusName)}';
  var strClosedByUserName = '{!JSENCODE(closeProblemBean.closedByUserName)}';
  var msgvalue=''; 
    var SDEDateFormat = '{!userDateFormat}';
  
  Ext.ns("CloseProblemPage");

  CloseProblemPage.Labels = {
    Save: '{!JSENCODE($Label.Save)}',    
    ClosedBYEmpty:'{!JSENCODE($Label.CloseByEmpty)}',
    isUpdateable : {!isUpdateable},
    insufficentPrivilegeMsg : '{!JSENCODE($Label.InsufficentPrivilegeToAccess)}',
    tooltipCloseformStatus : '{!JSENCODE($Label.Tooltip_Closeform_Status)}',
    tooltipCloseformCategory : '{!JSENCODE($Label.Tooltip_Closeform_Category)}',
    tooltipCloseformResolution : '{!JSENCODE($Label.TooltipProblemCloseResolution)}'
     }
     
     CloseProblemPage.ComponentVars={
    closedByUserName:'',
    problemResolution:'',
    statusIdEle:'',
    statusNameEle:'',
    categoryIdEle:'',
    categoryNameEle:'',
    closedByIdEle:'',
    closedDateTimeEle:'',
    problemDescription:'{!$Component.problemCloseForm.problem_Problem_Description__c}',
    closeTasksId:'{!$Component.problemCloseForm.closeTasks}',
    closeIncidentsId:'{!$Component.problemCloseForm.closeIncidents}'
     
     }

 	var filterFieldsMap= {};   
	var filterStr = JSON.parse('{!JSENCODE(filterAPIStr)}');
	var searchErrorMsg = '{!JSENCODE($Label.GsErrorMsg)}';
	var staffId = '',closedById='';
 </script>
 <apex:outputPanel id="Varpanel">
                   
        <script>
        
         function getProblemID(){
            return '{!closeProblemBean.problem.id}';
        }
           var problemId = getProblemID();
           errormsg = '{!JSENCODE(closeProblemBean.messageString)}';  
        </script>
    
 </apex:outputPanel> 
  
 <apex:outputPanel > <!-- Page body in this panel -->

 <apex:form id="problemCloseForm">
      <apex:outputPanel id="errorMsgPanel"> <!-- Page body in this panel -->
          <div id="testPanelDiv" style="display:none;">
            <apex:messages /> 
          </div>
    </apex:outputPanel>      
  <c:ValidationComponent errorMsgList="{!closeProblemBean.messageString}" id="validationComponent"></c:ValidationComponent>
    
  <apex:actionFunction action="{!saveCloseProblem}" name="save" reRender="errorMsgPanel,validationComponent,Varpanel" oncomplete="assignApexErrorMessage();refreshRelatedPortlets();validateAndCloseWindow();disableSIMenues();" />  

          <div id="capsule">
                    <table class="clsMainTable2">
                        
                        <tr class="clsRowGreyBg">
                             <td>
                                <div id="btnToolbar"></div>
                             </td>
                        </tr>
                        <tr><td class="TD15pxHeightCls"></td></tr>
                      <tr>
                            <td>
                              <table class="clsTable clsTD90" cellspacing="0" cellpadding="0"> 
                              <tr>
                              <td>
                                                
                                                
                                                
                              <apex:inputhidden id="problem_Problem_Description__c" value="{!closeProblemBean.problem.BMCServiceDesk__Problem_Description__c}"/>
                                     
                            <apex:repeat value="{!CloseFieldSets}" var="lFS"> 
                                    <apex:outputPanel rendered="{!NOT(AND(ISBLANK(closeProblemBean.problem.Id),OR(NOT($ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable),OR(CONTAINS(lFS.fieldPath, 'OwnerId'),CONTAINS(lFS.fieldPath, 'FKOpenBy__c')))))}" > 
                                    <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Problem__c.fields[lFS].accessible}" >
                                    <apex:outputPanel rendered="{!NOT(OR(lFS.type=='boolean',lFS.type=='multipicklist',lFS.type=='datetime',lFS.type=='date',CONTAINS(lFS.fieldPath, 'OwnerId')))}" >
                                   
                                        <table  cellspacing="0" cellpadding="0" class="rf-table" >
                                            <tr>
                                                <td class="rf-inc-label" style="width:130px" >
                                                    <apex:outputLabel value="{!lFS.label}" rendered="{!OR(NOT(ISBLANK(closeProblemBean.problem.Id)),$ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable)}"/>
                                                    <apex:outputLabel value="*" styleClass="RequiredAsterisk" rendered="{!AND($ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable, OR((!$ObjectType.BMCServiceDesk__Problem__c.fields[lFS].nillable),(lFS.required),(lFS.DBRequired)))}"/>
                                                </td>
                                                <td class="rf-inc-field" title="{!$ObjectType.Problem__c.fields[lFS].inlineHelpText}">
                                                    <div class="clsRelativePosition">
                                                        <apex:inputField id="inputField1" value="{!closeProblemBean.problem[lFS.fieldPath]}" rendered="{!OR(NOT(CONTAINS($ObjectType.BMCServiceDesk__Problem__c.fields[lFS].type,'reference')),NOT(($ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable)))}"  styleClass="{!lFS.fieldPath}"  required="{!OR(lFS.required, lFS.DBRequired)}" />
                                                        <script>
                                                            setFSFieldDetail('{!lFS.fieldPath}', '{!JSENCODE(lFS.Label)}', {!lFS.required}, {!lFS.DBRequired}, '{!$Component.inputField1}','', '{!JSENCODE($ObjectType.Problem__c.fields[lFS.fieldPath].inlineHelpText)}');
                                                        </script>
                                                        <apex:outputPanel rendered="{!AND(CONTAINS($ObjectType.BMCServiceDesk__Problem__c.fields[lFS].type,'reference'),($ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable))}">
                                                            <input type="text"  onkeyup="fetchTypeAheadData(this,'{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].referenceNameObject}','{!$ObjectType.Problem__c.fields[lFS].name}',event);" onblur="disableDiv('autocompleteDiv')"  value="{!closeProblemBean.problem[closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].referenceNameField][closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].referenceNameFieldSec]}" id="{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].idForName}"  class="clsPanelInputTextbox" />
                                                            <input type="text" value='{!closeProblemBean.problem[closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].referenceNameField]}'  id="{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].idForId}" style="display:none" />  <!-- style="display:none"  -->
															<apex:outputText value="CRUDFLSCheck#. This input-text is within apex:repeat. Accessible and Updateable check is added at parent output panel level. FLS enforcment not required here" rendered="false" />
                                                            <apex:inputText value="{!closeProblemBean.problem[lFS.fieldPath]}" id="referenceId"  required="{!OR(lFS.required, lFS.DBRequired)}" style="display:none" />  <!-- style="display:none"  -->
                                                            <input type="button" class="lookupIconOn" id="lastnameLookup_Id" onclick="openPopUpForLookupPopup(this,'{!$ObjectType.Problem__c.fields[lFS].name}','{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].referenceNameObject}','{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].idForId}','{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].idForName}');"  />
                                                            <script>
                                                            setFSFieldDetail('{!lFS.fieldPath}', '{!JSENCODE(lFS.Label)}', {!lFS.required}, {!lFS.DBRequired},  '{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].idForId}', '{!closeProblemBean.referenceFieldMap[$ObjectType.Problem__c.fields[lFS].name].idForName}', '{!JSENCODE($ObjectType.Problem__c.fields[lFS.fieldPath].inlineHelpText)}');
                                                        </script>
                                                        </apex:outputPanel>
                                                    </div>
                                                </td>
                                                <td  class ="lookupIconTD1">
                                                    <input type="button" id="textAreaBtn" class="TextboxPopupIcon" onclick="openTextEditorPopup(this,'{!lFS.label}', '32000', '{!$Label.Ok}', '{!$Label.Cancel}',false );" style="{!IF(AND(lFS.type=='textarea',NOT(closeProblemBean.rtfFields[lFS.fieldPath])),'display:inline','display:none')}" title="{!lFS.label}"/>
                                                </td>
                                            </tr>
                                        </table> 
                                        
                                    <apex:inputtext id="hiddenVar"  title="{!lFS.fieldPath}" rendered="{!CONTAINS(lFS.type,'reference')}" Style="display:none" />
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!lFS.type=='datetime'}" >
                                      <table  cellspacing="0" cellpadding="0" class="rf-table"  >
                                            <tr>
                                                <td class="rf-inc-label" style="width:130px" >
                                                    <apex:outputLabel value="{!lFS.label}"/>
                                                    <apex:outputLabel value="*" styleClass="RequiredAsterisk" rendered="{!OR((lFS.required),(lFS.DBRequired))}" />
                                                </td>
                                                <td colspan="2" class="{!IF(OR((lFS.required),(lFS.DBRequired)),'rf-inc-date', 'rf-inc-label')}" title="{!$ObjectType.Problem__c.fields[lFS].inlineHelpText}">
                                                    <apex:inputField value="{!closeProblemBean.problem[lFS.fieldPath]}" id="datetimeinput1"  required="{!OR(lFS.required, lFS.DBRequired)}" styleClass="clsDateInputTextBox" />
                                  <apex:outputPanel rendered="{!AND($ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable, NOT(CONTAINS(lFS.fieldPath, 'Closed_Date_Time__c')))}" >
                                  
                                    <apex:image id="dateTimePopupImg" styleClass="dateimgcls" value="{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFbuttons/b_calendar_popup.gif" onclick="showDateTimePicker('{!$Component.datetimeinput1}');" />
                                    <img class="closeIconDis" src="/s.gif" title="{!$Label.Clear}" alt="Clear" onclick="resetDateText('{!$Component.datetimeinput1}');" onmouseout="this.className='closeIconDis'"  onmouseover="this.className='closeIconEnable'; " style="cursor: pointer;" />
                                                                              
                                                  </apex:outputPanel>
                                                  
                          <script>
                                                            setFSFieldDetail('{!lFS.fieldPath}', '{!JSENCODE(lFS.Label)}', {!lFS.required}, {!lFS.DBRequired}, '{!$Component.datetimeinput1}','', '{!JSENCODE($ObjectType.Problem__c.fields[lFS.fieldPath].inlineHelpText)}');
                                                    </script>
                                                </td>
                                            </tr>
                                       </table> 
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!lFS.type=='date'}" >
                                      <table  cellspacing="0" cellpadding="0" class="rf-table"  >
                                            <tr>
                                                <td class="rf-inc-label" style="width:130px" >
                                                    <apex:outputLabel value="{!lFS.label}"/>
                                                    <apex:outputLabel value="*" styleClass="RequiredAsterisk" rendered="{!OR((lFS.required),(lFS.DBRequired))}" />
                                                </td>
                                                <td colspan="2" class="{!IF(OR((lFS.required),(lFS.DBRequired)),'rf-inc-date', 'rf-inc-label')}" title="{!$ObjectType.Problem__c.fields[lFS].inlineHelpText}">
                                                    <apex:inputField value="{!closeProblemBean.problem[lFS.fieldPath]}" id="inputDate1" required="{!OR(lFS.required, lFS.DBRequired)}" styleClass="clsDateInputTextBox"  />
                                  <apex:outputPanel rendered="{!AND($ObjectType.BMCServiceDesk__Problem__c.fields[lFS.fieldPath].Updateable, NOT(CONTAINS(lFS.fieldPath, 'Closed_Date_Time__c')))}" >
                                    
                                    <apex:image id="datePopupImg" styleClass="dateimgcls"  value="{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFbuttons/b_calendar_popup.gif" onclick="showDatePicker('{!$Component.inputDate1}');" />
                                    <img class="closeIconDis" src="/s.gif" title="{!$Label.Clear}" alt="Clear" onclick="resetDateText('{!$Component.inputDate1}');"  onmouseout="this.className='closeIconDis'"  onmouseover="this.className='closeIconEnable'; " style="cursor: pointer;" />
                                                   
                                  </apex:outputPanel>
                                  <script>
                                                            setFSFieldDetail('{!lFS.fieldPath}', '{!JSENCODE(lFS.Label)}', {!lFS.required}, {!lFS.DBRequired}, '{!$Component.inputDate1}','', '{!JSENCODE($ObjectType.Problem__c.fields[lFS.fieldPath].inlineHelpText)}');
                                                    </script>
                                                </td>
                                            </tr>
                                       </table> 
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!CONTAINS(lFS.type,'multipicklist')}" >
                                      <table  cellspacing="0" cellpadding="0" class="rf-table"  >
                                            <tr>
                                                <td class="rf-inc-label" style="width:130px" >
                                                    <apex:outputLabel value="{!lFS.label}"/>
                                                    <apex:outputLabel value="*" styleClass="RequiredAsterisk" rendered="{!OR((lFS.required),(lFS.DBRequired))}" />
                                                </td>
                                                <td colspan="2" class="rf-inc-label" title="{!$ObjectType.Problem__c.fields[lFS].inlineHelpText}">
                                                    <apex:inputField value="{!closeProblemBean.problem[lFS.fieldPath]}"  required="{!OR(lFS.required, lFS.DBRequired)}" />
                                                </td>
                                            </tr>
                                       </table> 
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!AND(CONTAINS(lFS.type,'boolean'))}">
                                            <table  cellspacing="0" cellpadding="0" class="rf-table" >
                                                <tr>
                                                    <td class="rf-inc-label" style="width:130px"></td>
                                                    <td class="rf-inc-field" title="{!$ObjectType.Problem__c.fields[lFS].inlineHelpText}">
                                                        <apex:inputField value="{!closeProblemBean.problem[lFS.fieldPath]}" required="{!OR(lFS.required, lFS.DBRequired)}"  />
                                                    </td>
                                                        <td class="rf-inc-label" style="padding: 5px 5px 5px 0;"><apex:outputLabel styleClass="rf-inc-checkbox-label" value="{!lFS.label}" /><apex:outputLabel value="*" styleClass="RequiredAsterisk" rendered="{!OR((lFS.required),(lFS.DBRequired))}" />
                                                    </td>
                                                </tr>
                                            </table>
                                    </apex:outputPanel>
                                    
                                    </apex:outputPanel> 
                                    </apex:outputPanel> 
                                </apex:repeat>
                                                
                                                
                                               
                      <table class="clsTable" cellspacing="0" cellpadding="0" style="margin-left:5px;">
                                                <tr>
                                                    <td colspan="2"></td>
                                                </tr>
                                              <tr><td><div class="div13pxVspacing"></div></td></tr>
                                              
                                                                                                 
                                                                <tr>
                                                               <td class="checkBoxL" colspan="2">
                                                                    <apex:outputText value="CRUDFLSCHECK# Both CRUD and FLS check are not required, isCloseTask is part of process and is not bind to any field, if user has access of this page then this checkbox should be shown." rendered="false" />
                                                                    <apex:inputCheckbox id="closeTasks" value="{!closeProblemBean.isCloseTask}" title="{!$Label.bmcservicedesk__tooltipproblemcloseclosetasks}" styleClass="clsCheckboxInc"/>
                                                                    <apex:outputLabel styleClass="checkLabel" value="{!$Label.bmcservicedesk__closelinkedtasks}"/>
                                                                </td>                                                    
                                                  </tr>            
                                                 <tr>                                                      
                                                       <td class="checkBoxL" colspan="2">
                                                          <apex:outputText value="CRUDFLSCHECK# Both CRUD and FLS check are not required, closeIncident is part of process and is not bind to any field, if user has access of this page then this checkbox should be shown." rendered="false" />
                                                           <apex:inputCheckbox id="closeIncidents" value="{!closeProblemBean.closeIncident}" title="{!$Label.bmcservicedesk__tooltipproblemclosecloseincidents}" styleClass="clsCheckboxInc"/>
                                                           <apex:outputLabel styleClass="checkLabel" value="{!$Label.bmcservicedesk__closeincidents}"/>
                                                      </td>                                                        
                                                 </tr>
                                        </table>
                                                
                                </td>
                                
                              </tr>
                              </table>
                          
                            </td>
                        </tr>
                        <tr><td><div class="div9pxVspacing"></div></td></tr>
              </table>
                </div>  
             	<div id="parentTypeAheadDiv" />	 
            </apex:form>
       </apex:outputPanel>
       <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/CloseFormCommon.js" />
	   <script src="{!$Resource.SDEFCommonJS}/TypeAhead.js"  type="text/javascript" />
		<script>
		 var currentConsole = 'Problem';
		_RemotingActions={}
		_RemotingActions.getLookupFieldData = '{!$RemoteAction.ConsoleRemoteActions.getLookupFieldData}';
		initiateTypeAhead(typeAheadDivId, 'parentTypeAheadDiv');
		</script>
</apex:page>