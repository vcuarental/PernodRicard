<!--
 * Name:        ASI_CRM_CN_PromotionContractPage
 * Description: Visualforce Page for promotion contract view/edit
 *
 * Version History
 * Date             Developer               Comments
 * ============  ====================   ===============
 * 2018-11-08       Keith Yip               Created
 -->
<apex:page standardController="ASI_TH_CRM_Contract__c" extensions="ASI_CRM_CN_PromotionContractCtrl" action="{!Calculation}" sidebar="false">
 <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_AddOn_CSS_V3_3_2, '/bower_components/Font-Awesome/css/font-awesome.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery-ui1.10.4.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.ASI_Library, 'dist/css/bootstrap.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery1.10.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery-ui1.10.4.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_Library, 'dist/js/bootstrap.min.js')}" />

    <apex:stylesheet value="{!URLFOR($Resource.ASI_CN_DataTables, 'datatables.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ASI_CN_DataTables, 'datatables.min.js')}"/>

    <style type="text/css">
        .BSCommandButton{
            color: #333 !important;
            background-color: #fff !important;
            border-color: #ccc !important;
            margin-left: 0.5em !important;
            margin-right: 0.5em !important;
            margin-bottom: 0.5em !important;
            padding: 3px 6px !important;
        }

        .HeaderTable tr td:nth-child(odd){
            text-align: right  !important;
            font-weight: bold !important;
        }


        .HeaderCss{
            color: #fff;
            border-radius: 3px 3px 0 0;
            background-color: #337ab7;
            padding: 10px 15px;
            text-align: left;
        }

        .module-header-table{
            width: 100%;
        }

        .module-header-table td {
            width: 15%;
            padding: 0.1rem;
            border: 1px solid #ddd;
        }

        .module-header-table tr td:nth-child(odd) {
            text-align: right  !important;
            font-weight: bold !important;
        }

        .PanelBody{
            padding: 0.3em;
            background-color: #fff;
            border: 1px solid #337ab7;
            border-bottom-left-radius: 3px;
            border-bottom-right-radius: 3px;
            border-top-right-radius: 3px;
        }

        .PSFAdjLabel{
            font-weight: bold;
            text-align: right;
            padding-top: 0.8em;

        }

        .contract-header-table{
            width: 100%;
        }

        .multitable-header{
            font-weight: bold !important;
        }

        .NumInputField{
            width: 8em !important;
            text-align: right;
            padding: 3px 6px;
            border: 1px solid #ccc;
            border-radius: 4px;

        }

        .TextInputField{
            width: 16em !important;
            text-align: right;
            padding: 3px 6px;
            border: 1px solid #ccc;
            border-radius: 4px;

        }

        .DateInputField{
            width: 16em !important;
            text-align: right;
            padding: 3px 6px;
            border: 1px solid #ccc;
            border-radius: 4px;

        }

        .header-detail-table {
            margin-bottom: 0 !important;
        }
        .header-detail-table tr td:nth-child(odd) {
            text-align: right  !important;
            font-weight: bold !important;
        }

        .ApexInputField{
            width: 8em !important;
            text-align: right;
            padding: 3px 6px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .requiredField{
            border-left: 3px solid #f70606  !important;
        }

        .SubBrandClass{
            width: 30em !important;
        }

        .accordion {
            cursor: pointer;
            padding: 10px;
            width: 100%;
            border: none;
            text-align: left;
            outline: none;
            font-size: 10px;
            transition: 0.4s;
        }

        .panel-body {
            overflow: hidden;
            display: block;
        }

        .accordion:before {
            content: '\02795'; /* Unicode character for "plus" sign (+) */
            font-size: 13px;
            color: #777;
            float: left;
            margin-left: 5px;
        }

        .active:before {
            content: "\2796"; /* Unicode character for "minus" sign (-) */
        }


    </style>

    <script type='text/javascript'>
    //BD date for get BS budget
    var strStartBGDate;
    var strEndBGDate;
    var strStartBGDate2;
    var strEndBGDate2;

         $(document).on('mousemove', function (e) {
            $('#loadtext').css({
                left: e.pageX,
                top: e.pageY
            });
         });

         $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
            CommercialTeam = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_Commercial_Team__c}';
            Region = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_Region__c}';
            RegionId = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_CCity__r.ASI_CRM_CN_Area__r.ASI_CRM_Division__r.ASI_CRM_Region__c}';
            CityTier = '{!ContractSelected.ASI_CRM_CN_Outlet_WS__r.ASI_CRM_CN_CCity__r.ASI_CRM_CN_City_Tier__c}';
            strStartBGDate = formatDate('{!strStartBGDate}');
            strEndBGDate = formatDate('{!strEndBGDate}');
            strStartBGDate2 = formatDate('{!strStartBGDate2}');
            strEndBGDate2 = formatDate('{!strEndBGDate2}');
            retrieveSBBrand();

             var acc = document.getElementsByClassName("accordion");
             var i;

             for (i = 0; i < acc.length; i++) {
                acc[i].addEventListener("click", function() {
                this.classList.toggle("active");
                var panel = this.nextElementSibling;
                if (panel.style.display === "block" || panel.style.display === "") {
                    panel.style.display = "none";
                } else {
                    panel.style.display = "block";
                }
                });
              }

        });



        //Format the Date to YYYY-MM-DD
        function formatDate(date) {
         return $.datepicker.formatDate('yy-mm-dd', new Date(date));
        }

        //Format the Date to YYYYMM
        function formatDate2(date) {
         return $.datepicker.formatDate('yy-mm', new Date(date));
        }

        //remove comma
        function StringToNumberStr(i) {
            return typeof i === 'string' ? i.replace(/\s/g, '').replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
        };

        //Sub-Brand
        function retrieveSBBrand() {
            var whereClause = ' WHERE RecordType.DeveloperName = \'ASI_FOC_CN_Sub_brand\'  and ASI_CRM_CN_Sub_brand_Grade__c!=null and  ASI_MFM_Brand__r.ASI_CRM_CN_Competitor__c =FALSE and ASI_MFM_Active_for_CRM__c=TRUE  and ASI_MFM_Sub_brand_Code__c != \'999\'  '
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_CRM_CN_PromotionContractCtrl.FindSubBrandList}', 'ASI_MFM_Sub_brand__c', whereClause, CommercialTeam, Region, RegionId, CityTier, strStartBGDate, strEndBGDate, strStartBGDate2, strEndBGDate2
                , callbackSBBrand
                , {escape: true}
            );
        }

        function onSubBrandChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            let subBrand = SubBrands.find((sb) => sb.label == newValue);
            //let subBrand = SubBrands.find((sb) => sb.value == lineItem.ASI_CRM_CN_Sub_Brand__c);
            if(subBrand != null){
                lineItem.ASI_CRM_CN_Sub_Brand__c = subBrand.value;
                lineItem.ASI_CRM_CN_Sub_Brand__r = subBrand.ASI_CRM_CN_Sub_Brand__r;
                lineItem.ASI_CRM_Sub_Brand_Grade__c = subBrand.SBGradeId;
                lineItem.ASI_CRM_Line_Name__c = subBrand.SBGrade;
            }else{
                lineItem.ASI_CRM_CN_Sub_Brand__c = null;
                lineItem.ASI_CRM_CN_Sub_Brand__r = null;
                lineItem.ASI_CRM_Sub_Brand_Grade__c = null;
                lineItem.ASI_CRM_Line_Name__c = '';
            }

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            CalTotalVolume9L(rowIndex, null, tableId);
        }

        function getList(rowIndex ,tableId)
        {
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            console.log("getList  lineItem" ,lineItem);
            console.log("getList  $(tableId).DataTable().row(rowIndex)" ,$(tableId).DataTable().row(rowIndex).id);
            ASI_CRM_CN_PromotionContractCtrl.GetPackSizeBySubbrand(lineItem.ASI_CRM_CN_Sub_Brand__c , function(result,eventt)
            {
                if(eventt.status)
                {
                    if(result != '' && result != null)
                    {
                        var ss = result.replace(/&\quot;/g,'\"'); 
                        var dc = JSON.parse(ss);
                        var temp = '';
                        console.log('dc ==' ,dc);
                        $('#packSizeList'+rowIndex).empty();
                        if(dc.length > 0)
                        {
                            $('#packSizeList'+rowIndex).append('<option>请选择</option>');
                            for(var i=0;i<dc.length;i++)
                            {
                                temp += '<option>'+dc[i]+'</option>';
                            }
                        }
                        else
                        {
                            $('#packSizeList'+rowIndex).append('<option>无选择项</option>');
                        }
                        
                        $('#packSizeList'+rowIndex).append(temp);
                    }
                        
                }
            });
        }

        function OnSubBrandPackageChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            console.log('newValue' , newValue);
            console.log('$(tableId)' , $(tableId));
            console.log('$(tableId).DataTable()' , $(tableId).DataTable());
            console.log('$(tableId).DataTable().row(rowIndex)' , $(tableId).DataTable().row(rowIndex));

            lineItem.ASI_CRM_CN_Sub_Brand_Package__c = newValue;
            // $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            // UpdateDataForBRSFMap()
        }

        function PackSizeChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            console.log("lineItem" ,lineItem);
            console.log("newValue" ,newValue);

            if(newValue == '请选择' || newValue == '无选择项' || newValue == '请点击加载选项值')
            {

            }
            else if(lineItem.ASI_CRM_CN_Pack_Size__c == null)
            {
                console.log("ASI_CRM_CN_Pack_Size__c是空的" );
                lineItem.ASI_CRM_CN_Pack_Size__c = ' '+newValue + ';';
            }
            else if(lineItem.ASI_CRM_CN_Pack_Size__c.indexOf(' '+newValue+';') == -1)
            {
                console.log("ASI_CRM_CN_Pack_Size__c不是空的" );
                lineItem.ASI_CRM_CN_Pack_Size__c += ' '+newValue + ';';
            }
            else if(lineItem.ASI_CRM_CN_Pack_Size__c.indexOf(' '+newValue+';') != -1)
            {
                var oldPackSizeString = lineItem.ASI_CRM_CN_Pack_Size__c;
                var newPackSizeString = oldPackSizeString.replace(' '+newValue+';' ,'');
                lineItem.ASI_CRM_CN_Pack_Size__c = newPackSizeString;
            }
            console.log("lineItem.ASI_CRM_CN_Pack_Size__c" ,lineItem.ASI_CRM_CN_Pack_Size__c);
            // lineItem.ASI_CRM_CN_Pack_Size__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            UpdateDataForBRSFMap()
        }

        function UpdateDataForBRSFMap(){
            updateLinesBeforeApex();
            UpdateBRSFMap(JSON.stringify(BRSF_Item_MapJSON));
        }

        //Total Volume (9L) calculation
        function CalTotalVolume9L(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            let subBrand = SubBrands.find((sb) => sb.value == lineItem.ASI_CRM_CN_Sub_Brand__c);
            console.log('element.Actual_CM_GSs__r' ,subBrand.ConversionFactor9L);
            console.log('element.Id' ,subBrand.value);
            console.log('element.Id' ,subBrand.label);

            var Old_Total_Volume_Std_btl = lineItem.ASI_CRM_CN_Total_Volume_Std_btl__c == null ? 0: lineItem.ASI_CRM_CN_Total_Volume_Std_btl__c;
            lineItem.ASI_CRM_CN_Total_Volume_Std_btl__c = newValue!= null ? newValue : Old_Total_Volume_Std_btl;
            //lineItem.ASI_CRM_CN_Total_Volume_9L__c = newValue  * subBrand.ConversionFactor9L / 9;
            lineItem.ASI_CRM_CN_Total_Volume_9L__c = (newValue != null ? newValue : lineItem.ASI_CRM_CN_Total_Volume_Std_btl__c) * subBrand.ConversionFactor9L / 9;

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            //calculation Outlet purchase value after calculating the Total Volume (9L)
            CalOutletPurchase(rowIndex, tableId);

            var isChildPO = {!isChildPO};
            if(isChildPO){
                CalAllPurchase();
            }
        }

        function DropInChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            if(lineItem.ASI_CRM_CN_Drop_In__c)
            {
                lineItem.ASI_CRM_CN_Drop_In__c = false;
            }
            else
            {
                lineItem.ASI_CRM_CN_Drop_In__c = true;
            }

            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            UpdateDataForBRSFMap()
        }


        //Outlet purchase value calculation
        function CalOutletPurchase(rowIndex, tableId, markup = null){
            var BRSFMarkUp = document.getElementById('{!$Component.EditContractDetailPageId.BRSFMarkUp}').value;
            console.log('BRSFMarkUp' ,BRSFMarkUp);
            console.log('{!vatPercent}' ,{!vatPercent});
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            let subBrand = SubBrands.find((sb) => sb.value == lineItem.ASI_CRM_CN_Sub_Brand__c);
            console.log('element.BudgetGS' ,subBrand.BudgetGS);
            //lineItem.ASI_CRM_CN_Contract_Purchase_Value__c = lineItem.ASI_CRM_CN_Total_Volume_9L__c * subBrand.BudgetGS * (1 + {!BRSF_Item_Map.Module.ASI_CRM_CN_Total_Markup__c}/100) * (1 +{!vatPercent}/100);
            //lineItem.ASI_CRM_CN_Contract_Purchase_Value__c = lineItem.ASI_CRM_CN_Total_Volume_9L__c * subBrand.BudgetGS * (1 + (markup != null ? markup : {!BRSF_Item_Map.Module.ASI_CRM_CN_Total_Markup__c}) /100) * (1 +{!vatPercent}/100);
            lineItem.ASI_CRM_CN_Contract_Purchase_Value__c = lineItem.ASI_CRM_CN_Total_Volume_9L__c * subBrand.BudgetGS * (1 + (markup != null ? markup : BRSFMarkUp) /100) * (1 +{!vatPercent}/100);
            lineItem.ASI_CRM_CN_GS_Per_9L__c = subBrand.BudgetGS;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            UpdateDataForBRSFMap();
        }

        //Calculate all rows Outlet purchase value
        function CalAllOutletPurchase(tableId, markup)
        {
            var data = $(tableId).DataTable().rows().data();
            data.each(function (value, index) {
              CalOutletPurchase(index, tableId, markup);
            });
        }

        function CalAllPurchase(){

            $('table[id^=example_],table[id^=MultiTable_]').each(function () {
                var tableId = '#' + $(this).attr('id');
                var data = $(tableId).DataTable().rows().data();
                    data.each(function (value, index) {
                        CalPurchase(index, tableId);
                    });
            });

        }

        function CalPurchase(rowIndex, tableId){

            var key = tableId.split('_')[1];
            var mutitablekey = tableId.split('_')[2];

            var PSF_Item_MapJSON = {!PSF_Item_MapJSON};
            var interimData = PSF_Item_MapJSON[key];
            var volumeBase = interimData.Module.ASI_CRM_Volume_Base__c;
            let methodology = interimData.Module.ASI_CRM_Methodology__r.Name;

            var lineItem = $(tableId).DataTable().row(rowIndex).data();

            var PurchaseKey = mutitablekey;

            if(methodology == 'Rebate%' || methodology =='Per Incentive Btl'){
                if(volumeBase =='By Sub-Brand'){
                    PurchaseKey = lineItem.ASI_CRM_CN_Sub_Brand__c;
                }else if(volumeBase == 'By Brand Group'){
                    PurchaseKey = lineItem.ASI_CRM_CN_Sub_Brand_Package__c;
                }
            }

            var PurchaseAmount = $('#BRSF_Datatable').DataTable().data().reduce(function (initialValue, data) {
                //var brsfPurchase =
                var brsfPurchase = 0;

                if(volumeBase =='By Sub-Brand' && data.ASI_CRM_CN_Sub_Brand__c == PurchaseKey){
                    brsfPurchase = data.ASI_CRM_CN_Contract_Purchase_Value__c;
                }else if(volumeBase =='By Brand Group' && data.ASI_CRM_CN_Sub_Brand_Package__c == PurchaseKey){
                    brsfPurchase = data.ASI_CRM_CN_Contract_Purchase_Value__c;
                }else if(volumeBase =='By Total'){
                    brsfPurchase = data.ASI_CRM_CN_Contract_Purchase_Value__c;
                }

                return initialValue + (parseFloat(brsfPurchase) || 0);
            }, 0);

            if(methodology == 'Rebate%'){
                lineItem.ASI_CRM_CN_Min_Purchase_Target__c = PurchaseAmount;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = PurchaseAmount * lineItem.ASI_CRM_CN_Rebate_Percent__c/100;
                $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            }else if(methodology =='Per Incentive Btl'){
                lineItem.ASI_CRM_Est_Total_QTY_std_Btl__c = PurchaseAmount;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = PurchaseAmount * lineItem.ASI_CRM_CN_Contract_BRSF_Per_Bottle__c;
                $(tableId).DataTable().row(rowIndex).data(lineItem).draw();
            }else{
                $(tableId).attr('LadderAmt').value = PurchaseAmount;
            }

        }



        //Calculate Incentive value by Package Number in PSF
        function CalIncentiveByPackageNumber(rowIndex, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            //lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_CN_Min_Purchase_Target__c * lineItem.ASI_CRM_CN_Rebate_Percent__c/100 * lineItem.ASI_CRM_CN_Package_Number__c;
            var PurchaseTarget = lineItem.ASI_CRM_CN_Min_Purchase_Target__c != null ? lineItem.ASI_CRM_CN_Min_Purchase_Target__c : 0;
            var RebatePercent = lineItem.ASI_CRM_CN_Rebate_Percent__c != null ? lineItem.ASI_CRM_CN_Rebate_Percent__c : 0;
            var PackageNumber = lineItem.ASI_CRM_CN_Package_Number__c != null ? lineItem.ASI_CRM_CN_Package_Number__c : 0;
            lineItem.ASI_CRM_CN_Est_Total_Dummy__c = PurchaseTarget * RebatePercent/100 * PackageNumber;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            calculateExpectedPSFEstimatedTotal();
        }

        //Calculate Incentive value by Proportion in PSF              
        function CalIncentiveByProportion(rowIndex, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            //lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_CN_Min_Purchase_Target__c * lineItem.ASI_CRM_CN_Rebate_Percent__c/100 * lineItem.ASI_CRM_CN_Package_Number__c/100;
            //var PurchaseTarget = lineItem.ASI_CRM_CN_Min_Purchase_Target__c != null ? lineItem.ASI_CRM_CN_Min_Purchase_Target__c : 0;
            var LadderAmt = $(tableId).attr('LadderAmt') != null ? $(tableId).attr('LadderAmt') : 0;
            var RebatePercent = lineItem.ASI_CRM_CN_Rebate_Percent__c != null ? lineItem.ASI_CRM_CN_Rebate_Percent__c : 0;
            var Proportion = lineItem.ASI_CRM_CN_Package_Number__c != null ? lineItem.ASI_CRM_CN_Package_Number__c : 0;
            var moduleProportion = PSF_Item_MapJSON[tableId.split('_')[1]].Module.ASI_CRM_CN_Proportion__c != null ? PSF_Item_MapJSON[tableId.split('_')[1]].Module.ASI_CRM_CN_Proportion__c/100 : 1;
            //lineItem.ASI_CRM_CN_Est_Total_Dummy__c = PurchaseTarget * RebatePercent/100 * Proportion/100;  
            lineItem.ASI_CRM_CN_Est_Total_Dummy__c = LadderAmt * RebatePercent/100 * Proportion/100 * moduleProportion;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            calculateExpectedPSFEstimatedTotal();
        }

         function onBottleChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Contract_BRSF_Per_Bottle__c = newValue;

            //Calculate Total
            lineItem.ASI_CRM_CN_Est_Total_Dummy__c = lineItem.ASI_CRM_Est_Total_QTY_std_Btl__c * newValue
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            calculateExpectedPSFEstimatedTotal();

        }

        function OnMinPurchaseChange(rowIndex, newValue, tableId, CalIncentiveBy){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Min_Purchase_Target__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            if(CalIncentiveBy =='Proportion'){
                var nextLineItem = $(tableId).DataTable().row(rowIndex - 1).data();
                if(nextLineItem){
                    nextLineItem.ASI_CRM_CN_Max_Purchase_Target__c = lineItem.ASI_CRM_CN_Min_Purchase_Target__c - 0.01;
                    $(tableId).DataTable().row(rowIndex - 1).data(nextLineItem);
                    CalIncentiveByProportion(rowIndex - 1, tableId)
                }
            }

            //Calculate Incentive value
            //if CalIncentiveBy = 'Package' then calculate Incentive by No. of Package
            //if CalIncentiveBy = 'Proportion' then calculate Incentive by Proportion present
            if(CalIncentiveBy =='Package')
                CalIncentiveByPackageNumber(rowIndex, tableId);
            else
                CalIncentiveByProportion(rowIndex, tableId);
        }

        function OnRebatePercentChange(rowIndex, newValue, tableId, CalIncentiveBy){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Rebate_Percent__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            //Calculate Incentive value
            //if CalIncentiveBy = 'Package' then calculate Incentive by No. of Package
            //if CalIncentiveBy = 'Proportion' then calculate Incentive by Proportion present
            if(CalIncentiveBy =='Package')
                CalIncentiveByPackageNumber(rowIndex, tableId);
            else
                CalIncentiveByProportion(rowIndex, tableId);
        }

        //For Rebate%
        function OnRebatePercentChange2(rowIndex, newValue, tableId, isPSF=true){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            //lineItem.ASI_CRM_CN_Rebate_Percent__c = newValue;
            lineItem.ASI_CRM_CN_Rebate_Percent__c = newValue != null ? newValue : lineItem.ASI_CRM_CN_Rebate_Percent__c;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            var PurchaseTarget = lineItem.ASI_CRM_CN_Min_Purchase_Target__c != null ? lineItem.ASI_CRM_CN_Min_Purchase_Target__c : 0;
            var RebatePercent = lineItem.ASI_CRM_CN_Rebate_Percent__c != null ? lineItem.ASI_CRM_CN_Rebate_Percent__c : 0;
            if(isPSF){
                var Proportion = PSF_Item_MapJSON[tableId.split('_')[1]].Module.ASI_CRM_CN_Proportion__c;
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = PurchaseTarget * RebatePercent/100 * (Proportion != null ? Proportion/100 : 1);
            }else{
                lineItem.ASI_CRM_CN_Est_Total_Dummy__c = PurchaseTarget * RebatePercent/100;
            }
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            if(isPSF){
                calculateExpectedPSFEstimatedTotal();
            }else{
                calculateExpectedDisplayEstimatedTotal();
            }

        }

        function ModuleProportionChange(interimDataKey, value){
            PSF_Item_MapJSON[interimDataKey].Module.ASI_CRM_CN_Proportion__c = value;
            if(PSF_Item_MapJSON[interimDataKey].displayMultiTable){
              $('table[id^=MultiTable_'+interimDataKey+']').each(function () {
                var tableId = '#' + $(this).attr('id');
                var data = $(tableId).DataTable().rows().data();
                    data.each(function (value, index) {
                        CalIncentiveByProportion(index, tableId);
                    });
              });
            }else{
              var data = $('#example_'+interimDataKey).DataTable().rows().data();
              data.each(function (value, index) {
                 if(PSF_Item_MapJSON[interimDataKey].Module.ASI_CRM_Methodology__r.Name=='Rebate%(By Ladder)'){
                    CalIncentiveByProportion(index,'#example_'+interimDataKey);
                 }else{
                    OnRebatePercentChange2(index, null, '#example_'+interimDataKey);
                 }
              });
            }
        }

        function OnPackageNumberChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Package_Number__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            //Calculate Incentive value
            CalIncentiveByPackageNumber(rowIndex, tableId);
        }

        function OnProportionChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Package_Number__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            //Calculate Incentive value
            CalIncentiveByProportion(rowIndex, tableId);
            // var flag = (newValue > 100);
            // if(flag)
            // {
            //     alert('百分比不能超过100');
            // }
            // else
            // {

                
            // }
            

            // console.log('OnProportionChange 比较' ,(newValue > 100));

            

        }

        function OnMonthProportionChange(rowIndex, newValue, tableId){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Package_Number__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            //Calculate Incentive value

        }

        function OnTotalChange(rowIndex, newValue, tableId, Type){
            var lineItem = $(tableId).DataTable().row(rowIndex).data();
            lineItem.ASI_CRM_CN_Est_Total_Dummy__c = newValue;
            $(tableId).DataTable().row(rowIndex).data(lineItem).draw();

            if(Type=='PSF'){
                calculateExpectedPSFEstimatedTotal();
            }else{
                calculateExpectedDisplayEstimatedTotal();
            }
        }

        //changing PSF Grand Estimate Total
        function GrandEstimateTotal(estimatedTotal, idTotalBefore, idToUpdate) {
            //var AdjustmentAmount = Number(StringToNumberStr(estimatedTotal)) - Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent));
            var AdjustmentAmount = 0;
            if(Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent)) == 0 || Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent)) == null){
                AdjustmentAmount = 100;
            }else{
                //AdjustmentAmount = (Number(StringToNumberStr(estimatedTotal)) - Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent))) / Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent)) *100;
                AdjustmentAmount = Number(StringToNumberStr(estimatedTotal)) / Number(StringToNumberStr($('#'+idTotalBefore)[0].textContent)) *100;
            }
            $('#'+idToUpdate)[0].textContent = formatNumber(AdjustmentAmount);
        }

        //Covered Outlet select all checkboxes
        function selectAllCheckboxes(obj, receivedInputID, ClassName) {
            var inputCheckBox = document.getElementsByTagName("input");
            for (var i = 0; i < inputCheckBox.length; i++) {
                if (inputCheckBox[i].id.indexOf(receivedInputID) != -1 && inputCheckBox[i].className ==ClassName) {
                    inputCheckBox[i].checked = obj.checked;
                }
            }
        }

        function calculateExpectedPSFEstimatedTotal(){
            var estimateTotalSum = $('table[id^=example_],table[id^=MultiTable_]').DataTable().data().reduce(function (initialValue, data) {
                return initialValue + (parseFloat(data.ASI_CRM_CN_Est_Total_Dummy__c) || 0);
            }, 0);

            $('#ExpectedPSFEstimatedTotal').find('input').val(estimateTotalSum.toFixed(2));
            GrandEstimateTotal(estimateTotalSum,'PSFGrandEstimateTotalBeforeAdjustmentId', 'PSFAdjustmentAmountId');
        }

        function calculateExpectedDisplayEstimatedTotal(){
            var estimateTotalSum = $('table[id^=Display_]').DataTable().data().reduce(function (initialValue, data) {
                return initialValue + (parseFloat(data.ASI_CRM_CN_Est_Total_Dummy__c) || 0);
            }, 0);

            $('#ExpectedDisplayEstimatedTotal').find('input').val(estimateTotalSum.toFixed(2));
            GrandEstimateTotal(estimateTotalSum,'DisplayGrandEstimateTotalBeforeAdjustmentId', 'DisplayAdjustmentAmountId');
        }

    </script>

    <script>
            var SubBrands = [];
            var deletedLines = [];
            var BRSF_Item_MapJSON = {!BRSF_Item_MapJSON};
            var PSF_Item_MapJSON = {!PSF_Item_MapJSON};
            var DisplayListing_Item_MapJSON = {!DisplayListing_Item_MapJSON};


            /**
             *
             * @param tableId is the following format: #example_{module id or string}
             */
            function redrawTable(tableId, type){
                var key = tableId.split('_')[1];
                var mutitablekey = tableId.split('_')[2];
                var isBRSF = type=='BRSF';
                var isPSF =  type=='PSF';
                var isDisplay =  type=='Display';
                var isGroupPO = {!isGroupPO};
                var isChildPO = {!isChildPO};

                if(isBRSF){
                    var interimData = BRSF_Item_MapJSON;
                }
                else if(isPSF)
                {
                    var interimData = PSF_Item_MapJSON[key];
                    //var interimData = PSF_Item_MapJSON[key].displayMultiTable ? PSF_Item_MapJSON[key].filter(function (i,n){ return n.ASI_CRM_CN_Sub_Brand__c=== mutitablekey; }) : PSF_Item_MapJSON[key];
                }
                else if(isDisplay){
                    var interimData = DisplayListing_Item_MapJSON[key];
                }

                var data = Object.keys(interimData.DetailLineMap).sort().map(key => interimData.DetailLineMap[key]);

                var volumeBase = isPSF||isDisplay ? interimData.Module.ASI_CRM_Volume_Base__c : null;
                let methodology =  isPSF||isDisplay ? interimData.Module.ASI_CRM_Methodology__r.Name : null;

                var isFromGroupPo = interimData.Module.ASI_CRM_Group_Contract__c && isChildPO;

                if(isPSF && PSF_Item_MapJSON[key].displayMultiTable && volumeBase =='By Sub-Brand'){
                    data = data.filter(d => d.ASI_CRM_CN_Sub_Brand__c===mutitablekey);
                }else if(isPSF && PSF_Item_MapJSON[key].displayMultiTable && volumeBase =='By Brand Group'){
                    data = data.filter(d => d.ASI_CRM_CN_Sub_Brand_Package__c===mutitablekey);
                }


                var isCreatedInCurrentVersion = Boolean(interimData.isCreatedInCurrentVersion);

                var IsDetailEdit = {!IsDetailEdit};

                var table = $(tableId).DataTable( {
                    paging: false,
                    ordering: false,
                    searching:false,
                    info:false,
                    drawCallback: function(){
                        initalizeAutoCompleteComponent();
                    },
                    footerCallback: function( tfoot, data, start, end, display ) {
                        var api = this.api();
                        var htmlString = '';

                        var summableColumns = api.columns('.summable').indexes();

                        api.columns().every(function () {
                            var column = this;

                            if(column.visible()){
                                htmlString += '<th>';

                                var sum = '';
                                if(summableColumns.indexOf(column.index()) !== -1){
                                    sum = this
                                        .data()
                                        .reduce(function(a, b) {
                                            var x = parseFloat(a) || 0;
                                            var y = parseFloat(b) || 0;
                                            return x + y;
                                        }, 0);
                                    htmlString += formatNumber(sum);
                                }
                                htmlString += '</th>';

                            }

                        });
                        $(tfoot).select('tr').html(htmlString);

                    },
                    columnDefs: [
                        {
                            targets: 'summable',
                            defaultContent: 0.00,
                            render: function ( data, type, row ) {
                                return formatNumber(data);
                            }
                        },
                        {
                            targets: '_all',
                            defaultContent: 0.00,
                            render: function ( data, type, row ) {
                                return formatNumber(data);
                            }
                        }
                    ],
                    // Covert object to array and make sure about the order
                    data: data,
                    //data: Object.keys(interimData.DetailLineMap.filter(function (i,n){ return n.ASI_CRM_CN_Sub_Brand__c=== mutitablekey; })).sort().map(key => interimData.DetailLineMap[key]),
                    columns: [
                    //BRSF Columns
                        {
                            title: IsDetailEdit && !isChildPO ? '<button type="button" class="BSCommandButtonSM" onclick=\'addRow("'+tableId+'",'+JSON.stringify(interimData.Module)+')\'>{!$Label.ASI_CRM_CN_Add_New}</button>' : '' ,
                            render: function (data, type, row, meta) {
                                if ($.isEmptyObject(row) || !IsDetailEdit || isChildPO) {
                                    return '';
                                }
                                return `<button class=" no-border" onclick="deleteRow(${meta.row},'${tableId}','')"><span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span></button>`;
                            },
                            visible: isBRSF && isCreatedInCurrentVersion
                        },
                        {
                            title: "{!$ObjectType.ASI_MFM_Sub_brand__c.Label}",
                            data: 'ASI_CRM_CN_Sub_Brand__r.Name',
                            render: function (data, type, row, meta) {
                                data = data || '';
                                if(isCreatedInCurrentVersion && IsDetailEdit && !isChildPO){
                                    return `<input value="${data}" class="SubBrandClass" onChange="onSubBrandChange(${meta.row}, this.value, '${tableId}')"/>`
                                } else {
                                    return '<a href="/' + row.ASI_CRM_CN_Sub_Brand__c + '">' + data + '</a>';
                                }
                            },
                            visible: isBRSF
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Grade}",
                            data: 'ASI_CRM_Line_Name__c',
                            render: function (data, type, row, meta) {
                                         return '<a href="/' + row.ASI_CRM_Sub_Brand_Grade__c + '">' + data + '</a>';
                                    },
                            visible: isBRSF
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Sub_Brand_Package__c.Label}",
                            data: 'ASI_CRM_CN_Sub_Brand_Package__c',
                            render: function(d,t,r,m){
                                var $select = $("<select></select>", {
                                                                        "id": r[0]+"start",
                                                                        "value": d,
                                                                        "onclick": `OnSubBrandPackageChange(${m.row}, this.value, '${tableId}')`
                                                                     });
                                var SubBrandPackage = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"];
                                $.each(SubBrandPackage, function(k,v){
                                                var $option = $("<option></option>", {
                                                                                        "text": v,
                                                                                        "value": v
                                                                                        });
                                                if(d === v){
                                                     $option.attr("selected", "selected")
                                                }
                                                $select.append($option);
                                });
                                if(isCreatedInCurrentVersion && IsDetailEdit && !isChildPO){
                                    return $select.prop("outerHTML");
                                }else{
                                    return d;
                                }
                            },
                            visible: isBRSF
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_DropIn}",
                            data: 'ASI_CRM_CN_Drop_In__c',
                            render: function(data, type, row, meta){
                                // console.log("${data}" , ${data});
                                console.log("data" , data);
                                if(isCreatedInCurrentVersion && IsDetailEdit){
                                    if(data)
                                    {
                                        return `<input type="checkbox" checked="checked" onChange="DropInChange(${meta.row}, this.value, '${tableId}')" />`;
                                    }
                                    else
                                    {
                                        return `<input type="checkbox" onChange="DropInChange(${meta.row}, this.value, '${tableId}')" />`;
                                    }
                                }else{
                                    if(data)
                                    {
                                        return `<input type="checkbox" checked="checked" disabled="true"/>`;
                                    }
                                    else
                                    {
                                         return `<input type="checkbox"  disabled="true"/>`;
                                    }
                                }
                            },
                            visible: isBRSF
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_PackSize}",
                            data: 'ASI_CRM_CN_Pack_Size__c',
                            render: function (data, type, row, meta) {
                                data = data || '';
                                if(isCreatedInCurrentVersion && IsDetailEdit && !isChildPO){
                                    return `${data}<br/><select  id="packSizeList${meta.row}" name="packSizeList${meta.row}" onclick="getList(${meta.row} , '${tableId}')" onChange="PackSizeChange(${meta.row}, this.value, '${tableId}')"><option value="-1">请点击加载选项值</option></select>`
                                } else {
                                    return data;
                                }
                            },
                            // render: function(data, type, row, meta){
                            //     var $select1 = $("<select></select>", {
                            //                                             "id": row[0]+"start",
                            //                                             "multiple" : "multiple" ,
                            //                                             "size": "6",
                            //                                             "value": data,
                            //                                             "onChange": `PackSizeChange(${meta.row}, this.value, '${tableId}')`
                            //                                          });
                            //     var SubBrandPackage1 = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"];
                            //     $.each(SubBrandPackage1, function(k,v){
                            //                     var $option = $("<option></option>", {
                            //                                                             "text": v,
                            //                                                             "value": v
                            //                                                             });
                            //                     if(data === v){
                            //                          $option.attr("selected", "selected")
                            //                     }
                            //                     $select1.append($option);
                            //     });
                            //     console.log('$select1' ,$select1);
                            //     if(isCreatedInCurrentVersion && IsDetailEdit){
                            //         return $select1.prop("outerHTML");
                            //     }else{
                            //         return data;
                            //     }
                            // },
                            visible: isBRSF
                        },
                        
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Total_Volume_Std_btl__c.Label}",
                            data: 'ASI_CRM_CN_Total_Volume_Std_btl__c',
                            className: 'summable',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit){
                                    return `<input type="number" value="${data}" onChange="CalTotalVolume9L(${meta.row}, this.value, '${tableId}')"/>`;
                                } else {
                                    return formatNumber(data);
                                }

                            },
                            visible: isBRSF && !isGroupPO
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Total_Volume_9L__c.Label}",
                            data: 'ASI_CRM_CN_Total_Volume_9L__c',
                            className: 'summable',
                            visible: isBRSF && !isGroupPO
                        },
                        {
                            title: "销售金额",
                            data: 'ASI_CRM_CN_Contract_Purchase_Value__c',
                            className: 'summable',
                            visible: isBRSF && !isGroupPO
                        }
                        //PSF Columns
                        ,{
                            title: '',
                            render: function (data, type, row, meta) {
                                if ($.isEmptyObject(row) || !IsDetailEdit ||isFromGroupPo) {
                                    return '';
                                }
                                return `<button class=" no-border" onclick="deleteRow(${meta.row},'${tableId}','')"><span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span></button>`;
                            },
                            visible: (isPSF && methodology == 'Per Incentive Btl') &&
                                     isCreatedInCurrentVersion
                        }
                        ,{
                            title: "{!$ObjectType.ASI_MFM_Sub_brand__c.Label}",
                            data: 'ASI_CRM_CN_Sub_Brand__r.Name',
                            render: function (data, type, row, meta) {
                                    data = data || '';
                                    return '<a href="/' + row.ASI_CRM_CN_Sub_Brand__c + '">' + data + '</a>';
                            },
                            visible: isPSF && methodology == 'Per Incentive Btl'
                        },
                        {
                            title: "{!$Label.ASI_CRM_CN_Grade}",
                            data: 'ASI_CRM_Line_Name__c',
                            render: function (data, type, row, meta) {
                                         return '<a href="/' + row.ASI_CRM_Sub_Brand_Grade__c + '">' + data + '</a>';
                                    },
                            visible: isPSF && methodology == 'Per Incentive Btl'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_Est_Total_QTY_std_Btl__c.Label}",
                            data: 'ASI_CRM_Est_Total_QTY_std_Btl__c',
                            visible: isPSF && methodology == 'Per Incentive Btl' && !isGroupPO
                        },
                        {
                            title: "每瓶投入金额（std btl）",
                            data: 'ASI_CRM_CN_Contract_BRSF_Per_Bottle__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit && !isFromGroupPo){
                                    return `<input type="number" step = "0.01" min="0" value="${data}" onChange="onBottleChange(${meta.row}, this.value, '${tableId}')" />`;
                                } else {
                                    return formatNumber(data);
                                }

                            },
                            visible: isPSF && methodology == 'Per Incentive Btl'
                        },
                        {
                            title: "费用总金额",
                            data: 'ASI_CRM_CN_Est_Total_Dummy__c',
                            className: 'summable',
                            visible: isPSF && methodology == 'Per Incentive Btl' && !isGroupPO
                        },
                        {
                            title: !isFromGroupPo && IsDetailEdit && methodology !='Rebate%(By Month)' ? '<button type="button" class="BSCommandButtonSM" onclick=\'addRow("'+tableId+'",'+JSON.stringify(interimData.Module)+')\'>{!$Label.ASI_CRM_CN_Add_New}</button>' : '' ,
                            render: function (data, type, row, meta) {
                                if ($.isEmptyObject(row) || !IsDetailEdit || isFromGroupPo) {
                                    return '';
                                }
                                return `<button class=" no-border" onclick="deleteRow(${meta.row},'${tableId}','${methodology}')"><span class="bs glyphicon glyphicon-trash" style="color:red;font-size: 20px;"></span></button>`;
                            },
                            visible: isPSF && (methodology == 'Rebate%(By Package)' || methodology == 'Rebate%(By Ladder)' || methodology =='Rebate%(By Month)') && (isCreatedInCurrentVersion || methodology =='Rebate%(By Month)')
                        },
                        {
                            title: '组别',
                            data: 'ASI_CRM_Map_Key__c',
                            visible: (isPSF && methodology == 'Rebate%' && volumeBase =='By Sub-Brand')
                        },
                        {
                            title: '组别',
                            data: 'ASI_CRM_CN_Sub_brand_Group__c',
                            visible: (isPSF && methodology == 'Rebate%' && volumeBase =='By Brand Group')
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Date__c.Label}",
                            data: 'ASI_CRM_CN_Date__c',
                            render: function (data, type, row, meta) {
                                        //var d = String(data);
                                        return formatDate2(data);
                                    },
                            visible: isPSF && methodology =='Rebate%(By Month)'
                        },
                        {
                            title: methodology == 'Rebate%(By Ladder)' ? '销售目标(仅用于付款）': "销售目标",
                            data: 'ASI_CRM_CN_Min_Purchase_Target__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit && methodology != 'Rebate%' && !isFromGroupPo){
                                  if(isPSF && methodology == 'Rebate%(By Package)')
                                    return `<input type="number" min="0" step = "0.01" value="${data}" onChange="OnMinPurchaseChange(${meta.row}, this.value, '${tableId}', 'Package')" />`;
                                  else
                                    return `<input type="number" min="0" step = "0.01" value="${data}" onChange="OnMinPurchaseChange(${meta.row}, this.value, '${tableId}', 'Proportion')" />`;
                                } else {
                                    return formatNumber(data);
                                 }
                                },
                            visible: isPSF && (methodology == 'Rebate%(By Package)' || methodology == 'Rebate%(By Ladder)' || (methodology == 'Rebate%' && !isGroupPO))
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Rebate_Percent__c.Label}",
                            data: 'ASI_CRM_CN_Rebate_Percent__c',
                            render: function (data, type, row, meta) {
                                //if(isCreatedInCurrentVersion && IsDetailEdit){
                                if((isCreatedInCurrentVersion||methodology =='Rebate%(By Month)') && IsDetailEdit && !isFromGroupPo){
                                  if(isPSF && methodology == 'Rebate%(By Package)')
                                    return `<input type="number" min="0" style="width:90px;" step = "0.01" value="${data}" onChange="OnRebatePercentChange(${meta.row}, this.value, '${tableId}', 'Package')" />` + '%';
                                  else if(isPSF && methodology == 'Rebate%')
                                    return `<input type="number" min="0" style="width:90px;" step = "0.01" value="${data}" onChange="OnRebatePercentChange2(${meta.row}, this.value, '${tableId}')" />` + '%';
                                  else
                                    return `<input type="number" min="0" style="width:90px;" step = "0.01" value="${data}" onChange="OnRebatePercentChange(${meta.row}, this.value, '${tableId}', 'Proportion')" />` + '%';
                                } else {
                                    return data||0;
                                 }
                                },
                            visible: isPSF && (methodology == 'Rebate%(By Package)' || methodology == 'Rebate%(By Ladder)' || methodology =='Rebate%(By Month)' ||  methodology == 'Rebate%')
                        },
                        {
                            title:  "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Package_Number__c.Label}",
                            data: 'ASI_CRM_CN_Package_Number__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit){
                                    return `<input type="number" min="0" style="width:90px;" step = "0.01" value="${data}" onChange="OnPackageNumberChange(${meta.row}, this.value, '${tableId}')" />`;
                                } else {
                                    return data||0;
                                 }
                                },
                            visible: (isPSF && methodology == 'Rebate%(By Package)' && !isGroupPO)
                        },
                        {
                            title: "比重%",
                            data: 'ASI_CRM_CN_Package_Number__c',
                            render: function (data, type, row, meta) {
                                if((isCreatedInCurrentVersion||methodology =='Rebate%(By Month)') && IsDetailEdit){
                                    return `<input type="number" min="0" style="width:90px;" step = "0.01" value="${data}" onChange="OnProportionChange(${meta.row}, this.value, '${tableId}')" />` + '%';
                                } else {
                                    return data||0;
                                 }
                                },
                            visible: isPSF && ((methodology =='Rebate%(By Month)' || methodology == 'Rebate%(By Ladder)') && !isGroupPO)
                        },
                        {
                            title: "费用总金额",
                            data: 'ASI_CRM_CN_Est_Total_Dummy__c',
                            className: 'summable',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit && methodology =='Others'){
                                    return `<input type="number" step = "0.01" min="0" value="${data}" onChange="OnTotalChange(${meta.row}, this.value, '${tableId}', 'PSF')" />`;
                                } else {
                                    return formatNumber(data);
                                 }
                                },
                            visible:  isPSF && (methodology == 'Rebate%(By Package)' ||
                                      methodology == 'Rebate%(By Ladder)' ||
                                      methodology =='Rebate%(By Month)' ||
                                      methodology == 'Rebate%'  ||
                                      methodology =='Others') && !isGroupPO
                        },
                        //Display (Free Goods)
                        {
                            title: "",
                            data: "Total",
                            render: function (data, type, row, meta) {
                                    return 'Total';
                                },
                            visible: isDisplay
                        },
                        {
                            title: "销售目标",
                            data: 'ASI_CRM_CN_Min_Purchase_Target__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit){
                                    //return `<input type="number" step = "0.01" min="0" value="${data}" onChange="OnMinPurchaseChange(${meta.row}, this.value, '${tableId}')" />`;
                                    return formatNumber(data);
                                } else {
                                    return formatNumber(data);
                                 }
                                },
                            visible: isDisplay && methodology == 'Rebate%' && volumeBase =='By Total'
                        },
                        {
                            title: "{!$ObjectType.ASI_CRM_CN_Contract_BRSF_Line_Item__c.Fields.ASI_CRM_CN_Rebate_Percent__c.Label}",
                            data: 'ASI_CRM_CN_Rebate_Percent__c',
                            render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit && !isFromGroupPo){
                                    return `<input type="number" step = "0.01" min="0" value="${data}" onChange="OnRebatePercentChange2(${meta.row}, this.value, '${tableId}', false)" />`;
                                } else {
                                    return data + '%';
                                 }
                                },
                            visible: isDisplay && methodology == 'Rebate%' && volumeBase =='By Total'
                        },
                        {
                            title: "费用总金额",
                            data: 'ASI_CRM_CN_Est_Total_Dummy__c',
                            className: 'summable',
                             render: function (data, type, row, meta) {
                                if(isCreatedInCurrentVersion && IsDetailEdit && methodology == 'Others'){
                                    return `<input type="number" step = "0.01" min="0" value="${data}" onChange="OnTotalChange(${meta.row}, this.value, '${tableId}' ,'Display')" />`;
                                } else {
                                    return formatNumber(data);
                                 }
                                },
                            visible: isDisplay
                        }
                    ]
                } );
                table.draw();

            }

            function addModule(interimDataKey) {
                updateLinesBeforeApex();
                
                if(interimDataKey == 'PSF'){
                    addModuleApexPSF(JSON.stringify(PSF_Item_MapJSON), 'PSF');
                    console.log('DisplayListing_Item_MapJSON ==' ,JSON.stringify(DisplayListing_Item_MapJSON));
                }
                else
                {
                    addModuleApexDisplay(JSON.stringify(DisplayListing_Item_MapJSON), 'Display');
                    console.log('DisplayListing_Item_MapJSON ==' ,JSON.stringify(DisplayListing_Item_MapJSON));
                    console.log('PSF_Item_MapJSON ==' ,JSON.stringify(PSF_Item_MapJSON));
                }
            }

            function DeleteModule(that ,ModuleType) {
              if(ModuleType == 'PSF')
                {
                    paraDeletePSFModule(that.id);
                }
                else
                {

                    paraDeletDisplayModule(that.id);
                }
          }

          function refreshModule(interimDataKey, ModuleType) {
                updateLinesBeforeApex();
                if(ModuleType == 'PSF'){
                  refreshModuleApexPSF(interimDataKey, JSON.stringify(PSF_Item_MapJSON), 'PSF');
                }
                else{
                    refreshModuleApexDisplay(interimDataKey, JSON.stringify(DisplayListing_Item_MapJSON), 'Display');
                }
            }

            function resetModule(interimDataKey, ModuleType) {
                updateLinesBeforeApex();
                if(ModuleType == 'PSF'){
                  resetModuleApexPSF(interimDataKey, JSON.stringify(PSF_Item_MapJSON));
                 }
                else{
                   resetModuleApexDisplay(interimDataKey, JSON.stringify(DisplayListing_Item_MapJSON));
                }
            }



            function addRow(tableId, module) {
               var table = $(tableId).DataTable();
               // Create a new line with default values
               var newData = {
                  ASI_CRM_CN_Contract__c: '{!PageId}',
                  ASI_CRM_Type__c: module.ASI_CRM_Line_Type__c,
                  ASI_CRM_Module__c: module.Id,
                  ASI_CRM_CN_Sub_Brand_Package__c: '1',
                  ASI_CRM_CN_Activity_Code__c: module.ASI_CRM_Line_Type__c === 'PSF' ? '{!PSFActivityCodeId}' : ( module.ASI_CRM_Line_Type__c === 'PSF' ? '{!DisplayActivityCodeId}' : ''),
                  RecordTypeId: '{!BRSFLineRecordTypeId}',
                  ASI_CRM_CN_Est_Total_Dummy__c: 0,
                  ASI_CRM_Line_Name__c: '',
                  ASI_CRM_CN_Min_Purchase_Target__c: 0,
                  ASI_CRM_CN_Max_Purchase_Target__c: 9999999999,
               };

               //Update newData when module type is PSF
               if(module.ASI_CRM_Line_Type__c === 'PSF' && (module.ASI_CRM_Methodology__r.Name === 'Rebate%(By Package)' || module.ASI_CRM_Methodology__r.Name === 'Rebate%(By Ladder)')){
                 if(module.ASI_CRM_Volume_Base__c === 'By Sub-Brand'){
                    let subBrand = SubBrands.find((sb) => sb.value === $(tableId).attr('subBrandId'));
                     newData.ASI_CRM_CN_Sub_Brand__c = subBrand.value;
                     newData.ASI_CRM_CN_Sub_Brand__r = subBrand.ASI_CRM_CN_Sub_Brand__r;
                     newData.ASI_CRM_Line_Name__c = subBrand.SBGrade;
                 }
                 if(module.ASI_CRM_Volume_Base__c === 'By Brand Group'){
                     newData.ASI_CRM_CN_Sub_Brand_Package__c = $(tableId).attr('subBrandId');
                 }
               }

                table.row.add(newData);
                $(tableId).DataTable().draw();
            }

            function deleteRow(rowIndex, tableId, methodology) {
                var row = $(tableId).DataTable().row(rowIndex);
                if(row.data().Id){
                    deletedLines.push(row.data());
                }
                row.remove();

                if(methodology === 'Rebate%(By Ladder)'){
                    $(tableId).DataTable().rows().every(function(rowIdx, tableLoop, rowLoop){
                        let rowData = $(tableId).DataTable().row(rowIdx).data();
                        let nextLineItem = $(tableId).DataTable().row(rowIdx + 1).data();

                        rowData.ASI_CRM_CN_Max_Purchase_Target__c = nextLineItem ? nextLineItem.ASI_CRM_CN_Min_Purchase_Target__c - 0.01 : null;
                        rowData = OnRebatePercentChange(rowIdx, rowData.ASI_CRM_CN_Rebate_Percent__c, tableId, 'Proportion');

                        $(tableId).DataTable().row(rowIdx).data(rowData);
                    });
                }


                // invalidate row so every row redraw itself => update onchange function in render()
                $(tableId).DataTable().rows().invalidate();
                $(tableId).DataTable().draw();

                if(tableId =='#BRSF_Datatable'){
                    UpdateDataForBRSFMap();
                }

            }

            function formatNumber(number){
                if(number && number.toLocaleString){
                  return number.toLocaleString('en', {minimumFractionDigits: 2, maximumFractionDigits: 2});
                }
                return number;
            }

            function htmlEncode(input) {
                var e = document.createElement('div');
                e.innerHTML = input;
                return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
            }


            function callbackSBBrand(result, event) {
              if (event.status && result) {
                    SubBrands = result.map(function(element, index){

                        return {
                        value: htmlEncode(element.Id),
                        label: htmlEncode(element.Name),
                        SBGradeId: htmlEncode(element.ASI_CRM_CN_Sub_brand_Grade__c),
                        SBGrade: htmlEncode(element.ASI_CRM_CN_Sub_brand_Grade__r.ASI_CRM_Chinese_Name__c),
                        ConversionFactor9L: htmlEncode(element.ASI_MFM_Brand__r.ASI_HK_CRM_Product_Category__r.ASI_CRM_CN_9L_Conversion_Factor__c),
                        BudgetGS: element.Actual_CM_GSs__r ? htmlEncode(element.Actual_CM_GSs__r[0].ASI_CRM_CM_GS_per_9L__c) : 1,
                        ASI_CRM_CN_Sub_Brand__r: element
                        };
                    });
              }
              initalizeAutoCompleteComponent();
            }

            function initalizeAutoCompleteComponent() {
              // SuB-Brand
              $(".SubBrandClass").autocomplete({
                 source:
                 SubBrands,
                 response: function (event, ui) {
                 },
                 minLength: 0,
                 scroll: true,
                 change: function (event, ui) {
                 },
                 select: function (event, ui) {
                 $(this).val(ui.item.label);
                 //$(this).next().next().children().val(ui.item.value);
                 //$(this).next().children().val(ui.item.SBGrade);
                 $(this).next('td').val(ui.item.SBGrade);
                    event.preventDefault();
                },
                focus: function (event, ui) {
                    event.preventDefault();
                }
            })


            // var options = ["1", "2", "3", "4", "5"];
            // var packSize = options.map(function(element, index){

            //     return {
            //         value: element
            //     };
            // });
            // $('.PackageSelectList').empty();
            // $(".PackageSelectList").autocomplete({
            //      source:
            //      options,
            //      response: function (event, ui) {
            //      },
            //      minLength: 0,
            //      scroll: true,
            //      click: function (event, ui) {
            //         $(this).val(ui.item.value);
            //          //$(this).next().next().children().val(ui.item.value);
            //          //$(this).next().children().val(ui.item.SBGrade);
            //          $(this).next('td').val(ui.item.value);
            //         event.preventDefault();
            //      },
            //      select: function (event, ui) {
                 
            //     },
            //     focus: function (event, ui) {
            //         event.preventDefault();
            //     }
            // })

        }


    </script>

    <!-- Save Function -->
    <script>
        function saveRecord(isQuickSave) {
            updateLinesBeforeApex();
            //saveRecordApex(isQuickSave, JSON.stringify(BRSF_Item_MapJSON), JSON.stringify(deletedLines || []));
            //saveRecordApex(isQuickSave, JSON.stringify(BRSF_Item_MapJSON), JSON.stringify(PSF_Item_MapJSON) ,JSON.stringify(deletedLines || []));
            saveRecordApex(isQuickSave, JSON.stringify(BRSF_Item_MapJSON), JSON.stringify(PSF_Item_MapJSON) ,JSON.stringify(DisplayListing_Item_MapJSON), JSON.stringify(deletedLines || []));
        }

        function updateLinesBeforeApex(){
                  let BRSFLines = $('#BRSF_Datatable').DataTable().data().toArray();
                  let newMap = {};
                  BRSFLines.forEach(function (line, index) {
                        if(line.ASI_CRM_CN_Sub_Brand__r && line.ASI_CRM_CN_Sub_Brand__r.Actual_CM_GSs__r){
                                delete line.ASI_CRM_CN_Sub_Brand__r.Actual_CM_GSs__r;
                        }
                        newMap[line.Id || index] = line;
                  })
                  BRSF_Item_MapJSON.DetailLineMap = newMap;

                  for(key in PSF_Item_MapJSON){
                    let PSFLines = $('#example_'+key).DataTable().data().toArray();
                    let newMap = {};
                    PSFLines.forEach(function (line, index) {
                        newMap[line.Id || index] = line;
                    })

                    PSF_Item_MapJSON[key].DetailLineMap = newMap;

                    if(PSF_Item_MapJSON[key].displayMultiTable){
                       let newMap2 = {}
                        $(`table[id^=MultiTable_${key}]`).DataTable().data().each((line, index) => {
                            if(line.ASI_CRM_CN_Sub_Brand__r && line.ASI_CRM_CN_Sub_Brand__r.Actual_CM_GSs__r){
                                delete line.ASI_CRM_CN_Sub_Brand__r.Actual_CM_GSs__r;
                            }
                            newMap2[line.Id || index] = line;
                        })
                       PSF_Item_MapJSON[key].DetailLineMap = newMap2;
                    }

                  }

                  for(key in DisplayListing_Item_MapJSON){
                    let DisplayLines = $('#Display_'+key).DataTable().data().toArray();
                    let newMap = {};
                    DisplayLines.forEach(function (line, index) {
                        newMap[line.Id || index] = line;
                    })

                    DisplayListing_Item_MapJSON[key].DetailLineMap = newMap;
                  }
        }

        function saveHeader() {
            ApexSaveHeader();
        }

    </script>
<div class="bs">
  <div class="container-fluid" >
      <apex:outputPanel id="pageMsg">
          <div class="bs row  ">
              <div class="alert alert-danger " style="{!IF(UpsertPermission,'display:none;','')}" id="SaveFailPart">
                  <div>
                      <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                      <strong>Error!</strong><br/>
                      <apex:outputText escape="false" value="{!msg}"/>
                  </div>
              </div>

              <div class="alert alert-warning fade in" style="{!IF(WarningTimes==1,'','display:none;')}" id="SaveFailPart2">
                  <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                  <strong>Warning!</strong><br/>
                  <apex:outputText escape="false" value="{!WarningMsg}"/>
              </div>
          </div>
      </apex:outputPanel>

    <apex:form id="EditContractHeaderPageId" rendered="{!IsView || IsHeaderEdit || IsPOModiPage}">

    <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;" >
                    <div style="grid-column-start: 1; grid-column-end: 1;" >
                        <div style="font-weight: bold; font-family: Arial,Helvetica,sans-serif; color: #000; font-size: 1.3em; margin: 0.5em;">
                            {!$ObjectType.ASI_TH_CRM_Contract__c.Label}
                        </div>
                    </div>
                    <div style="grid-column-start: 2; grid-column-end: 2;  margin-top: 0.2cm; margin-bottom: 0.2cm; float: left;" >
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_HK_CRM_VF_COMMON_BTN_Edit}" action="{!GoEditHeader}" rendered="{!!IsHeaderEdit && ContractSelected.ASI_CRM_CN_Status__c == 'Draft'}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_Contract_Shuttle}" onclick="window.open('/apex/ASI_CRM_CN_PromotionPDFRedirectPage?id={!ASI_TH_CRM_Contract__c.id}&Type=PDF')"
                                             rendered="{!!IsHeaderEdit && ContractSelected.ASI_CRM_CN_PO_Version__c=='0.0' && LOWER(ASI_TH_CRM_Contract__c.ASI_CRM_CN_Status__c) != 'fy landing archive'}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_Modification} (PDF) " onclick="window.open('/apex/ASI_CRM_CN_PromotionPDFRedirectPage?id={!ASI_TH_CRM_Contract__c.id}&Type=POModificationPDF')"
                                             rendered="{!ContractSelected.ASI_CRM_CN_PO_Version__c != '0.0' && LOWER(ASI_TH_CRM_Contract__c.ASI_CRM_CN_Status__c) != 'fy landing archive'  && !isGroupPo}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="销量报告" style="{!IF(IsHeaderEdit || isGroupPO,'display:none;','')}"
                                             rendered="{!!IsHeaderEdit && !isGroupPO && (((ContractSelected.ASI_CRM_CN_Status__c == 'Final'|| ContractSelected.ASI_CRM_CN_Status__c =='Submitted') && ContractSelected.ASI_CRM_CN_PO_Version__c == '0.0') || ContractSelected.ASI_CRM_CN_PO_Version__c != '0.0')}"
                                             onclick="window.open('/apex/ASI_CRM_CN_PromotionVolumeReportPage?id={!ASI_TH_CRM_Contract__c.id}')"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_VF_BTN_Submit_Approval}" action="{!GoCheckPointPage}" style="{!IF(IsHeaderEdit,'display:none;','')}"
                                             rendered="{!ContractSelected.ASI_CRM_CN_Status__c == 'Draft'}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_Restore_Previous_Version}" action="{!restorePO}"
                                            rendered="{!if(showRestorePO,true,false) && LOWER(ASI_TH_CRM_Contract__c.ASI_CRM_CN_Status__c) != 'fy landing archive' && !isGroupPo}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_View} {!$Label.ASI_CRM_CN_Check_Point}" action="{!ViewCheckPointPage}" style="{!IF(IsHeaderEdit,'display:none;','')}"
                                             rendered="{!ContractSelected.ASI_CRM_CN_Status__c != 'Draft'}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_Modification}" action="{!POModification}" style="{!IF(IsHeaderEdit,'display:none;','')}"
                                             rendered="{!ContractSelected.ASI_CRM_CN_Status__c == 'Final' && !ContractSelected.ASI_CRM_CN_Is_Block__c}"/>
                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_Make_Payment}" action="{!GoPayment }" style="{!IF(IsHeaderEdit,'display:none;','')}"
                                             rendered="{!ContractSelected.ASI_CRM_CN_Status__c == 'Final' && !ContractSelected.ASI_CRM_CN_Is_Block__c}"/>

                         <apex:commandButton styleClass="BSCommandButton" value="{!$Label.ASI_CRM_CN_Contract_Return}" action="{!GoReturn}"
                                            rendered="{!!isGroupPo && showReturn}"/>
                    </div>
    </div>

<!--    <apex:outputPanel id="pageMsg">-->
<!--            <div class="bs row  ">-->
<!--                <div class="alert alert-danger " style="{!IF(UpsertPermission,'display:none;','')}" id="SaveFailPart">-->
<!--                    <div>-->
<!--                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>-->
<!--                        <strong>Error!</strong><br/>-->
<!--                        <apex:outputText escape="false" value="{!msg}"/>-->
<!--                    </div>-->
<!--                </div>-->

<!--                <div class="alert alert-warning fade in" style="{!IF(WarningTimes==1,'','display:none;')}" id="SaveFailPart2">-->
<!--                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>-->
<!--                    <strong>Warning!</strong><br/>-->
<!--                    <apex:outputText escape="false" value="{!WarningMsg}"/>-->
<!--                </div>-->
<!--            </div>-->
<!--     </apex:outputPanel>-->

    <!--　Header Information　-->

        <div class="row">
            <div class="panel panel-primary">
                <div class="panel-heading">
                        {!$Label.ASI_CRM_CN_VF_LABEL_Header_Info}
                </div>
                <div class="panel-body" style="padding: 0.5em">

                    <!--<div class="bs table-responsive">-->
                        <table class="bs table table-condensed  header-detail-table"
                               style="margin-bottom: 0;">
                            <tr>
                                <td style="width: 20%">
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_PO_No__c.Label}" />
                                </td>
                                <td style="width: 25% ">
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_PO_No__c}" />
                                </td>
                                <td style="width: 15% ">
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_PO_Start_Date__c.Label}" />
                                </td>
                                <td style="width: 40% ">
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_PO_Start_Date__c}"
                                                     styleClass="ApexInputField requiredField"
                                                     rendered="{!(IsHeaderEdit && !isPOModi) ||IsPOModiPage}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_PO_Start_Date__c}"  rendered="{!!IsHeaderEdit||(isPOModi && !IsPOModiPage)}" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_PO_Version__c.Label}" rendered="{!!isGroupPo}"/>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_Active_Dummy_PO__c.Label}" rendered="{!isGroupPo}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_PO_Version__c}" rendered="{!!isGroupPo}"/>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_Active_Dummy_PO__c}" rendered="{!IsHeaderEdit && isGroupPo}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_Active_Dummy_PO__c}" rendered="{!!IsHeaderEdit && isGroupPo}" />
                                </td>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_PO_End_Date__c.Label}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_PO_End_Date__c}"
                                                     styleClass="ApexInputField requiredField"
                                                     rendered="{!(IsHeaderEdit && !isPOModi) ||IsPOModiPage}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_PO_End_Date__c}" rendered="{!!IsHeaderEdit||(isPOModi && !IsPOModiPage)}" />
                                </td>
                            </tr>
                            <tr>
                                <td ><apex:outputText value="{!$Label.ASI_CRM_CN_Outlet_WS}" /></td>
                                <td ><apex:outputField value="{!ContractSelected.ASI_CRM_CN_Outlet_WS__c}" /></td>
                                <td ><apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Status__c.Label}" />
                                </td>
                                <td ><apex:outputField value="{!ContractSelected.ASI_CRM_CN_Status__c}" /></td>
                            </tr>
                            <!-- <tr>
                                <td><apex:outputText value="{!$Label.ASI_CRM_CN_PO_Type}" /></td>
                                <td><apex:outputField value="{!ContractSelected.ASI_TH_CRM_Promotion_Type__c}" /></td>
                                <td><apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Description__c.Label}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Description__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isPOModi}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Description__c}" rendered="{!!IsHeaderEdit||IsPOModiPage||isPOModi}" />
                                </td>
                            </tr> -->
                            <tr>
                                <td><apex:outputText value="{!$Label.ASI_CRM_CN_PO_Type}" /></td>
                                <td><apex:outputField value="{!ContractSelected.ASI_TH_CRM_Promotion_Type__c}" /></td>
                                <td><apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Description__c.Label}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Description__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Description__c}" rendered="{!!IsHeaderEdit}" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_PO_Channel__c.Label}" />
                                </td>
                                <td>
                                    <!--<apex:inputfield value="{!ContractSelected.ASI_CRM_PO_Channel__c}"
                                                     styleClass="form-control input-sm"
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage}" />-->
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_PO_Channel__c}" />
                                </td>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Festival_Season__c.Label}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Festival_Season__c}"
                                                     styleClass="requiredField"
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isPOModi}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Festival_Season__c}" rendered="{!!IsHeaderEdit||IsPOModiPage||isPOModi}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Data_Source__c.Label}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Data_Source__c}"
                                                     styleClass="requiredField"
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isPOModi}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Data_Source__c}" rendered="{!!IsHeaderEdit||IsPOModiPage||isPOModi}"/>
                                </td>
                                <!-- <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_Remarks__c.Label}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_TH_CRM_Others__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage}" />
                                    <apex:outputField value="{!ContractSelected.ASI_TH_CRM_Others__c}" rendered="{!!IsHeaderEdit||IsPOModiPage}"/>
                                </td> -->
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_PO_Division__c.Label}" rendered="{!!isGroupPo}"/>
                                    <apex:outputText value="Created by" rendered="{!isGroupPo}"/>
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_PO_Division__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isGroupPo && !isPOModi}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_PO_Division__c}" rendered="{!(!IsHeaderEdit||IsPOModiPage||isPOModi)&&!isGroupPo}"/>
                                    <apex:outputField value="{!ContractSelected.CreatedById}" rendered="{!isGroupPo}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Group_Contract__c.Label}" rendered="{!isGroupPo}"/>
                                    <apex:outputText value="所有人" rendered="{!!isGroupPo}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Group_Contract__c}" rendered="{!isGroupPo}"/>
                                    <apex:outputField value="{!ContractSelected.OwnerId}" rendered="{!!isGroupPo}"/>
                                </td>
                                <td>
                                    <!-- <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_PO_Division__c.Label}" rendered="{!!isGroupPo}"/> -->
                                    <!-- <apex:outputText value="Created by" rendered="{!isGroupPo}"/> -->
                                </td>
                                <td>
                                    <!-- <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_PO_Division__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isGroupPo && !isPOModi}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_PO_Division__c}" rendered="{!(!IsHeaderEdit||IsPOModiPage||isPOModi)&&!isGroupPo}"/>
                                    <apex:outputField value="{!ContractSelected.CreatedById}" rendered="{!isGroupPo}"/> -->
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Vol_Budget_LE__c.Label}" rendered="{!!isGroupPo}"/>
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Vol_Budget_LE__c}"
                                                     styleClass="NumInputField"
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isGroupPo}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Vol_Budget_LE__c}" rendered="{!!IsHeaderEdit||IsPOModiPage &&!isGroupPo}"/>
                                </td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Budget_LE__c.Label}" rendered="{!!isGroupPo}" />
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Budget_LE__c}"
                                                     styleClass="ApexInputField"
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isGroupPo}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Budget_LE__c}" rendered="{!!IsHeaderEdit||IsPOModiPage &&!isGroupPo}"/>
                                </td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr>
                                <td><apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Reason_without_Budget__c.Label}" rendered="{!!isGroupPo}"/>
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Reason_without_Budget__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit && !IsPOModiPage && !isGroupPo}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Reason_without_Budget__c}" rendered="{!!IsHeaderEdit||IsPOModiPage &&!isGroupPo}"/>
                                </td>
                                <td></td>
                                <td><apex:inputField style="display: none;" value="{!ContractSelected.ASI_TH_CRM_Promotion_Type__c}" rendered="{!IsHeaderEdit && !IsPOModiPage}" html-disabled="true"/></td>
                                <!-- <td><apex:outputText value="{!$ObjectType.ASI_TH_CRM_Contract__c.Fields.ASI_CRM_CN_Reason_without_Budget__c.Label}" rendered="{!!isGroupPo}"/>
                                </td>
                                <td>
                                    <apex:inputfield value="{!ContractSelected.ASI_CRM_CN_Reason_without_Budget__c}"
                                                     styleClass=""
                                                     rendered="{!IsHeaderEdit && !isGroupPo}" />
                                    <apex:outputField value="{!ContractSelected.ASI_CRM_CN_Reason_without_Budget__c}" rendered="{!!IsHeaderEdit && !isGroupPo}"/>
                                </td>
                                <td></td>
                                <td><apex:inputField style="display: none;" value="{!ContractSelected.ASI_TH_CRM_Promotion_Type__c}" rendered="{!IsHeaderEdit}" html-disabled="true"/></td> -->
                            </tr>
                        </table>
                    <!--</div>-->
                </div>
            </div>
        </div>



    <div class="row">
        <div class="col-md-offset-4">
            <apex:actionFunction name="ApexSaveHeader" action="{!saveHeader}" reRender="pageMsg" status="ActionStatus"/>
            <input type="button" class="btn BSCommandButton" onclick="saveHeader()"  style="{!IF(!IsHeaderEdit &&!IsPOModiPage ,'display:none;','')}" value="{!$Label.ASI_CRM_CN_IOM_Save}" />
            <apex:commandButton styleClass="BSCommandButton" action="{!GoView}" rendered="{!IsHeaderEdit||IsPOModiPage}"  value="{!$Label.ASI_CRM_CN_IOM_Cancel}"  />
            <apex:commandButton styleClass="BSCommandButton"
                                rendered="{!isView && ContractSelected.ASI_CRM_CN_Status__c == 'Draft'}"
                                action="{!GoEditDetail}"
                                value="{!$Label.ASI_CRM_CN_Edit_Contract_Details}"
                                  />
            <apex:commandButton styleClass="BSCommandButton"
                                rendered="{!isView && ContractSelected.ASI_CRM_CN_Status__c == 'Draft' && (ContractSelected.ASI_TH_CRM_Promotion_Type__c != 'Wholesaler Promotion' || (ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Wholesaler Promotion' && (ContractSelected.ASI_CRM_CN_Data_Source__c =='Outlet Intake' || ContractSelected.ASI_CRM_CN_Data_Source__c =='Min(WS Intake, Outlet Intake)'))) }"
                                value="{!$Label.ASI_CRM_CN_Upload_Covered_Outlet}" action="{!GoCoveredUploadPage}"
                                  />

            <apex:commandButton styleClass="BSCommandButton"
                                rendered="{!isView && ContractSelected.ASI_CRM_CN_Status__c == 'Draft' && ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Wholesaler Promotion'}"
                                value="{!$Label.ASI_CRM_CN_Upload_Button}{!$Label.ASI_CRM_CN_Covered_WS}" action="{!GoWSUploadPage}"
                                  />
       </div>
    </div>

    </apex:form>
    <apex:form id="EditContractDetailPageId" rendered="{!!IsHeaderEdit}">

    <div class="row" style="display: inline-block; width: 100%;">
            <div class="col-md-offset-3 col-md-9">
                <apex:actionFunction name="saveRecordApex" action="{!saveItems}" reRender="pageMsg" status="ActionStatus">
                    <apex:param name="isQuickSave" value="" />
                    <apex:param name="BRSF_Item_MapJSON" value="" />
                    <apex:param name="PSF_Item_MapJSON" value="" />
                    <apex:param name="DisplayListing_Item_MapJSON" value="" />
                    <apex:param name="deletedLinesJSON" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="UpdateBRSFMap" action="{!UpdateBRSFItemMap}" reRender="pageMsg" status="ActionStatus">
                    <apex:param name="BRSF_Item_MapJSON" value="" />
                </apex:actionFunction>
                <input type="button" class="btn BSCommandButton" onclick="saveRecord(false)"  style="{!IF(!IsDetailEdit,'display:none;','')}" value="{!$Label.ASI_CRM_CN_IOM_Save}" />
                <input type="button" class="btn BSCommandButton" onclick="saveRecord(true)" style="{!IF(!IsDetailEdit,'display:none;','')}" value="{!$Label.ASI_CRM_CN_Quick_Save}" />
                <apex:commandButton styleClass="BSCommandButton" action="{!GoView}" rendered="{!IsDetailEdit}" value="{!$Label.ASI_CRM_CN_IOM_Cancel}"  />
            </div>
    </div>

<!--    <apex:outputPanel id="pageMsg">-->
<!--                    <div class="bs row  ">-->
<!--                        <div class="alert alert-danger " style="{!IF(UpsertPermission,'display:none;','')}" id="SaveFailPart">-->
<!--                            <div>-->
<!--                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>-->
<!--                                <strong>Error!</strong><br/>-->
<!--                                <apex:outputText escape="false" value="{!msg}"/>-->
<!--                            </div>-->
<!--                        </div>-->

<!--                        <div class="alert alert-warning fade in" style="{!IF(WarningTimes==1,'','display:none;')}" id="SaveFailPart2">-->
<!--                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>-->
<!--                            <strong>Warning!</strong><br/>-->
<!--                            <apex:outputText escape="false" value="{!WarningMsg}"/>-->
<!--                        </div>-->
<!--                    </div>-->
<!--    </apex:outputPanel>-->


    <!----------BRSF Promotion Target--------->
    <div class="row">
    <div class="panel panel-primary">
           <div class="panel-heading">
               促销销量目标
           </div>
        <button type="button" class="accordion"></button>
       <div class="panel-body" style="padding: 0.5em">
       <table class="bs table table-condensed module-header-table">
                            <tr>
                                <td>
                                    加价率
                                </td>
                                <td>
                                    <apex:outputPanel rendered="{!IsDetailEdit && BRSF_Item_Map.isCreatedInCurrentVersion}">
                                        <div class="input-group">
                                            <apex:inputfield value="{!BRSF_Item_Map.Module.ASI_CRM_CN_Total_Markup__c}" styleClass="form-control input-sm" id="BRSFMarkUp"
                                                             onChange="CalAllOutletPurchase('#BRSF_Datatable', this.value)">
                                            </apex:inputField>
                                            <span class="input-group-addon">%</span>
                                        </div>
                                    </apex:outputPanel>
                                    <apex:outputText rendered="{!!IsDetailEdit || !BRSF_Item_Map.isCreatedInCurrentVersion}" value="{!BRSF_Item_Map.Module.ASI_CRM_CN_Total_Markup__c}%" />
                                </td>
                                <td>
                                </td>
                                <td>
                                </td>

                            </tr>
        </table>

        <table id="BRSF_Datatable" class="bs table table-condensed data-table">
            <tfoot>
                <tr></tr>
            </tfoot>
        </table>
        <script>
          redrawTable('#BRSF_Datatable', 'BRSF');
        </script>
       </div>
     </div>
     </div>


        
    <!----------PSF Price Promotion--------->

    <apex:outputPanel id="PSFPanel" rendered="{!showPSF}">
        <div class="row" style="padding-top: 1em;">
            <!-- PSF actionFunction -->
            <apex:actionFunction name="paraDeletePSFModule" action="{!DeletePSFModule}" rerender="PSFPanel" status="ActionStatus">
                <apex:param name="PARAMID" value=""/>
            </apex:actionFunction>
            <apex:actionFunction name="addModuleApexPSF" action="{!PSFAddModule}" rerender="PSFPanel,dataFactory,pageMsg" status="ActionStatus">
                <apex:param name="PSF_Item_MapJSON" value="" />
                <apex:param name="ModuleType" value="" />
            </apex:actionFunction>

            <apex:actionFunction name="refreshModuleApexPSF" action="{!refreshModule}" rerender="PSFPanel,dataFactory" status="ActionStatus">
                <apex:param name="PARAM_Line_ID" value=""/>
                <apex:param name="Item_MapJSON" value="" />
                <apex:param name="ModuleType" value="" />
            </apex:actionFunction>
            <apex:actionFunction name="resetModuleApexPSF" action="{!resetModule}" rerender="PSFPanel,dataFactory" status="ActionStatus">
                <apex:param name="PARAM_Line_ID" value=""/>
                <apex:param name="PSF_Item_MapJSON" value="" />
            </apex:actionFunction>
            <div style="display: inline-block; width: 100%;">
                <div class="HeaderCss col-md-3">
                    促销奖励
                </div>
                <div>
                    <input type="button" class="btn BSCommandButton" style="{!IF(!IsDetailEdit,'display:none;','')}" onclick="addModule('PSF')" value="{!$Label.ASI_CRM_CN_Add_New_Module}"/>
                </div>
            </div>

            <div class="PanelBody">
                <apex:variable value="{!0}" var="i" />
                <apex:repeat value="{!PSF_Item_Map}" var="itm" id="PSFitem">
                    <apex:variable var="i" value="{!i+1}"/>
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            {!$Label.ASI_CRM_CN_Module}-{!i} <span id="{!itm}"
                                                               class="pull-right clickable" data-effect="fadeOut"
                                                               style="{!IF((isPOModi && !PSF_Item_Map[itm].isCreatedInCurrentVersion)||IsView||PSF_Item_Map[itm].Module.ASI_CRM_Group_Contract__c,'display:none;','')}"
                                                               onclick="DeleteModule(this, 'PSF');"
                                                                > <i class="fa fa-times"></i></span>
                        </div>
                        <div class="panel-body">
                            <apex:outputPanel id="PSFModuleTable">
                                <table class="bs table table-condensed module-header-table">
                                    <tr>
                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Methodology__c.Label}</td>
                                        <td>
                                            <apex:selectList id="PSFMethodologyInput"
                                                             value="{!PSF_Item_Map[itm].Module.ASI_CRM_Methodology__c}"
                                                             styleClass="form-control input-sm" size="1"
                                                             rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion && !PSF_Item_Map[itm].moduleReadOnly}">

                                                <apex:selectOptions value="{!PSF_Item_Map[itm].MethodologyPicklist}"/>
                                                <apex:actionSupport action="{!onPSFMethodologyChange}"
                                                                    status="ActionStatus" event="onchange"
                                                                    rerender="PSFVolValBaseInput,PSFUnit,PSFModuleTable">
                                                    <apex:param value="{!itm}" name="itemKey"/>

                                                </apex:actionSupport>

                                            </apex:selectList>
                                        <apex:outputText value="{!PSF_Item_Map[itm].MethodologyDisplay}"
                                                         rendered="{!!PSF_Item_Map[itm].isCreatedInCurrentVersion || PSF_Item_Map[itm].moduleReadOnly}"/>
                                        </td>
                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Volume_Base__c.Label}</td>
                                        <td>
                                            <apex:selectList id="PSFVolValBaseInput"
                                                             value="{!PSF_Item_Map[itm].Module.ASI_CRM_Volume_Base__c}"
                                                             styleClass="form-control input-sm" size="1"
                                                             rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion  && !PSF_Item_Map[itm].moduleReadOnly}">
                                                <apex:selectOptions value="{!PSF_Item_Map[itm].VolumeValueBasePickList}"/>
                                                <apex:actionSupport action="{!onPSFVolumeBaseChange}"
                                                                    event="onchange" rerender="PSFUnit">
                                                    <apex:param value="{!itm}" name="itemKey"/>

                                                </apex:actionSupport>
                                            </apex:selectList>
                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_Volume_Base__c}"
                                                          rendered="{!!PSF_Item_Map[itm].isCreatedInCurrentVersion || PSF_Item_Map[itm].moduleReadOnly}"/>

                                        </td>
                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Unit__c.Label}</td>
                                        <td>
                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_Unit__c}"
                                                              id="PSFUnit"/>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <apex:outputPanel rendered="{!(PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name=='Rebate%' || PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name=='Rebate%(By Ladder)') && ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Wholesaler Promotion'}">
                                            {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Proportion__c.Label}
                                            </apex:outputPanel>
                                        </td>
                                        <td>
                                            <apex:outputPanel rendered="{!(PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name=='Rebate%' || PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name=='Rebate%(By Ladder)') && ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Wholesaler Promotion'}">
                                                <apex:outputPanel rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion && IsDetailEdit && PSF_Item_Map[itm].Module.ASI_CRM_CN_Only_for_Strategy_WS__c}">
                                                    <div class="input-group">
                                                        <apex:inputfield value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Proportion__c}"
                                                                         onChange="ModuleProportionChange('{!itm}',this.value)"
                                                                         styleClass="form-control input-sm"/>
                                                        <span class="input-group-addon">%</span>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputText value="{0, number, 0}%" rendered="{!(!PSF_Item_Map[itm].isCreatedInCurrentVersion || !IsDetailEdit) && PSF_Item_Map[itm].Module.ASI_CRM_CN_Only_for_Strategy_WS__c}">
                                                    <apex:param value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Proportion__c}"/>
                                                </apex:outputText>
                                            </apex:outputPanel>
                                        </td>
                                        <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Remark__c.Label}</td>
                                        <td>
                                            <apex:inputfield value="{!PSF_Item_Map[itm].Module.ASI_CRM_Remark__c}"
                                                             styleClass="form-control input-sm"
                                                             rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion && IsDetailEdit}"/>
                                            <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_Remark__c}" rendered="{!!PSF_Item_Map[itm].isCreatedInCurrentVersion || !IsDetailEdit}"/>
                                        </td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <apex:outputPanel layout="none" rendered="{!(PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name=='Rebate%' || PSF_Item_Map[itm].Module.ASI_CRM_Methodology__r.Name=='Rebate%(By Ladder)') && ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Wholesaler Promotion'}">
                                        <tr>
                                            <td>
                                                {!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_CN_Only_for_Strategy_WS__c.Label}
                                            </td>
                                            <td colspan="5">
                                                <apex:inputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Only_for_Strategy_WS__c}"
                                                                 rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion  && IsDetailEdit}">
                                                    <apex:actionSupport id="StrategyWSChange" event="onclick" reRender="PSFModuleTable" status="ActionStatus"/>
                                                </apex:inputField>
                                                <apex:outputField value="{!PSF_Item_Map[itm].Module.ASI_CRM_CN_Only_for_Strategy_WS__c}"
                                                                  rendered="{!!PSF_Item_Map[itm].isCreatedInCurrentVersion || !IsDetailEdit}"/>
                                            </td>
                                        </tr>
                                    </apex:outputPanel>
                                </table>

                            </apex:outputPanel>


                            <!-- refresh buttons -->
                            <apex:outputPanel rendered="{!PSF_Item_Map[itm].isCreatedInCurrentVersion}">
                                <div class="bs text-center">
                                    <input type="button" class="btn BSCommandButton" style="{!IF(!IsDetailEdit || PSF_Item_Map[itm].Module.ASI_CRM_Group_Contract__c,'display:none;','')}" onclick="refreshModule('{!itm}', 'PSF')" value="{!$Label.ASI_CRM_CN_Refresh}"/>
                                    <input type="button" class="btn BSCommandButton" style="{!IF(!IsDetailEdit || PSF_Item_Map[itm].Module.ASI_CRM_Group_Contract__c,'display:none;','')}" onclick="resetModule('{!itm}', 'PSF')" value="{!$Label.ASI_CRM_CN_Reset}"/>
                                </div>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!PSF_Item_Map[itm].showLineItems}">

                                <apex:outputPanel rendered="{!!PSF_Item_Map[itm].displayMultiTable}">

                                    <table id="example_{!itm}" LadderAmt="{!PSF_Item_Map[itm].PSFLadderAmountMap['Total']}"
                                           class="bs table table-condensed data-table">
                                        <tfoot>
                                        <tr></tr>
                                        </tfoot>
                                    </table>

                                </apex:outputPanel>


                                <apex:repeat value="{!PSF_Item_Map[itm].PSFMultiTableMap}" var="key" id="PSFitem" rendered="{!PSF_Item_Map[itm].displayMultiTable}">
                                    <div class="multitable-header" style="display: grid; padding-top:0.5cm;">
                                        <apex:outputText rendered="{!PSF_Item_Map[itm].Module.ASI_CRM_Volume_Base__c == 'By Brand Group'}" value="产品组合{!key}: "/>
                                        {!PSF_Item_Map[itm].PSFMultiTableMap[key]}
                                    </div>
                                    <table id="MultiTable_{!itm}_{!key}" class="bs table table-condensed data-table" subBrandId="{!key}" data-brandGroup="" LadderAmt="{!PSF_Item_Map[itm].PSFLadderAmountMap[key]}">
                                        <tfoot>
                                        <tr></tr>
                                        </tfoot>
                                    </table>
                                </apex:repeat>

                            </apex:outputPanel>
                        </div>
                    </div>

                </apex:repeat>
                <script>
                    var PSF_Item_MapJSON = {!PSF_Item_MapJSON};
                    console.log('PSF_Item_MapJSON PSF' ,PSF_Item_MapJSON);
                    for (var key in PSF_Item_MapJSON) {
                         var tableId = '#example_'+ key;
                         redrawTable(tableId, 'PSF');

                         if(PSF_Item_MapJSON[key].displayMultiTable){
                            for (var MultiTableKey in PSF_Item_MapJSON[key].PSFMultiTableMap){
                                var tableId = '#MultiTable_'+ key + '_' + MultiTableKey;
                                redrawTable(tableId, 'PSF');
                            }
                         }

                    }


                </script>

                <!--PSF Summary total-->
                <div style="{!IF(isPOModi,'','display:none; ')} ">
                    <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto; padding-top:0.5em;">
                        <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;font-weight: bold;" title="Adjustment and Grand Total">
                            <apex:outputText escape="false" value="促销奖励汇总"/>
                        </div>
                    </div>
                    <div class="PanelBody" style="width:70%">
                        <table class="bs table table-condensed" style="margin-bottom: 0; width:100%">
                            <tr>
                                <td class="PSFAdjLabel" title="V0.0 PSF Est. Total">
                                    <apex:outputText value="V0.0 费用总金额"/>
                                </td>
                                <td style="padding-top: 0.4em; ">
                                    <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                        <apex:param value="{!ContractSelected.ASI_CRM_Expected_V0_PSF_Estimated_Total__c}"/>
                                    </apex:outputText>
                                </td>
                                <td class="PSFAdjLabel" style="width:50%"></td>
                                <td></td>
                            </tr>

                            <tr>
                                <td class="PSFAdjLabel">
                                    <apex:outputText value="上一版本费用总金额"/>
                                </td>
                                <td id="PSFGrandEstimateTotalBeforeAdjustmentId">
                                    <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                        <apex:param value="{!ContractSelected.ASI_CRM_Previous_Version_PSF_Est_Total__c}"/>
                                    </apex:outputText>
                                </td>
                                <td></td>
                                <td></td>
                            </tr>


                            <tr>
                                <td class="PSFAdjLabel" title="Adjustment">
                                    <apex:outputText escape="false" value="调整%"/>
                                </td>
                                <td id="PSFAdjustmentAmountId">
                                    <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                        <apex:param value="{!ContractSelected.ASI_CRM_PSF_Estimate_Adjustment_Amount__c}"/>
                                    </apex:outputText>
                                </td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr>
                                <td class="PSFAdjLabel" title="Expected PSF Est. Total">
                                    <apex:outputText value="本版本预计费用总金额"/>
                                </td>
                                <td id="ExpectedPSFEstimatedTotal">
                                    <apex:inputField value="{!ContractSelected.ASI_CRM_CN_Expected_PSF_Est_Total__c}" styleClass="form-control input-sm"
                                                     onchange="GrandEstimateTotal(this.value, 'PSFGrandEstimateTotalBeforeAdjustmentId', 'PSFAdjustmentAmountId');"
                                                     rendered="{!IsDetailEdit}"/>
                                    <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                        <apex:param value="{!ContractSelected.ASI_CRM_CN_Expected_PSF_Est_Total__c}"/>
                                    </apex:outputText>
                                </td>
                                <td></td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </apex:outputPanel>

 <!--------------------------Free Goods/GWP---------------------------------------------->
    
     <apex:outputPanel id="DisplayPanel" rendered="{!ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Consumer Promotion' && showDisplay}">
         <apex:actionFunction name="paraDeletDisplayModule" action="{!DeletePSFModule}" rerender="DisplayPanel,PSFPanel" status="ActionStatus">
                    <apex:param name="PARAMID" value=""/>
                </apex:actionFunction>
                <apex:actionFunction name="addModuleApexDisplay" action="{!PSFAddModule}" rerender="DisplayPanel,dataFactory,pageMsg" status="ActionStatus">
                    <apex:param name="PSF_Item_MapJSON" value="" />
                    <apex:param name="ModuleType" value="" />
                </apex:actionFunction>

                <apex:actionFunction name="refreshModuleApexDisplay" action="{!refreshModule}" rerender="DisplayPanel,dataFactory" status="ActionStatus">
                    <apex:param name="PARAM_Line_ID" value=""/>
                    <apex:param name="Item_MapJSON" value="" />
                    <apex:param name="ModuleType" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="resetModuleApexDisplay" action="{!resetModule}" rerender="DisplayPanel,dataFactory" status="ActionStatus">
                    <apex:param name="PARAM_Line_ID" value=""/>
                    <apex:param name="PSF_Item_MapJSON" value="" />
                </apex:actionFunction>
                    <div class="row" style="padding-top: 1em;">
                        <!-- Free Goods/GWP actionFunction -->

                        <div
                            style="display: grid; grid-template-columns: 20% 80%; grid-template-rows: auto;">
                            <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;">
                                礼品及赠酒费用
                            </div>
                            <div style="grid-column-start: 2; grid-column-end: 2;">
                                <div style="margin-left: 5em;">
                                    <input type="button" class="btn BSCommandButton"
                                        style="{!IF(!IsDetailEdit,'display:none;','')}"
                                        onclick="addModule('Display')"
                                        value="{!$Label.ASI_CRM_CN_Add_New_Module}" />
                                </div>
                            </div>
                        </div>
                        <div class="PanelBody">
                            <apex:variable value="{!0}" var="i" />
                            <apex:repeat value="{!DisplayListingItemMap}" var="itm" id="Displayitem">
                                <apex:variable var="i" value="{!i+1}" />
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        {!$Label.ASI_CRM_CN_Module}-{!i} 
                                            <span id="{!itm}" 
                                                class="pull-right clickable" data-effect="fadeOut" style="{!IF((isPOModi && !DisplayListingItemMap[itm].isCreatedInCurrentVersion)||IsView||DisplayListingItemMap[itm].Module.ASI_CRM_Group_Contract__c,'display:none;','')}"
                                                onclick="DeleteModule(this);"
                                                > <i class="fa fa-times"></i></span>

                                            
                                    </div>
                                    <div class="panel-body">
                                        <apex:outputPanel id="DisplayModuleTable">
                                            <table class="bs table table-condensed module-header-table">
                                                <tr>
                                                    <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Methodology__c.Label}</td>
                                                    <td><apex:selectList id="PSFMethodologyInput"
                                                            value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Methodology__c}"
                                                            styleClass="form-control input-sm" size="1"
                                                            rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion && !DisplayListingItemMap[itm].moduleReadOnly}">

                                                            <apex:selectOptions value="{!DisplayListingItemMap[itm].MethodologyPicklist}" />
                                                            <apex:actionSupport action="{!onDisplayMethodologyChange}"
                                                                status="ActionStatus" event="onchange"
                                                                rerender="PSFVolValBaseInput,PSFUnit,PSFModuleTable">
                                                                <apex:param value="{!itm}" name="itemKey" />

                                                            </apex:actionSupport>

                                                        </apex:selectList> <apex:outputText value="{!DisplayListingItemMap[itm].MethodologyDisplay}"
                                                            rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion || DisplayListingItemMap[itm].moduleReadOnly}" />
                                                    </td>
                                                    <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Volume_Base__c.Label}</td>
                                                    <td><apex:selectList id="PSFVolValBaseInput"
                                                            value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Volume_Base__c}"
                                                            styleClass="form-control input-sm" size="1"
                                                            rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion  && !DisplayListingItemMap[itm].moduleReadOnly}">
                                                            <apex:selectOptions value="{!DisplayListingItemMap[itm].VolumeValueBasePickList}" />
                                                            <apex:actionSupport action="{!onPSFVolumeBaseChange}"
                                                                event="onchange" rerender="PSFUnit">
                                                                <apex:param value="{!itm}" name="itemKey" />

                                                            </apex:actionSupport>
                                                        </apex:selectList> <apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Volume_Base__c}"
                                                            rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion || DisplayListingItemMap[itm].moduleReadOnly}" />

                                                    </td>
                                                    <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Unit__c.Label}</td>
                                                    <td><apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Unit__c}"
                                                            id="PSFUnit" /></td>
                                                </tr>
                                                <tr>
                                                    <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Remark__c.Label}</td>
                                                    <td><apex:inputfield value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Remark__c}"
                                                            styleClass="form-control input-sm"
                                                            rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion && IsDetailEdit}" />
                                                        <apex:outputField value="{!DisplayListingItemMap[itm].Module.ASI_CRM_Remark__c}"
                                                            rendered="{!!DisplayListingItemMap[itm].isCreatedInCurrentVersion || !IsDetailEdit}" />
                                                    </td>

                                                </tr>
                                            </table>

                                        </apex:outputPanel>


                                        <!-- refresh buttons -->
                                        <apex:outputPanel rendered="{!DisplayListingItemMap[itm].isCreatedInCurrentVersion}">
                                            <div class="bs text-center">
                                                <input type="button" class="btn BSCommandButton"
                                                    style="{!IF(!IsDetailEdit || DisplayListingItemMap[itm].Module.ASI_CRM_Group_Contract__c||DisplayListingItemMap[itm].Module.ASI_CRM_Group_Contract__c,'display: none;','')}"
                                                    onclick="refreshModule('{!itm}', 'Display')"
                                                    value="{!$Label.ASI_CRM_CN_Refresh}" />
                                                <input
                                                    type="button" class="btn BSCommandButton"
                                                    style="{!IF(!IsDetailEdit || DisplayListingItemMap[itm].Module.ASI_CRM_Group_Contract__c||DisplayListingItemMap[itm].Module.ASI_CRM_Group_Contract__c,'display: none;','')}"
                                                    onclick="resetModule('{!itm}', 'Display')"
                                                    value="{!$Label.ASI_CRM_CN_Reset}" />
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!DisplayListingItemMap[itm].showLineItems}">

                                                <table id="Display_{!itm}" class="bs table table-condensed data-table">
                                                    <tfoot>
                                                        <tr></tr>
                                                    </tfoot>
                                                </table>

                                        </apex:outputPanel>
                                    </div>
                                </div>

                            </apex:repeat>
                            <script>
                                var DisplayListing_Item_MapJSON = {!DisplayListing_Item_MapJSON};
                                console.log('DisplayListing_Item_MapJSON Display' ,DisplayListing_Item_MapJSON);
                                for (var key in DisplayListing_Item_MapJSON) {
                                    var tableId = '#Display_'+ key;
                                    redrawTable(tableId, 'Display');
                                    }
                            </script>

                            <!--Free Goods/GWP Summary total-->
                            <div style="{!IF(isPOModi,'','display:none; ')} ">
                                <div
                                    style="display: grid; grid-template-columns: 20% 80%; grid-template-rows: auto; padding-top: 0.5em;">
                                    <div class="HeaderCss"
                                        style="grid-column-start: 1; grid-column-end: 1; font-weight: bold;"
                                        title="Adjustment and Grand Total">
                                        <apex:outputText escape="false"
                                            value="礼品及赠酒费用汇总" />
                                    </div>
                                </div>
                                <div class="PanelBody" style="width: 70%">
                                    <table class="bs table table-condensed"
                                        style="margin-bottom: 0; width: 100%">
                                        <tr>
                                            <td class="PSFAdjLabel" title="V0.0 PSF Est. Total"><apex:outputText value="V0.0 费用总金额" /></td>
                                            <td style="padding-top: 0.4em;"><apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_CN_Expected_V0_Display_Est_Total__c}" />
                                                </apex:outputText></td>
                                            <td class="PSFAdjLabel" style="width: 50%"></td>
                                            <td></td>
                                        </tr>

                                        <tr>
                                            <td class="PSFAdjLabel"><apex:outputText value="上一版本费用总金额" /></td>
                                            <td id="DisplayGrandEstimateTotalBeforeAdjustmentId"><apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Prev_Version_Display_Est_Total__c}" />
                                                </apex:outputText></td>
                                            <td></td>
                                            <td></td>
                                        </tr>


                                        <tr>
                                            <td class="PSFAdjLabel" title="Adjustment"><apex:outputText escape="false" value="调整%" /></td>
                                            <td id="DisplayAdjustmentAmountId"><apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Display_Estimate_Adjustment_Amt__c}" />
                                                </apex:outputText></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td class="PSFAdjLabel" title="Expected PSF Est. Total">
                                                <apex:outputText value="本版本预计费用总金额" />
                                            </td>
                                            <td id="ExpectedDisplayEstimatedTotal">
                                                <apex:inputField value="{!ContractSelected.ASI_CRM_CN_Expected_Display_Est_Total__c}"
                                                    styleClass="form-control input-sm"
                                                    onchange="GrandEstimateTotal(this.value, 'DisplayGrandEstimateTotalBeforeAdjustmentId', 'DisplayAdjustmentAmountId');"
                                                    rendered="{!IsDetailEdit}"/>
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_CN_Expected_Display_Est_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
         </apex:outputPanel>
        
     <!------------------ Covered Outlet ------------------------------------------->
     <div class="row " style="padding-top: 1em; {!IF(ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Wholesaler Promotion' && ContractSelected.ASI_CRM_CN_Data_Source__c !='Outlet Intake' && ContractSelected.ASI_CRM_CN_Data_Source__c !='Min(WS Intake, Outlet Intake)','display:none;','')}" >

                 <apex:outputPanel id="CoveredOutletPanel">
                        <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;">

                            <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;">{!$Label.ASI_CRM_CN_Covered_Outlet}</div>

                            <div style="grid-column-start: 2; grid-column-end: 2;  ">
                                <div style="margin-left: 5em;">
                                    <apex:commandButton styleClass="BSCommandButton"
                                                        value="{!$Label.ASI_CRM_CN_Add_New}"
                                                        action="{!AddNew_CoveredOutlet}"
                                                        reRender="CoveredOutletPanel"
                                                        rendered="{!IsDetailEdit}"
                                                        status="ActionStatus"/>
                                    <apex:commandButton styleClass="BSCommandButton"
                                                        value="{!$Label.ASI_CRM_CN_Add_All_Child_Outlet}"
                                                        action="{!AddAllChildOutlets}"
                                                        reRender="CoveredOutletPanel"
                                                        rendered="{!IsDetailEdit}"
                                                        status="ActionStatus"/>
                                </div>
                            </div>
                        </div>

                        <div class="PanelBody">
                            <span>覆盖店家数量: {!numberOfCoveredOutlets}</span>
                            <apex:outputPanel id="CoveredOutletTable">
                            <table class="bs table table-condensed" style="margin-bottom: 0;">
                                <thead>
                                <tr>
                                    <th>
                                      <apex:outputPanel rendered="{!IsDetailEdit}">
                                        {!$Label.ASI_CRM_CN_Select_All}<br/>
                                        <apex:inputCheckbox onclick="selectAllCheckboxes(this,'inputId','covered')"/>
                                      </apex:outputPanel>
                                    </th>
                                    <th>{!$Label.ASI_CRM_CN_Outlet}</th>
                                    <th>区域</th>
                                    <th>渠道</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Target_Volume_9L__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Target_Value__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Est_Visibility_Amt__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Comment__c.Label}</th>
                                </tr>
                                </thead>
                                <tbody>

                                <apex:repeat value="{!CoveredOutlet_Item_Map}" var="itm" id="CoveredOutletLine">
                                    <tr>
                                        <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Selected_Covered_Outlet__c }" id="inputId" styleClass="covered"/>
                                          </apex:outputPanel>
                                        </td>
                                        <td>
                                           <apex:outputPanel rendered="{!IsDetailEdit}">
                                               <apex:inputField value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Outlet__c}">
                                                   <apex:actionSupport event="onchange" action="{!OutletLineChange}" reRender="CoveredOutletTable" status="ActionStatus">
                                                       <apex:param value="{!itm}" name="ITEMKEY" />
                                                       <apex:param value="Covered" name="OutletLineType" />
                                                   </apex:actionSupport>
                                               </apex:inputField>
                                           </apex:outputPanel>
                                           <!-- <apex:outputField rendered="{!!IsDetailEdit}" value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Outlet__c}" /> -->
                                           <apex:outputField rendered="{!!IsDetailEdit}" value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Outlet__r.ASI_CRM_Account__c}" />
                                        </td>
                                        <td>
                                            <apex:outputField value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Outlet__r.ASI_CRM_CN_CCity__r.ASI_CRM_CN_Area__c}" />
                                        </td>
                                        <td>
                                           <apex:outputField value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Outlet__r.ASI_CRM_CN_NewChannel__c}" />
                                        </td>
                                        <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Target_Volume_9L__c }" styleClass="form-control input-sm"/>
                                          </apex:outputPanel>
                                          <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                                <apex:param value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Target_Volume_9L__c}"/>
                                          </apex:outputText>
                                        </td>
                                        <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Target_Value__c }" styleClass="form-control input-sm"/>
                                          </apex:outputPanel>
                                          <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                               <apex:param value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Target_Value__c}"/>
                                          </apex:outputText>
                                        </td>
                                        <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Est_Visibility_Amt__c }" styleClass="form-control input-sm">
                                                   <apex:actionSupport event="onchange" action="{!calVisibilityAmt}" reRender="VisibilityPanel" status="ActionStatus" />
                                            </apex:inputfield>
                                          </apex:outputPanel>
                                          <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                               <apex:param value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Est_Visibility_Amt__c}"/>
                                          </apex:outputText>
                                        </td>
                                        <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                            <apex:inputfield value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Comment__c }" styleClass="form-control input-sm"/>
                                          </apex:outputPanel>
                                          <apex:outputText value="{!CoveredOutlet_Item_Map[itm].ASI_CRM_CN_Comment__c}" rendered="{!!IsDetailEdit}"/>
                                        </td>
                                    </tr>
                                </apex:repeat>
                                </tbody>

                            </table>
                           </apex:outputPanel>
                    </div>
              </apex:outputPanel>
    </div>

     <!------------------ Covered WS ------------------------------------------->
     <div class="row " style="padding-top: 1em; {!IF(ContractSelected.ASI_TH_CRM_Promotion_Type__c != 'Wholesaler Promotion','display:none;','')}" >

                 <apex:outputPanel id="CoveredWSPanel">
                        <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto;">

                            <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;">{!$Label.ASI_CRM_CN_Covered_WS}</div>

                            <div style="grid-column-start: 2; grid-column-end: 2;  ">
                                <div style="margin-left: 5em;">
                                    <apex:commandButton styleClass="BSCommandButton"
                                                        value="{!$Label.ASI_CRM_CN_Add_New}"
                                                        action="{!AddNew_CoveredWS}"
                                                        reRender="CoveredWSPanel"
                                                        rendered="{!IsDetailEdit}"
                                                        status="ActionStatus"/>
                                </div>
                            </div>
                        </div>

                        <div class="PanelBody">
                            <span>覆盖批发商数量: {!NumberOfCoveredWS}</span>

                            <table class="bs table table-condensed" style="margin-bottom: 0;">
                                <thead>
                                <tr>
                                    <th>
                                      <apex:outputPanel rendered="{!IsDetailEdit}">
                                        {!$Label.ASI_CRM_CN_Select_All}<br/>
                                        <apex:inputCheckbox onclick="selectAllCheckboxes(this,'inputId','ws')"/>
                                      </apex:outputPanel>
                                    </th>
                                    <th>{!$Label.ASI_CRM_CN_Outlet}</th>
                                    <th>区域</th>
                                    <th>渠道</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Target_Volume_9L__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Target_Value__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Strategy_WS__c.Label}</th>
                                    <th>{!$ObjectType.ASI_CRM_CN_Covered_Outlet__c .Fields.ASI_CRM_CN_Comment__c.Label}</th>
                                </tr>
                                </thead>
                                <tbody>

                                <apex:repeat value="{!CoveredWS_Item_Map}" var="itm" id="CoveredWSLine">
                                    <tr>
                                        <td>
                                            <apex:outputPanel rendered="{!IsDetailEdit}">
                                                <apex:inputfield value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Selected_Covered_Outlet__c }" id="inputId" styleClass="ws"/>
                                            </apex:outputPanel>
                                        </td>
                                        <td>
                                           <apex:outputPanel rendered="{!IsDetailEdit}">
                                               <apex:inputField value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Outlet__c}">
                                                   <apex:actionSupport event="onchange" action="{!OutletLineChange}" reRender="CoveredWSPanel" status="ActionStatus">
                                                       <apex:param value="{!itm}" name="ITEMKEY" />
                                                       <apex:param value="WS" name="OutletLineType" />
                                                   </apex:actionSupport>
                                               </apex:inputField>
                                           </apex:outputPanel>
                                           <!-- <apex:outputField rendered="{!!IsDetailEdit}" value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Outlet__c}" /> -->
                                           <apex:outputField rendered="{!!IsDetailEdit}" value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Outlet__r.ASI_CRM_Account__c}" />
                                        </td>
                                        <td>
                                            <apex:outputField value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Outlet__r.ASI_CRM_CN_CCity__r.ASI_CRM_CN_Area__c}" />
                                        </td>
                                        <td>
                                            <apex:outputField value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Outlet__r.ASI_CRM_CN_NewChannel__c}" />
                                        </td>
                                        <td>
                                            <apex:outputPanel rendered="{!IsDetailEdit}">
                                                <apex:inputfield value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Target_Volume_9L__c }" styleClass="form-control input-sm"/>
                                            </apex:outputPanel>
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                                <apex:param value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Target_Volume_9L__c}"/>
                                            </apex:outputText>
                                        </td>
                                        <td>
                                            <apex:outputPanel rendered="{!IsDetailEdit}">
                                                <apex:inputfield value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Target_Value__c }" styleClass="form-control input-sm"/>
                                            </apex:outputPanel>
                                            <apex:outputText value="{0, number, ###,###,###,###,##0.00}" rendered="{!!IsDetailEdit}">
                                               <apex:param value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Target_Value__c}"/>
                                            </apex:outputText>
                                        </td>
                                        <td>
                                            <apex:outputPanel rendered="{!IsDetailEdit}">
                                                <apex:inputfield value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Strategy_WS__c }" />
                                            </apex:outputPanel>
                                            <apex:outputField rendered="{!!IsDetailEdit}" value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Strategy_WS__c}" />
                                        </td>
                                        <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                            <apex:inputfield value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Comment__c }" styleClass="form-control input-sm"/>
                                          </apex:outputPanel>
                                          <apex:outputText value="{!CoveredWS_Item_Map[itm].ASI_CRM_CN_Comment__c}" rendered="{!!IsDetailEdit}"/>
                                        </td>
                                    </tr>
                                </apex:repeat>
                                </tbody>

                            </table>

                    </div>
              </apex:outputPanel>
    </div>

       <!--------------------------- Visibility ------------------------------------------------>
       <apex:outputPanel id="VisibilityPanel" rendered="{!ContractSelected.ASI_TH_CRM_Promotion_Type__c == 'Outlet Promotion' && !isGroupPO}">
                <div class="row" style="padding-top: 1em; ">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                           陈列费
                        </div>
                        <div class="panel-body" style="padding: 0.5em">

                            <div class="bs table-responsive">
                                <table class="bs table table-condensed module-header-table" style="margin-bottom: 0;">
                                    <tr>
                                     <td>{!$ObjectType.ASI_CRM_Module__c.Fields.ASI_CRM_Remark__c.Label}</td>
                                     <td>
                                          <apex:outputPanel rendered="{!IsDetailEdit}">
                                             <apex:inputfield value="{!Visibility_Item_Map.Module.ASI_CRM_Remark__c}" styleClass="form-control input-sm" />
                                          </apex:outputPanel>
                                          <apex:outputText rendered="{!!IsDetailEdit}" value="{!Visibility_Item_Map.Module.ASI_CRM_Remark__c}" />
                                     </td>
                                     <td> </td>
                                     <td> </td>
                                   </tr>
                                </table>

                                <table class="bs table table-condensed data-table dataTable"  role="grid" style="width: 100%;">
                                    <tfoot>
                                        <tr>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                    <thead>
                                        <tr role="row">
                                            <th class="sorting_disabled" rowspan="1" colspan="1" style="width: 1828px;">
                                                Total
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr role="row" class="odd">
                                            <td>
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!VisibilityLine.ASI_CRM_CN_Est_Total_Dummy__c}"/>
                                                </apex:outputText>
                                            </td>
                                        </tr>
                                    </tbody>
                                 </table>

                             <!--Visibility Summary total-->
                             <div style="{!IF(isPOModi,'','display:none; ')} ">
                                <div style="display: grid; grid-template-columns: 20% 80% ; grid-template-rows: auto; padding-top:0.5em;">
                                    <div class="HeaderCss" style="grid-column-start: 1; grid-column-end: 1;font-weight: bold;" title="Adjustment and Grand Total">
                                        <apex:outputText escape="false" value="陈列费汇总"/>
                                    </div>
                                </div>
                                <div class="PanelBody" style="width:70%">
                                    <table class="bs table table-condensed" style="margin-bottom: 0; width:100%">
                                        <tr>
                                            <td class="PSFAdjLabel" title="V0.0 PSF Est. Total">
                                                <apex:outputText value="V0.0 费用总金额"/>
                                            </td>
                                            <td style="padding-top: 0.4em; ">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_CN_V0_Visibility_Contract_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td class="PSFAdjLabel" style="width:50%" > </td>
                                            <td></td>
                                        </tr>

                                        <tr>
                                            <td class="PSFAdjLabel">
                                                <apex:outputText value="上一版本费用总金额"/>
                                            </td>
                                            <td id="VisibilityGrandEstimateTotalBeforeAdjustmentId">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Prev_Ver_Visibility_Est_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td></td>
                                            <td></td>
                                        </tr>


                                        <tr>
                                            <td class="PSFAdjLabel" title="Adjustment">
                                                <apex:outputText escape="false" value="调整%"/>
                                            </td>
                                            <td id="VisibilityAdjustmentAmountId">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_Visibility_Est_Adjust_percent__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td class="PSFAdjLabel" title="Expected PSF Est. Total">
                                                <apex:outputText value="本版本预计费用总金额"/>
                                            </td>
                                            <td id="ExpectedVisibilityEstimatedTotal">
                                                <apex:outputText value="{0, number, ###,###,###,###,##0.00}">
                                                    <apex:param value="{!ContractSelected.ASI_CRM_CN_Expected_Visibility_Est_Total__c}"/>
                                                </apex:outputText>
                                            </td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>

                            </div>
                        </div>

                    </div>
                </div>

         </apex:outputPanel>

        <div class="row  "  style="{!IF(ShowPaymentList || !IsView ,'','display:none;')}"  >
            <div class="col">
                <div class="panel panel-primary">
                    <div class="panel-heading" title="Historical Payment Details" >
                        {!$Label.ASI_CRM_CN_Historical_Payment_Details}
                    </div>
                    <div class="panel-body" style="padding: 0.5em" >
                        <div class="bs table-responsive" style="padding-top: 0.5em;" >
                            <table class="bs table table-condensed" style="margin-bottom: 0; " >
                                <thead>
                                <tr>
                                    <th>{!$ObjectType.ASI_TH_CRM_PaymentRequest__c.Fields.Name.Label}</th>
                                    <th>{!$ObjectType.ASI_TH_CRM_PaymentRequest__c.Fields.ASI_TH_CRM_Status__c.Label}</th>
                                    <th>{!$ObjectType.ASI_TH_CRM_PaymentRequest__c.Fields.ASI_CRM_CN_Payment_Raised_Date__c.Label}</th>
                                    <th>{!$ObjectType.ASI_TH_CRM_PaymentRequest__c.Fields.ASI_CRM_CN_Total_Payment__c.Label}</th>
                                </tr>
                                </thead>
                                <tbody>
                                <apex:variable value="{!0}" var="TotalPaymentAmount"/>
                                <apex:repeat value="{!PaymentRequestList}" var="PaymentRequest" >
                                    <apex:variable var="TotalPaymentAmount" value="{!TotalPaymentAmount+PaymentRequest.ASI_CRM_CN_Total_Payment__c}"/>

                                    <tr>
                                        <td>
                                            <apex:outputLink value="/{!PaymentRequest.id}">{!PaymentRequest.Name}</apex:outputLink>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!PaymentRequest.ASI_TH_CRM_Status__c}"/>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!PaymentRequest.ASI_CRM_CN_Payment_Raised_Date__c}"/>
                                        </td>

                                        <td>
                                            <apex:outputField value="{!PaymentRequest.ASI_CRM_CN_Total_Payment__c}"/>

                                        </td>
                                    </tr>
                                </apex:repeat>
                                </tbody>

                                <tr class="table-summary-row">
                                    <td>{!$Label.ASI_CRM_CN_TOTMOT_Total_Amount}
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td>
                                        <apex:outputText value="{0, number, ###,###,###,###,##0.00}"><apex:param value="{!TotalPaymentAmount}"/></apex:outputText>
                                    </td>
                                </tr>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    </apex:form>



  </div>
</div>

 <apex:actionstatus id="ActionStatus">
                    <apex:facet name="start">
                        <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb;pointer-events:none;
                                                                             height: 100%; width:100%; opacity:0.65;">
                            <div class="waitingHolder" id="loadtext" style="position: absolute;" align="left" valign="top">
                                &nbsp;&nbsp;&nbsp;
                                <img class="waitingImage" src="/img/loading.gif" title="Please Wait..."/>
                                <span class="waitingDescription">Please Wait...</span>
                            </div>
                        </div>
                    </apex:facet>
  </apex:actionstatus>


  <apex:relatedList subject="{!pageid}" list="Contracts3__r" rendered="{!isGroupPo}"/>
  <apex:relatedList id="Attachments" subject="{!pageid}" list="CombinedAttachments" rendered="{!IsView}"/>
  <apex:relatedList id="Approval" list="ProcessSteps" subject="{!pageid}" rendered="{!IsView}"/>
  <apex:relatedList id="ApprovalComment" subject="{!pageid}" list="Contract_Approval_Comments__r" rendered="{!IsView}"/>

</apex:page>