<apex:page Controller="ASI_Forecast_TW_MassApproveController" >
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <head>
        <apex:includescript value="{!URLFOR($Resource.ASI_CRM_TW_jQuery, '/jquery-1.11.1.min.js')}"/>
        <apex:includescript value="{!URLFOR($Resource.ASI_CRM_TW_DataTables, '/datatables.min.js')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_TW_DataTables, '/datatables.min.css')}" />
    </head>
    <apex:form >
        <div class="waitingSearchDiv" id="el_loading" style="background-color: #CCCCCC; opacity:0.5; height: 100%;width:100%;z-index:99999;"> 
            <div class="waitingHolder" style="top: 50%; width: 100px;">
                <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                <span class="waitingDescription">Loading...</span>
            </div>
        </div>
        <apex:sectionHeader title="Forecast Approval"/>
        <apex:pageMessages id="pageMsg"></apex:pageMessages>
        <apex:pageMessage summary="Forecast Input Unit : 9L" severity="info" strength="1" /><apex:pageMessages />
        <apex:pageBlock id="main_pageBlock" title="Submitted Forecast">
            <apex:pageblockButtons >
                <apex:commandButton value="Approve" onclick="approveBudget(); return false;"/>
                <apex:commandButton value="Reject"  onclick="rejectBudget(); return false;"/>
                <apex:commandButton value="Report"  onclick="openReport(); return false;"/>
                <apex:commandButton value="Cancel"  onclick=""/>
            </apex:pageBlockButtons>
            <table id="forecast" class="display compact">
                <tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th id="p1"></th>
                        <th id="p2"></th>
                        <th id="p3"></th>
                        <th id="p4"></th>
                        <th id="p5"></th>
                        <th id="p6"></th>
                        <th id="p7"></th>
                        <th id="p8"></th>
                        <th id="p9"></th>
                        <th id="p10"></th>
                        <th id="p11"></th>
                        <th id="p12"></th>
                    </tr>
                </tfoot>
            </table>
        </apex:pageBlock>   
    </apex:form>
	<apex:form >
        <apex:pageBlock id="main_pageBlock" title="Approved Forecast">
            <table id="viewonly" class="display compact"></table>
        </apex:pageBlock>   
    </apex:form>
    <script>
    var oTable;
    var dataSet;
	var months;
    var currmonth;
    j$ = jQuery.noConflict();
    j$(document).ready( function () {
        /*
        var retriveData = {!dataSet};
        j$('.waitingSearchDiv').hide();
        console.log(retriveData);
        dataSet = retriveData.Submitted;
        oTable = constructTbl('#forecast',dataSet,true);
        constructTbl('#viewonly',retriveData.Final,false);
        subTotalCalculation(oTable.rows( {page:'current'} ).data());
        
        j$('#forecast').on( 'draw.dt', function () {
            subTotalCalculation(oTable.rows( {page:'current'} ).data());
        } );
        */
        getForecastData();
    });
        
	function getForecastData() {
        var channel = '{!channel}';
        var subchannel = '{!subChannel}';
        var region = '{!region}';
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ASI_Forecast_TW_MassApproveController.requestForecast}',
            JSON.stringify({channel:channel, subchannel:subchannel, region:region}), 
            function(result, event){
                j$('.waitingSearchDiv').hide();
                if (event.status) {
                    var retriveData = result;
                    console.log(retriveData);
                    dataSet = retriveData.Submitted;
                    oTable = constructTbl('#forecast',dataSet,true);
                    constructTbl('#viewonly',retriveData.Final,false);
                    subTotalCalculation(oTable.rows( {page:'current'} ).data());
                    
                    j$('#forecast').on( 'draw.dt', function () {
                        subTotalCalculation(oTable.rows( {page:'current'} ).data());
                    } );
                } else if (event.type === 'exception') {
                } else {
                }
            }, 
            {escape: true}
        );
    }
        
    function constructTbl(tblId, dataSet, editable) {
        var oTable;
        months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
		var today = new Date('{!currMonth}');
        var currmonth = today.getMonth();
        var columns = [
            { title: "Select", "data": "isSelect", "sortable": false, "searchable":false },
            {
                "className":      'details-control',
                "orderable":      false,
                "data":           null,
                "defaultContent": ''
            },
            { title:"Channel", "data": "channel" },
            { title:"Sub-Channel", "data": "subchannel" },
            { title:"Region", "data": "region" },
            { title:"Customer", "data": "customer" },
            { title:"Period", "data": "period" },
            { title:"Budget", "data": "budget" }
        ];
        for (var i=1; i<=12; i++) {
            var txMonth = ''+months[(i+currmonth-1)%12];
            //            if(editable) {
                columns.push({ title: txMonth, "data": "p"+i, "sortable": false, "searchable":false });
            //            } else {
            //                columns.push({ title: "P"+i, "data": "p"+i, "sortable": false, "searchable":false });
            //            }
        }
        oTable = j$(tblId).DataTable( {
            aLengthMenu: [
                [10, 25, 50, -1],
                [10, 25, 50, "All"]
            ],
            "data": dataSet,
            "columns": columns,
            "columnDefs": [
                {
                    "targets": 0,
                    "visible": editable,
                    'className': 'dt-body-center',
                    'width': '1%',
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        var key = columns[iCol].data;
                        j$(nTd).html('<input class="userinput" type="checkbox" onchange="fnChangeTd(this)">');
                        j$(nTd).find('input').attr('id', iRow + '@' + key);
                        if (sData) {
                            j$(nTd).find('input').attr("checked", "checked");    
                        }
                    }
                },{
                    "targets": 1,
                    "visible": true,
                    'className': 'dt-body-center',
                    'width': '1%',
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        j$(nTd).html('<h1 style="font-size:large ">+</h1>');
                    }
                },{
                    "targets": [8,9,10,11,12,13,14,15,16,17,18,19],
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        var color = (iCol<14) ? '#000000':'#0033cc';
						j$(nTd).html(Number(sData).toFixed(2));
                        j$(nTd).css({ 'color': color });
                    }
                }
              ],
            "order": [[4, 'desc']]
        } );
         
        // Add event listener for opening and closing details
        j$(tblId+' tbody').on('click', 'td.details-control', function () {
            var tr = j$(this).closest('tr');
            var row = oTable.row( tr );
     
            if ( row.child.isShown() ) {
                // This row is already open - close it
                row.child.hide();
                tr.find('.details-control').html('<h1 style="font-size:large ">+</h1>');
            }
            else {
                // Open this row
                row.child( format(row.data()) ).show();
                tr.find('.details-control').html('<h1 style="font-size:large ">-</h1>');
            }
        } );
        j$(oTable.column(0).header()).html("<input id='checkall' type='checkbox' checked onclick='fnCheckAll(event)'>");
        return oTable;
    }
    function format ( d ) {
        // `d` is the original data object for the row
        console.log(JSON.stringify(d));
        var today = new Date('{!currMonth}');
        var currmonth = today.getMonth();
        var strHtml = '<table cellspacing="0" border="0" style="margin:20px; border: 1px solid black;">';
        strHtml+='<tr>';
        strHtml+='<th>Category</th>';
        //        strHtml+='<th>Customer</th>';
        strHtml+='<th>SKU Group Description</th>';
		strHtml+='<th>Brand</th>';
        strHtml+='<th>Budget</th>';
        for (var i=1; i<=12; i++) {
            var txMonth = ''+months[(i+currmonth-1)%12];
            strHtml+='<th>'+txMonth+'</tg>';
        }
        strHtml+='</tr>';
        for (var i=0; i<d.childs.length; i++) {
            var itemDetail = d.childs[i];
            strHtml+='<tr>';
            strHtml+='<td>'+itemDetail.category+'</td>';
            //            strHtml+='<td>'+itemDetail.customer+'</td>';
            strHtml+='<td>'+itemDetail.skudesc+'</td>';
            strHtml+='<td>'+itemDetail.brandname+'</td>';
            strHtml+='<td>'+itemDetail.budget+'</td>';
            strHtml+='<td>'+itemDetail.p1+'</td>';
            strHtml+='<td>'+itemDetail.p2+'</td>';
            strHtml+='<td>'+itemDetail.p3+'</td>';
            strHtml+='<td>'+itemDetail.p4+'</td>';
            strHtml+='<td>'+itemDetail.p5+'</td>';
            strHtml+='<td>'+itemDetail.p6+'</td>';
            strHtml+='<td>'+itemDetail.p7+'</td>';
            strHtml+='<td>'+itemDetail.p8+'</td>';
            strHtml+='<td>'+itemDetail.p9+'</td>';
            strHtml+='<td>'+itemDetail.p10+'</td>';
            strHtml+='<td>'+itemDetail.p11+'</td>';
            strHtml+='<td>'+itemDetail.p12+'</td>';
            strHtml+='</tr>';
        }
        strHtml += '</table>';
        return strHtml;
    }
        
	function subTotalCalculation(data) {
        var pTotal = {'p1':0.0,'p2':0.0,'p3':0.0,'p4':0.0,'p5':0.0,'p6':0.0,'p7':0.0,'p8':0.0,'p9':0.0,'p10':0.0,'p11':0.0,'p12':0.0};
        for (var i=0;i<data.length;i++) {
            pTotal.p1 += data[i].p1;
            pTotal.p2 += data[i].p2;
            pTotal.p3 += data[i].p3;
            pTotal.p4 += data[i].p4;
            pTotal.p5 += data[i].p5;
            pTotal.p6 += data[i].p6;
            pTotal.p7 += data[i].p7;
            pTotal.p8 += data[i].p8;
            pTotal.p9 += data[i].p9;
            pTotal.p10 += data[i].p10;
            pTotal.p11 += data[i].p11;
            pTotal.p12 += data[i].p12;
        }
		j$('#p1').html(Number(pTotal.p1.toFixed(2)));
		j$('#p2').html(Number(pTotal.p2.toFixed(2)));
        j$('#p3').html(Number(pTotal.p3.toFixed(2)));
        j$('#p4').html(Number(pTotal.p4.toFixed(2)));
        j$('#p5').html(Number(pTotal.p5.toFixed(2)));
        j$('#p6').html(Number(pTotal.p6.toFixed(2)));
        j$('#p7').html(Number(pTotal.p7.toFixed(2)));
        j$('#p8').html(Number(pTotal.p8.toFixed(2)));
        j$('#p9').html(Number(pTotal.p9.toFixed(2)));
        j$('#p10').html(Number(pTotal.p10.toFixed(2)));
        j$('#p11').html(Number(pTotal.p11.toFixed(2)));
        j$('#p12').html(Number(pTotal.p12.toFixed(2)));
    }

    function fnChangeTd(inputBox) {
        var id = inputBox.id;
        var value = inputBox.checked;
        var res = id.split("@");
        var row = Number(res[0]);
        var key = res[1];
        console.log('row : ' + row + ' key : ' + key + ' value : ' + value );
        dataSet[row][key] = value;
        console.log(JSON.stringify(dataSet));
    }
    function fnCheckAll(evt) {
        var isChecked = j$('#checkall')[0].checked;
        if(dataSet.length>0) {
            for (var i in dataSet) {
                dataSet[i]['isSelect'] = isChecked;
            }
            j$('#forecast').dataTable().fnClearTable();
            j$('#forecast').dataTable().fnAddData(dataSet);
            console.log(dataSet);
        }
    }
        
    function approveBudget() {
        j$('.waitingSearchDiv').show();
        var approveData = [];
        for (var i in dataSet) {
            var rowData = dataSet[i];
            if(rowData.isSelect) approveData.push(rowData);
        }
        console.log(approveData);
        if(approveData.length==0) {
            alert('Please Select Forecast');
            j$('.waitingSearchDiv').hide();
        } else {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_Forecast_TW_MassApproveController.approveForecast}',
                JSON.stringify(approveData), 
                function(result, event){
                    if (event.status) {
                        console.log(result);//print the log and inspect console to see result returned in form of JS object.You can generate string from JSON object using stringify
                        console.log(JSON.stringify(result));
                    } else if (event.type === 'exception') {
                    } else {
                    }
                    location.reload();
                }, 
                {escape: true}
            );
        }
    }

    function rejectBudget() {

        var approveData = [];
        for (var i in dataSet) {
            var rowData = dataSet[i];
            if(rowData.isSelect) approveData.push(rowData);
        }
        console.log(approveData);
        if(approveData.length==0) {
            alert('Please Select Forecast');
        } else {
            var reason = prompt("Please Enter Reject Reason", "數量不足");
            if (reason!=null) {
                j$('.waitingSearchDiv').show();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ASI_Forecast_TW_MassApproveController.rejectForecast}',
                    JSON.stringify({approvalData:approveData, reason:reason}), 
                    function(result, event){
                        if (event.status) {
                            console.log(result);//print the log and inspect console to see result returned in form of JS object.You can generate string from JSON object using stringify
                            console.log(JSON.stringify(result));
                        } else if (event.type === 'exception') {
                        } else {
                        }
                        location.reload();
                    }, 
                    {escape: true}
                );
            }
        }
    }
	function openReport(){
        var url='{!reportUrl}';
        window.open(url);
    }
    </script>
    </html>
</apex:page>