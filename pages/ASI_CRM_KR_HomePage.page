<apex:page docType="html-5.0" sidebar="false" >
    <head>
        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        
        
       <link rel="stylesheet" href="/resource/ASI_JS_Bootstrap_V3_3_7" type="text/css" media="screen" title="no title" charset="utf-8"/>

        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.10/css/all.css" integrity="sha384-+d0P83n9kaQMCwj8F4RJB66tzIwOKmrdb46+porD/OvrJ+37WqIM7UoBtwHO6Nlg" crossorigin="anonymous" />


        <script src="/resource/ASI_KR_JsLibrary" type="text/javascript" charset="utf-8"></script>
        <script src="/resource/ASI_CRM_JSXTransformer" type="text/javascript" charset="utf-8"></script>
       
       
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_JQuery_V1_9_1, 'js/jquery.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Bootstrap_V3_3_5, 'dist/js/bootstrap.min.js')}" />
        
    </head>
    
    
    <script type="text/javascript">
    var __sfdcSessionId = '{!GETSESSIONID()}';
    </script>
    <script src="../../soap/ajax/40.0/connection.js"  type="text/javascript" />
    
    <body> 
        <div id="TestId" >  <br/> 
        </div>
        
        <script type="text/jsx">
            var data=[];  
    
    
           var SectionView = React.createClass({
                getInitialState: function() {
                    return {data:[]};
                },
                componentDidMount: function() {
                    var QueryStatement = 'Select Name,ASI_CRM_ID__c,ASI_CRM_Description__c,ASI_CRM_Color__c,ASI_CRM_Icon__c from ASI_KR_Setting__c where ASI_CRM_Type__c = \'APP\' order by ASI_CRM_Number__c ' ;
                    var result = sforce.connection.query(QueryStatement);
                    var records = result.getArray("records");
                    
                    for (var i=0; i< records.length; i++) {
                        var record = records[i];
                        data.push(record);
                        console.log(record);
                    }
                    this.setState({data: data});
                    
                    
                },
                render: function() {
                    var HeaderNodes = data.map(function (item) {
                          return (
                             <div className="col-md-4" > 
                             <DataElement name={item.Name} Description={item.ASI_CRM_Description__c}  Id={item.ASI_CRM_ID__c} Icon={item.ASI_CRM_Icon__c} BackgroundColor={item.ASI_CRM_Color__c} >
                             </DataElement></div>
                          );
                    });
                    return ( 
                        <div className="container-fluid"><div className="row" >{HeaderNodes}</div></div>);
                }
            });
    
    
                                   
             var DataElement = React.createClass({
                 
                componentDidMount: function() {
                     $('[data-toggle="tooltip"]').tooltip({
                         content: function() {
                             return $(this).prop('title');
                         }
                     });
                },
                onItemClick: function (event) {
                    console.log('Enter 1 '+this.props.Id);
                    //window.location.href = '/home/home.jsp?tsid=' + this.props.Id;
                    window.open('/home/home.jsp?tsid=' + this.props.Id, '_parent'); 
                },
                render: function() { 
                     const  IconStyle = {
                         'color': 'White',
                         'font-size': '2em'
                      };
                      
                      const  PanelStyle = {
                         'background': this.props.BackgroundColor,
                         'border-radius': '1rem',
                         'cursor': 'pointer'
                      };
                      
                       const  FontStyle = {
                         'color': 'White',
                         'font-size': '1.5em',
                         'font-weight':'bold'
                      };
                      
                    return (<div style={PanelStyle} className="panel panel-default" onClick={this.onItemClick} > <div className="panel-body" href="#" data-placement="bottom" data-toggle="tooltip" title={this.props.Description} > 
                    <i className={this.props.Icon} style={IconStyle} ></i>&nbsp;&nbsp;&nbsp;
                    <span style={FontStyle} > {this.props.name} </span>
                    </div></div> );
                }
            });                       
                                   
            
            
            React.render(
                <SectionView />,document.getElementById('TestId')
            );
            
           
            </script>
</body>   
</apex:page>