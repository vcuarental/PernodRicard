<apex:page standardStylesheets="true" standardcontroller="ASI_MFM_Purchase_Request__c" extensions="ASI_CTY_CN_Vendor_PR_PurchaseController"  docType="html-5.0">
<style>
   .DetailInfo {
        /* display: none; */
        position: fixed;
        /* border-radius: 8px; */
            border-top: 4px solid transparent;
        z-index: 3;
        overflow: auto !important;
        background-color: #ffffff;
        background-size: 100% 100%;
        top: 15%;
        right: 10%;
        width: 80%;
        height: 70%;
        /* border: blue; */
        -webkit-box-shadow: #e0e3e5 0px 0px 20px;
        -moz-box-shadow: #666 0px 0px 20px;
        /* -webkit-border-radius: 8px; */
        -moz-border-radius: 8px;
        margin-top: 2px;
        padding: 10px;
    }

    .DetailInfo input[type='text'] {
        width: 50px;
        height:25px;
    }
    .DetailInfo select{
        width: 80px;
        height:25px;
    }
    .shadow{
        width:100%;
        height:100%;
        position:absolute;
        left:0;
        top:0;
        z-index:2;
        background-color:rgba(8, 7, 7, 0.6);
        opacity:0.6;
        display:none;
    }

        /*必填*/
      .required {
        border-left-style: solid;
        border-left-width: 3px;
        border-left-color: red;
       }

      .row {
                margin-right: -15px;
                margin-left: -15px;
                margin-bottom: 10px;
                }
</style>

    <head>
          <!--遮罩层-->
        <div class="shadow"></div>
        
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <title>CN Budget Plan Upload</title>
        <meta name="description" content=""/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <meta name="google" content="notranslate"/>
        <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/jquery-3.4.1.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/jquery-ui.min.js')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_CN_Jquery, 'jquery-ui1.10.4.css')}"/>
        <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_Vendor_Papa)}"/>
         <apex:stylesheet value="{!URLFOR($Resource.ASI_CTY_CN_Vendor_BootStrap, 'bootstrap/css/bootstrap.css')}"></apex:stylesheet>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_CTY_CN_Vendor_DataTable_BootStrap, 'DataTables-1.10.16/css/dataTables.bootstrap.min.css')}"></apex:stylesheet>
        <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_Vendor_BootStrap, 'bootstrap/js/bootstrap.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/angular.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_Vendor_DataTable_BootStrap, 'DataTables-1.10.16/js/jquery.dataTables.min.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.ASI_CTY_CN_Vendor_DataTable_BootStrap, 'DataTables-1.10.16/js/dataTables.bootstrap.min.js')}"></apex:includeScript>
    </head>
<apex:form >
 <body>
  <div class="waitingSearchDiv" id="el_loading" style=" background-color: #fbfbfb ;
       height: 2000px;opacity :0.65;width:100%; display: none;"  >
            <div class="waitingHolder" style="position: fixed;top : 30%; right:50%;width: 91px;" >
                <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                <span class="waitingDescription" >Waiting ...</span >
            </div> 
  </div>
  
  <div  ng-app="myapp" ng-controller="myCtrl" ng-init="initPage()">
   
    <apex:sectionheader title="Purchase Request Line"></apex:sectionheader>

    <apex:pageblock mode="New" id="purchaseOrder" title="New Purchase Order Line">    
       <center>     
       
            <input type="button" value="Save" class="btn" ng-click="saveInfoFromTable()" ng-disabled="{{isNoowner}}" />
             <input type="button" value="Add Item Group" class="btn" ng-click="addItemGroup()" ng-disabled="{{isNoowner}}" />
             <input type="button" value="Cancel" class="btn"  ng-click="cancel()"/>

        </center>

        <apex:pageBlockSection title="Line Item(By Item Group)" columns="1"> 
    
            <div class="pbBody" id="a2">
                <table border="0" cellpadding="0" cellspacing="0" class="list" id="dt_itemgroup" style="width: 100%">
                    <thead class="">
                        <tr class="headerRow">
                              <th class="headerRow" colspan="1" scope="col" style="width: 6%">
                                <div >
                                    <label>
                                      &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
                                    </label>
                                </div>
                            </th>

                             <th class="headerRow" colspan="1"  scope="col">
                                <div>
                                    <label>
                                        Item Group Code
                                    </label>
                                </div>
                            </th>
                           
                            <th class="headerRow" colspan="1"  scope="col">
                                <div >
                                    <label>
                                       Category
                                    </label>
                                </div>
                            </th>
                        
                            
                           <!--  <th class="headerRow" colspan="1" scope="col">
                                <div >
                                    <label>
                                        Sample Required
                                    </label>
                                </div>
                            </th> -->
                             <th class="headerRow" colspan="1"  scope="col">
                                <div >
                                    <label>
                                       Total Quantity Required
                                    </label>
                                </div>
                            </th>
                            <th class="headerRow" colspan="1"  scope="col">
                                <div >
                                    <label>
                                        Buyer
                                    </label>
                                </div>
                            </th>

                             <th class="headerRow" colspan="1"  scope="col" style="width: 200px">
                                <div >
                                    <label>
                                        Sub Brand
                                    </label>
                                </div>
                            </th>

                            <th class="headerRow" colspan="1"  scope="col">
                                <div >
                                    <label>
                                        Status
                                    </label>
                                </div>
                            </th>
                          <!--   <th class="headerRow" colspan="1"  scope="col">
                                <div >
                                    <label>
                                       Bidding Deadline
                                    </label>
                                </div>
                            </th>
                            -->
                        </tr>
                    </thead>
                   
                    <tbody >
                    
                        <tr class="dataRow even first"   ng-repeat='item in periodInfos' id="{{item.proId}}" reloadcasetable="generateTable">
                            
                             <td class="dataCell " colspan="1" width="%">
                                <a style="color: red" ng-click="deleteItemgroup(item.proId)" ng-show="{{item.isAllowEdit}}" >D</a>|
                                <a style="color: red" ng-click="cloneProduct(item.proId);">C</a>|
                                <a style="color: red" ng-click="showdetails(item.proId);">+</a>
                               
                            </td>



                             <td class="dataCell " colspan="1" id="ceshi">
                              <!--   <a href="#" ng-show="{{item.itemGroupCode !=null}}" ng-click="supplierSelection()"> {{item.itemGroupCode}}</a> -->
                                 
                                <input class="form-control required"  ng-show="{{item.itemGroupCode ==null}}"  onkeyup="autoSearchProduct(this)"  id="gr_item_{{item.proId}}" ng-model="item.itemProductName" ng-disabled="!{{item.isAllowEdit}}" />
                                <input type="text" ng-model="item.itemProductId"  style="display:none;"/>
<!--                                  <apex:inputField value="{!ASI_MFM_Purchase_Request__c.ASI_CTY_CN_Vendor_PP_Category__c}" id="poCategory"/>
 -->                            </td>
                       
                            <td class="dataCell " colspan="1" id="category1">
                               <input type="text"  disabled="true" ng-model="item.categoryName" class="form-control" />
                                <input type="text" ng-model="item.category"  style="display:none"/>
                              <!--  {{item.category}} -->
                            </td>
                              <!--    
                            <td class="dataCell " colspan="1" >
                                {{item.accountCode}}
                            </td>
                            <td class="dataCell " colspan="1" >
                                {{item.subBrand}} 
                            </td> -->
                           
                           <!--  <td class="dataCell " colspan="1" >
                                
                               <input type="checkbox" checked="{{item.sampleRequired}}" value="{{item.sampleRequired}}" id="selectAll0" ng-model="item.sampleRequired" ng-disabled="!{{item.isAllowEdit}}" />
                            </td> -->
                             <td class="dataCell " colspan="1" >
                                <input type="Number" value="{{item.totalQty}}" id="totalQtyId" ng-model="item.totalQty" class="form-control required" ng-disabled="!{{item.isAllowEdit}}"  />
                            </td>
                            <td class="dataCell " colspan="1" >
                                <input class="form-control"   id="gr_itembuy_{{item.proId}}" ng-model="item.itembuyName" disabled="true" />
                                 <input type="text" ng-model="item.itembuyId" style="display:none"/>
                            </td>

                             <td class="dataCell " colspan="1" >

                              <select class="form-control" style="width: 200px" ng-model="item.selsubBrand" ng-disabled="!{{item.isAllowEdit}}">
                                 <option ng-repeat="x in subBrandsJson" value="{{x.Id}}">{{x.Name}}</option>
                              </select>
                               <input type="text" ng-model="item.selsubBrand" style="display:none"/>
                            </td>

                            <td class="dataCell " colspan="1" ng-model="item.status">
                                {{item.status}}
                            </td>
                           <!--  <td class="dataCell " colspan="1" >
                                {{item.pONumber}}
                            </td> -->
                          <!--   <td class="dataCell form-control" colspan="1" >
                             <input type="date" value=" {{item.deadlineTime}} " ng-model="item.deadlineTime" ng-disabled="true" class="form-control" />
                            </td>
 -->
                           
                        </tr>
                       
                    </tbody>
                </table>
            </div>

         </apex:pageBlockSection>   
          <center>     
       
           <input type="button" value="Save" class="btn" ng-click="saveInfoFromTable()" ng-disabled="{{isNoowner}}"/>
           <input type="button" value="Add Item Group" class="btn" ng-click="addItemGroup()" ng-disabled="{{isNoowner}}"/>
           <input type="button" value="Cancel" class="btn"  ng-click="cancel()"/>
      
        </center>                      

    </apex:pageblock>  
     <div id="configProduct" style="display: none;" class="DetailInfo col-sm-10">

             <apex:pageblock mode="New" id="purchaseOrder1" title="New Address"> 
                <apex:pageBlockSection title="Address Information   (如非Warehouse/Office或Outlet可自行输入地址)" columns="1"> 

                  <div class="row">
                            <label class="col-sm-1 control-label col-sm-offset-1">WareHouse /Office</label>
                            <div class="col-sm-3">
                                <input class="form-control" onkeyup="autoWarehouse(this,'WareHouse')" id="addressId" ng-model="wareHouseName" />
                                <input type="text" ng-model="wareHouseId" style="display:none"/>
                            </div>

                           <label class="col-sm-1 control-label col-sm-offset-1">Outlet</label>
                            <div class="col-sm-3">
                                <input class="form-control" onkeyup="autoWarehouse(this,'qutlet')" id="addressId" ng-model="qutletName" />
                                <input type="text" ng-model="qutletId" style="display:none"/>
                            </div>
                  </div>

                    <div class="row">
                            <label class="col-sm-1 control-label col-sm-offset-1">Address</label>
                            <div class="col-sm-3">
                                <input class="required form-control"  id="addressId" ng-model="addressName"/>
                            </div>

                           <label class="col-sm-1 control-label col-sm-offset-1">Quantity Required</label>
                            <div class="col-sm-3">
                               <input class="required form-control" type="Number" ng-model="reqQuantity"/>
                            </div>
                  </div>

                    <div class="row">
                            <label class="col-sm-1 control-label col-sm-offset-1">Contact Name</label>
                            <div class="col-sm-3">
                               <input   ng-model="contactName" class="form-control required" />
                            </div>

                           <label class="col-sm-1 control-label col-sm-offset-1">Contact Phone</label>
                            <div class="col-sm-3">
                               <input   ng-model="receiptOwnerPhone" class="form-control required" />
                            </div>
                  </div>

                  <div class="row">
                            <label class="col-sm-1 control-label col-sm-offset-1">Receipt Owner</label>
                            <div class="col-sm-3">
                               <input  onkeyup="autoUser(this)"  ng-model="receiptOwner" class="form-control" />
                               <input type="text" ng-model="receiptOwnerId" style="display:none;" class="form-control" />
                            </div>
                  </div>

                    <div class="row">
                            <label class="col-sm-1 control-label col-sm-offset-1">Note</label>
                            <div class="col-sm-5">
                                <textarea  cols="60px" ng-model="note" rows="10px" style="margin: 0px; height: 86px;" placeholder="Please Input Reason" class="form-control"></textarea>
                            </div>

                  </div>

               
               <center>
                          
                          <input type="button" class="btn"  ng-click ="clsoeConfig()" value="Cancel"/>
                          <input type="button" class="btn"  ng-click ="saveAddress()" value="Save"/>
                      </center>
          </apex:pageBlockSection>
        </apex:pageblock>
      </div>
    </div>
    
    </body>          
</apex:form>

<script type="text/javascript">
     var table;
     var addressList=[];
    var myApp = angular.module('myapp',[]);
    myApp.controller('myCtrl',function($scope,$filter,$compile){

        $scope.initPage = function() {
        $scope.recordId = '{!recordId}';
        $scope.periodInfos=[];
        $scope.username = '{!username}';
        $scope.userId = '{!userId}';
        $scope.count=1;
        $scope.proAddressMap = new Map();// 用来存储产品和地址关系
        $scope.selectItemGroup ='';
        $scope.uploadFile ='';
        $scope.isNoowner = {!isNoowner}
        var deadlineTime = $scope.getDateStr(7);
        var periodInfo={
            }
        $scope.delPros = [];
        $scope.delProAddress = [];
        $scope.isEdit = {!isEdit};
        $scope.subBrandsJson = {!subBrandsJson};
          if($scope.isEdit)
          {
            var periodInfosJson = {!periodInfosJson};
             if('' != periodInfosJson)
             {
                periodInfosJson.forEach(function(line){
                  var oldperiodInfo ={
                    'status' :line.ASI_CTY_CN_Vendor_Status__c,
                    'totalQty': line.ASI_CTY_CN_Vendor_Total_Quantity__c,
                    'sampleRequired': line.ASI_CTY_CN_Vendor_Sample_Required__c,
                    'itembuyId': line.ASI_CTY_CN_Vendor_Buyer__c,
                    'itembuyName' :line.ASI_CTY_CN_Vendor_Buyer__r.ASI_MFM_Buyer__r.Name,
                    'itemProductId' :line.ASI_CTY_CN_Vendor_Item_Group_Code__c,
                    'itemProductName' :line.ASI_CTY_CN_Vendor_Item_Group_Code__r.Name,
                    'proId' :line.Id,
                    'isEdit':true,
                    'purLineId':line.Id,
                    'deadlineTime':line.ASI_CTY_CN_Vendor_Bidding_Deadline__c,
                    'categoryName':line.ASI_CTY_CN_Vendor_Category__c,
                    'isAllowEdit':line.ASI_CTY_CN_Vendor_IsAllowEdit__c,
                    'isMerged':line.ASI_CTY_CN_Vendor_IsMerged__c,
                    'selsubBrand':line.ASI_CTY_CN_Vendor_SubBrand__c
                  }

                   $scope.periodInfos.push(oldperiodInfo);
                   var proAddressList = [];

                   if(null != line.Address_RequestLine__r)
                   {
                      var timestamp =new Date().getTime();
                      var count = 1;
                      line.Address_RequestLine__r.records.forEach(function(ind){
                         var wareHouseName ='';
                         timestamp = timestamp + count;
                         count ++;
                         if(ind.ASI_CTY_CN_Vendor_Warehouse__r != undefined)
                         {
                            wareHouseName = ind.ASI_CTY_CN_Vendor_Warehouse__r.Name;
                         }
                         var qutletName ='';
                         if(ind.ASI_CTY_CN_Vendor_Outlet__r != undefined)
                         {
                            qutletName = ind.ASI_CTY_CN_Vendor_Outlet__r.Name;
                         }
                         var address ={
                            "address":ind.ASI_CTY_CN_Vendor_Delivery_Address__c||'',
                            "quantity":ind.ASI_CTY_CN_Vendor_Quantity_Required__c,
                            "note":ind.ASI_CTY_CN_Vendor_Note__c||'',
                            "receiptOwner":ind.ASI_CTY_CN_Vendor_Receipt_Owner__c,
                            "proId":line.Id,
                            "receiptOwnerPhone":ind.ASI_CTY_CN_Vendor_Receipt_Phone__c||'',
                            "warehousecode":ind.ASI_CTY_CN_Vendor_Warehouse__c,
                            "qutlet":ind.ASI_CTY_CN_Vendor_Outlet__c,
                            "wareHouseName":wareHouseName,
                            "qutletName":qutletName,
                            "isEdit":true,
                            "addressId":ind.Id,
                            "addressTampd":timestamp,
                            "receiptOwnerId":ind.ASI_CTY_CN_Vendor_ReceiptOwner__c,
                            "contactName" : ind.ASI_CTY_CN_Vendor_ContactName__c
                          };
                          proAddressList.push(address);
                      })
                   }
                   $scope.proAddressMap.set(line.Id,proAddressList);

                })
             }
          }
          else
          {
             $scope.periodInfos.push(periodInfo);
          }
        }


       $scope.subBrandChange = function()
       {
        alert();
       }


       $scope.addItemGroup = function(){
           $scope.count =parseInt($scope.count+1)
           var proId = 'pro_'+$scope.count;

           var deadlineTime = $scope.getDateStr(7);
           var periodInfo={ "status": '{!$Label.ASI_CTY_CN_Vendor_PrStatus_Draft}',
         "proId" :proId,
          "deadlineTime":deadlineTime,
        "sampleRequired":true,
         "isAllowEdit": true};
          $scope.periodInfos.push(periodInfo);
          $scope.reloadtable();
          setTimeout(function() {
             $scope.showdetails(proId);
           }, 100);
       }

       $scope.deleteItemgroup =function(param)
       {
          
          if(confirm('确认删除？')){
            var isallowdelete = true;
              for(var i =0;i<$scope.periodInfos.length;i++)
              {
                 if($scope.periodInfos[i].proId == param )
                 {
                    
                    var delPro = $scope.periodInfos[i];
                    if(!delPro.isMerged)
                    {
                      if(delPro.isEdit)
                      {
                        $scope.delPros.push(delPro.purLineId);
                      }
                      
                      $scope.periodInfos.splice(i,1); 
                      if($scope.proAddressMap.containsKey(param))
                      {
                        
                        console.log($scope.proAddressMap);
                        delete $scope.proAddressMap[param];
                        console.log($scope.proAddressMap);
                       
                      }
                    }
                    else
                    {
                       isallowdelete = false;
                    }
                    
                 }
              }

              if(!isallowdelete)
              {
                 alert('此产品已经合并报价，不允许删除！');
                 return false;
              }
              // $scope.reloadtable();
              $scope.generateTable();
                        //立即刷新
              // $scope.$apply(function(){
                   var timestamp =new Date().getTime();
                   var count =0;
                   var perTeam = [];
                   $scope.periodInfos.forEach(function(e){
                       timestamp +=count;
                        e.$$hashKey = timestamp;
                        count ++;
                        perTeam.push(e);
                   })
              // });
             $scope.periodInfos = perTeam;
          }
           
       }

      $scope.getDateStr = function(AddDayCount) {
               var _date = new Date();
               var currentWeek = _date.getDay();
               _date.setDate(_date.getDate() + AddDayCount); //获取AddDayCount天后的日期  
               var years = _date.getFullYear();
               var months = (_date.getMonth() + 1) < 10 ? "0" + (_date.getMonth() + 1) : (_date.getMonth() + 1); //获取当前月份的日期，不足10补0  
               var days = _date.getDate() < 10 ? "0" + _date.getDate() : _date.getDate(); //获取当前几号，不足10补0  
               var dates = new Date(years, months - 1, days);
               var _week;
               if(dates.getDay() == 0) _week = "周日";
               if(dates.getDay() == 1) _week = "周一";
               if(dates.getDay() == 2) _week = "周二";
               if(dates.getDay() == 3) _week = "周三";
               if(dates.getDay() == 4) _week = "周四";
               if(dates.getDay() == 5) _week = "周五";
               if(dates.getDay() == 6) _week = "周六";
               return years + "-" + months + "-" + days;
        }

      $scope.getDateFormat = function(_date) {
               var currentWeek = _date.getDay();
               _date.setDate(_date.getDate() + 0); //获取AddDayCount天后的日期  
               var years = _date.getFullYear();
               var months = (_date.getMonth() + 1) < 10 ? "0" + (_date.getMonth() + 1) : (_date.getMonth() + 1); //获取当前月份的日期，不足10补0  
               var days = _date.getDate() < 10 ? "0" + _date.getDate() : _date.getDate(); //获取当前几号，不足10补0  
               var dates = new Date(years, months - 1, days);
               var _week;
               if(dates.getDay() == 0) _week = "周日";
               if(dates.getDay() == 1) _week = "周一";
               if(dates.getDay() == 2) _week = "周二";
               if(dates.getDay() == 3) _week = "周三";
               if(dates.getDay() == 4) _week = "周四";
               if(dates.getDay() == 5) _week = "周五";
               if(dates.getDay() == 6) _week = "周六";
               return years + "-" + months + "-" + days;
        }
        

       $scope.showdetails = function(lineId){

         var tr = $("#"+lineId);
         table=$('#dt_itemgroup').DataTable();
        var row = table.row( tr );
        if ( row.child.isShown() ) {
            row.child.hide();
        }else{
            row.child(  $scope.format(row.data(),lineId) ).show();
        }
        // if(e.textContent=='+'){
        //     e.textContent='-';
        // }else{
        //   e.textContent='+';
        // }  
       }

       $scope.cloneProduct = function(param)
       {
            var newCloAddress =[];
            for(var i =0;i<$scope.periodInfos.length;i++)
            {
                 if($scope.periodInfos[i].proId == param )
                 {

                    var cloPro = $scope.periodInfos[i];
                    $scope.count =parseInt($scope.count+1)
                    var proId = 'pro_'+$scope.count;
                    // cloPro.proId = proId;
                    var deadlineTime = $scope.getDateStr(7);
                    var periodInfo={ "status": '{!$Label.ASI_CTY_CN_Vendor_PrStatus_Draft}',
                   "proId" :proId,
                    "deadlineTime":deadlineTime,
                  "sampleRequired":true,
                   "isAllowEdit": true,
                   "totalQty":cloPro.totalQty};
                    if($scope.proAddressMap.containsKey(param))
                    {
                         var cloAddress =  $scope.proAddressMap.get(param);
                         var count = 1;
                         cloAddress.forEach(function(e){
                         var timestamp =new Date().getTime()+count;
                          var newAddr = {};
                          newAddr.proId = proId;
                          newAddr.addressId = null;
                          newAddr.address = e.address;
                          newAddr.contactName = e.contactName;
                          newAddr.note = e.note;
                          newAddr.quantity = e.quantity;
                          newAddr.qutlet = e.qutlet;
                          newAddr.qutletName = e.qutletName;
                          newAddr.receiptOwner = e.receiptOwner;
                          newAddr.receiptOwnerId = e.receiptOwnerId;
                          newAddr.receiptOwnerPhone = e.receiptOwnerPhone;
                          newAddr.wareHouseName = e.wareHouseName;
                          newAddr.warehousecode = e.warehousecode;
                          newAddr.addressTampd = timestamp;
                          count ++;
                          newCloAddress.push(newAddr);
                        })
                        
                    }
                  }
            }

            $scope.proAddressMap.set(proId,newCloAddress)


            $scope.periodInfos.push(periodInfo);
            $scope.reloadtable();
            setTimeout(function() {
             $scope.showdetails(proId);
           }, 100);
       }

      $scope.addAddress =function(itemGroupId)
      {
          $(".shadow").css({'display':'block'});
          $("#configProduct").slideDown('slow');
          $scope.selectItemGroup = itemGroupId;
      }

      $scope.batchAddAddress =function(file,itemGroupId,thisd)
      {
          if (file) {
            Papa.parse(file[0], {
                encoding:"UTF-8",
                complete: function (results) {
                   file.outerHTML = file.outerHTML; 
                    var data = results.data;
                    console.log('data:' + JSON.stringify(data));
                    if (data[data.length - 1] && data[data.length - 1].length == 1) data.pop(); //去除最后一行空白行
                     var result = new Array;
                    if (data.length > 2) {
                        for (var i = 2; i < data.length; i++) {
                         var dataArr = data[i];
                         if (dataArr) {
                          let conPro = {
                              lineNo : dataArr[0].trim(),
                              warehousecode : dataArr[1].trim(),
                              qutlet : dataArr[2].trim(),
                              quantity : dataArr[3].trim(),
                              receiptOwner : dataArr[4].trim(),
                              contactName:dataArr[5].trim(),
                              receiptOwnerPhone:dataArr[6].trim()
                          }
                          //console.log('contract product:' + JSON.stringify(conPro['DH_OS_No_Tax_Price__c']));
                          result.push(conPro);
                      } else {
                          alert('Invalid Address Data!');
                      }
                    }
                   $scope.batchAddAddressDate(itemGroupId,result,thisd);
                 }
                 else
                 {
                   thisd.value = '';
                   alert('导入模板数据为空!');
                 }
                },
                error: function (err, file, inputElem, reason) {
                    console.log("err::>>  ", err);
                    alert(err);
                },
            });
        }
      }

      $scope.batchAddAddressDate=function(itemGroupId,dates,thisd)
      {

        var datewareSet =[];
        var datewarerepeatSet = [];
        var datewarerepeat = '';
        var datequtletSet =[];
        var datequtlerepeatSet = [];
        var datequtlerepeat = '';
        var wareQutNull ='';
        var wareQutNotNull ='';
        var receiptOwnerNull ='';
        var quantityNull = '';
        var lineNull = '';
        var quantityCheck = '';
        var proAddressList = $scope.proAddressMap.get(itemGroupId);
        if(proAddressList ==undefined)
        {
          proAddressList =[];
        }
        dates.forEach(function(ine){

          if(ine.lineNo == '')
          {
            lineNull = '存在序号为空，请填写!';
          }

          if(ine.warehousecode == '' && ine.qutlet == '')
          {
             wareQutNull += ine.lineNo +',';
          }
          if(ine.warehousecode != '' && ine.qutlet != '')
          {
             wareQutNotNull += ine.lineNo +',';
          }
          if(ine.receiptOwner == '')
          {
             receiptOwnerNull += ine.lineNo +',';
          }
          if(ine.quantity == '')
          {
             quantityNull += ine.lineNo +',';
          }

          if(!(/(^[1-9]\d*$)/.test(ine.quantity)))
          {
            quantityCheck += ine.lineNo +',';
          }

          if(ine.warehousecode != '')
          {
            if(datewareSet.indexOf(ine.warehousecode+ine.receiptOwner)>-1)
            {
              datewarerepeatSet.push(ine.warehousecode+ine.receiptOwner);
            }
            else
            {
              datewareSet.push(ine.warehousecode+ine.receiptOwner);
            }
          }

           if(ine.qutlet != '')
          {
            if(datequtletSet.indexOf(ine.qutlet+ine.receiptOwner)>-1)
            {
              datequtlerepeatSet.push(ine.qutlet+ine.receiptOwner);
            }
            else
            {
              datequtletSet.push(ine.qutlet+ine.receiptOwner);
            }
          }

        });



        dates.forEach(function(ine1){

          if(datewarerepeatSet.indexOf(ine1.warehousecode+ine1.receiptOwner)>-1)
          {
              datewarerepeat += ine1.lineNo +',';
          }

           if(datequtlerepeatSet.indexOf(ine1.qutlet+ine1.receiptOwner)>-1)
          {
              datequtlerepeat += ine1.lineNo +',';
          }

        })
        
        if(lineNull !='')
        {
           alert(lineNull);
           thisd.value = '';
           return false;
        }

        if(wareQutNull !='')
        {
           alert('第'+wareQutNull+'行的warehouse/Office(code)和outlet(code)都为空，请填写一个，谢谢！');
           thisd.value = '';
           return false;
        }

        if(wareQutNotNull !='')
        {
           alert('第'+wareQutNotNull+'行的warehouse/Office(code)和outlet(code)都不为空，请确认只填写一个即可，谢谢！');
           thisd.value = '';
           return false;
        }

        // if(receiptOwnerNull !='')
        // {
        //    alert('第'+receiptOwnerNull+'行的receiptOwner为空，请填写一个，谢谢！');
        //    thisd.value = '';
        //    return false;
        // }

        if(quantityNull != '')
        {
           alert('第'+quantityNull+'行的quantity为空，请填写一个，谢谢！');
           thisd.value = '';
           return false;
        }
        if(quantityCheck != '')
        {
           alert('第'+quantityCheck+'行的quantity不是正整数，请重新填写!');
           thisd.value = '';
           return false;
        }
        // if(datewarerepeat !='')
        // {
        //    alert('第'+datewarerepeat+'行存在warehouse/Office(code)和receipt owner重复的记录，请删除其中重复的数据，谢谢！');
        //    thisd.value = '';
        //    return false;
        // }

        // if(datequtlerepeat !='')
        // {
        //    alert('第'+datequtlerepeat+'行存在和outlet(code)和receipt owner重复的记录，请删除其中重复的数据，谢谢！');
        //    thisd.value = '';
        //    return false;
        // }
         
        // 调用后台验证数据准确性和是否重复
        var addressJson = JSON.stringify(dates);
        $("#el_loading").css({'display':'block'});
        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.ASI_CTY_CN_Vendor_PR_PurchaseController.getAddressInfos}',
                            addressJson,
                            function(result, event){
                                console.log(event.status);
                                $("#el_loading").css({'display':'none'});
                                if (event.status) {
                                    console.log(result);
                                    //立即刷新
                                    $scope.$apply(function(){

                                         if(result)
                                         {  
                                            var successCount =0;
                                            var failCount =0;
                                           
                                            result.forEach(function(re){
                                              if(re.results)
                                              {
                                                
                                                   var newAddress = re.address + re.receiptOwner;
                                                   var flag = false;
                                                   proAddressList.forEach(function(old){
                                                    var oldAddress = old.address + old.receiptOwner;
                                                    if(newAddress == oldAddress)
                                                    {
                                                       //flag = true;
                                                    }
                                                   

                                                   })
                                                   if(!flag)
                                                   {
                                                      var timestamp =new Date().getTime()+successCount;
                                                      var address ={
                                                      "wareHouseName":re.warehousecode||'',
                                                      "warehousecode":re.warehouseId,
                                                      "qutletName" :re.qutlet||'',
                                                      "qutlet":re.qoutletId,
                                                      "address":re.address||'',
                                                      "quantity":re.quantity,
                                                      "receiptOwner":re.receiptOwner||'',
                                                      "receiptOwnerPhone":re.receiptOwnerPhone,
                                                      "note":re.note||'',
                                                      "proId":itemGroupId,
                                                      "addressTampd": timestamp,
                                                      "receiptOwnerId":re.receiptOwnerId,
                                                      "contactName":re.contactName,
                                                      "reason":''
                                                      //"addressId":$scope.addressId
                                                      };
                                                      re.reason = '';
                                                      proAddressList.push(address);
                                                       successCount++;
                                                   }
                                                   else
                                                   {
                                                      re.results = 'false';
                                                      re.reason = '此收货地址已经添加';
                                                      failCount++;
                                                   }
                                              }
                                              else
                                              {
                                                failCount++;
                                              }
                                            });
                                            alert('导入成功：'+successCount+'\n'+'导入失败：'+failCount+'\n'+'详情请查看导入结果excel');
                                             $scope.proAddressMap.set(itemGroupId,proAddressList);
                                                var tr = $("#"+itemGroupId);
                                                table=$('#dt_itemgroup').DataTable();
                                                var row = table.row( tr );
                                                row.child(  $scope.format(row.data(),itemGroupId) ).show();
                                            $scope.importResult(result);
                                         }
                                       
                                    });
                                } else if (event.type === 'exception') {
                                    thisd.value = '';
                                    alert(event.message+event.where);
                                } else {
                                    alert(event.message);
                                }
                                $scope.$apply(function(){
                                       $("#el_loading").css({'display':'none'});
                                });
                            }, 
                            {escape: false}
                        );
      }

      $scope.importResult = function(data)
      {
          var csv = '填写说明：1、warehouse/Office(code) outlet(code)只需填写一个即可；2、当填写warehouse/Office(code)时，receipt owner请填写系统已经存在用户的邮箱；3、其他非warehouse/office和非outlet的地址只能在系统中手动输入'+ '\n';
           csv +='LineNo,warehouse/Office(code),outlet(code),quantity,receipt owner,contact name, contact phone,results,reason'+'\n';
          var now   = new Date();  
          var dateString =now.getFullYear().toString()+'-'+(now.getMonth()+1).toString()+'-'+now.getDate().toString();
          data.forEach(function(row) {
                  csv += row.lineNo+','+row.warehousecode+','+row.qutlet+','+row.quantity+','+row.receiptOwner+','+row.contactName+','+row.receiptOwnerPhone+','+row.results+','+row.reason;
                  csv += "\n";
          });
          var hiddenElement = document.createElement('a');
          hiddenElement.href = 'data:text/csv;charset=utf-8,\uFEFF' + encodeURIComponent(csv);
          hiddenElement.target = '_blank';
          hiddenElement.download = 'Address Import Result'+dateString+'.csv';
            document.body.appendChild(hiddenElement); // Required for FireFox browser
          hiddenElement.click();
      }

      $scope.downloadTemplate = function()
      {
         let returnVal = '填写说明：1、warehouse/Office(code) outlet(code)只需填写一个即可；2、当填写warehouse/Office(code)时，receipt owner请填写系统已经存在用户的邮箱；3、其他非warehouse/office和非outlet的地址只能在系统中手动输入'+ '\n';
          returnVal += 'LineNo,warehouse/Office(code),outlet(code),quantity(必填),receipt owner(非必填),contact name(非必填), contact phone(非必填)'+ '\n';
           returnVal += '1,398POP80,,100,test.@pernod-ricard.com,test,13560064517'+ '\n';
           returnVal += '2,,OFSHA17379,100,test.@pernod-ricard.com,test,13560064517'+ '\n';
        //console.log('CSV:' + JSON.stringify(csv));
        var hiddenElement = document.createElement('a');
        hiddenElement.href = 'data:text/csv;charset=utf-8,\uFEFF' + encodeURIComponent(returnVal);
        hiddenElement.target = '_self';
        var fileName = 'AddressImport.csv';
        hiddenElement.download = fileName; // CSV file Name* you can change it.[only name not .csv]
        document.body.appendChild(hiddenElement); // Required for FireFox browser
        hiddenElement.click(); // us
      }

      $scope.saveAddress = function()
      {
          var selectItemGroup = $scope.selectItemGroup;
          var proAddressList = $scope.proAddressMap.get(selectItemGroup);
          if(($scope.wareHouseId == undefined || $scope.wareHouseId == '') && $scope.wareHouseName != '' && $scope.wareHouseName != undefined)
          {
            alert('Warehouse/Office在系统中不存在!');
            return false;
          }
          if(($scope.qutletId == undefined || $scope.qutletId == '') && $scope.qutletName != '' && $scope.qutletName != undefined)
          {
            alert('Outlet在系统中不存在!');
             return false;
          }
          if($scope.wareHouseId == undefined )
          {
            $scope.wareHouseId = '';
            $scope.wareHouseName = '';
          }

          if($scope.qutletId == undefined)
          {
             $scope.qutletId = '';
             $scope.qutletName = '';
          }

          if($scope.receiptOwnerPhone == undefined )
          {
            $scope.receiptOwnerPhone = '';
          }

          if($scope.note == undefined)
          {
             $scope.note = '';
          }
          
          if($scope.addressName =='' || $scope.addressName == undefined)
          {
             alert('Delivery Address 不能为空！');
             return false;
          }

           if($scope.receiptOwner =='' || $scope.receiptOwner == undefined)
          {
             $scope.receiptOwnerId = $scope.userId;
              $scope.receiptOwner = $scope.username ;
          }

          if(($scope.receiptOwnerId =='' || $scope.receiptOwnerId ==undefined) && '' != $scope.receiptOwner)
          {
            alert('Receipt Owner 在系统中不存在！');
             return false;
          }

           if($scope.reqQuantity =='' || $scope.reqQuantity == undefined)
          {
             alert('Quantity Required 不能为空！');
             return false;
          }
          
          if($scope.contactName =='' || $scope.contactName == undefined)
          {
             alert('Contact Name 不能为空！');
             return false;
          }

          if($scope.receiptOwnerPhone =='' || $scope.receiptOwnerPhone == undefined)
          {
             alert('Contact Phone 不能为空！');
             return false;
          }

          // if(!(/1[3|4|6|9|2|5|7|8|]\d{9}/.test($scope.receiptOwnerPhone))){ 
          //   alert("Receipt Phone有误，请重填");  
          //   return false; 
          // } 

          if(!(/(^[1-9]\d*$)/.test($scope.reqQuantity)))
          {
             alert("Quantity Required应为正整数");
             return false;
          }

          if($scope.wareHouseId !='' && $scope.qutletId != '')
          {
             alert('WareHouse/Office和Outlet只能填写一个!');
             return false;
          }

          // 获取总数量
          var totalQty = 0;
          $scope.periodInfos.forEach(function(por){
             
             if(por.proId == selectItemGroup)
             {
                totalQty = por.totalQty;
             }
          })

          var fillQty = 0;
          var flag = false;
          fillQty = fillQty + parseInt($scope.reqQuantity);
          if(proAddressList == undefined)
          {
             proAddressList =[];
          }
          else
          {   
              var newAddressInfo = $scope.addressName + $scope.receiptOwner;
             
              proAddressList.forEach(function(e){
                if(e.addressTampd != $scope.addressTampd)
                {
                  var addressInfo = e.address+e.receiptOwner;
                  if(newAddressInfo == addressInfo )
                  {
                     flag = true;
                  }
                }
                fillQty += parseInt(e.quantity);
              });

              
          }
          if($scope.isEditAddress)
          {
              var proAddressList = $scope.proAddressMap.get($scope.selectItemGroup);
              proAddressList.forEach(function(index){

                if(index.addressTampd == $scope.addressTampd)
                {
                  fillQty = fillQty - parseInt(index.quantity);
                  // if($scope.addressName + $scope.receiptOwner == index.address+index.receiptOwner)
                  // {
                  //   flag = false;
                  // }
                  index.wareHouseName = $scope.wareHouseName;
                  index.warehousecode = $scope.wareHouseId;
                  index.qutletName = $scope.qutletName;
                  index.qutlet = $scope.qutletId;
                  index.address = $scope.addressName;
                  index.quantity = $scope.reqQuantity;
                  index.receiptOwner = $scope.receiptOwner;
                  index.receiptOwnerPhone = $scope.receiptOwnerPhone;
                  index.note = $scope.note;
                  index.receiptOwnerId = $scope.receiptOwnerId;
                  index.contactName = $scope.contactName;

                }

              });
             
              if(fillQty>totalQty)
              {
                alert('产品下所有地址的送货数量之和大于产品订购的总数量，请重新填写送货数量!')
                return false;
              }
              // if(flag)
              // {
              //    alert('此地址下的接收人信息已经添加过，请修改地址或者接收人!');
              //    return false;
              // }
             $scope.isEditAddress = false;
          }
          else
          {

              var timestamp =new Date().getTime();
              var address ={
                  "wareHouseName":$scope.wareHouseName,
                  "warehousecode":$scope.wareHouseId,
                  "qutletName" :$scope.qutletName,
                  "qutlet":$scope.qutletId,
                  "address":$scope.addressName,
                  "quantity":$scope.reqQuantity,
                  "receiptOwner":$scope.receiptOwner,
                  "receiptOwnerPhone":$scope.receiptOwnerPhone,
                  "note":$scope.note,
                  "proId":selectItemGroup,
                  "receiptOwnerId":$scope.receiptOwnerId,
                  "addressTampd": timestamp,
                  "contactName" : $scope.contactName
                  //"addressId":$scope.addressId
                  };

                if(fillQty>totalQty)
                {
                  alert('产品下所有地址的送货数量之和大于产品订购的总数量，请重新填写送货数量!')
                  return false;
                }
                // if(flag)
                // {
                //    alert('此地址下的接收人信息已经添加过，请修改地址或者接收人!');
                //    return false;
                // }
                proAddressList.push(address);
                $scope.proAddressMap.set(selectItemGroup,proAddressList);
          }
         
          $scope.wareHouseName ='';
          $scope.wareHouseId = '';
          $scope.qutletName = '';
          $scope.qutletId ='';
          $scope.addressName ='';
          $scope.reqQuantity ='';
          $scope.receiptOwner ='';
          $scope.receiptOwnerPhone ='';
          $scope.receiptOwnerId = '';
          $scope.note ='';
          $scope.contactName = '';
          $(".shadow").css({'display':'none'});
          
          $("#configProduct").hide();

          var tr = $("#"+selectItemGroup);
          table=$('#dt_itemgroup').DataTable();
          var row = table.row( tr );
          row.child(  $scope.format(row.data(),selectItemGroup) ).show();
      }

      $scope.modAddress = function(param)
      {
        $scope.isEditAddress = true;
        var mdyPro = param.substring(0,param.indexOf('@'));
        var mdyAddress = param.substring(param.indexOf('@')+1);
        var proAddressMap = $scope.proAddressMap;
        var proAddressList = $scope.proAddressMap.get(mdyPro);
        proAddressList.forEach(function(index){

          if(index.addressTampd == mdyAddress)
          {
            $scope.wareHouseName = index.wareHouseName;
            $scope.wareHouseId = index.warehousecode;
            $scope.qutletName = index.qutletName;
            $scope.qutletId = index.qutlet;
            $scope.addressName = index.address;
            $scope.reqQuantity = index.quantity;
            $scope.receiptOwner = index.receiptOwner;
            $scope.receiptOwnerId = index.receiptOwnerId;
            $scope.receiptOwnerPhone = index.receiptOwnerPhone;
            $scope.note = index.note;
            $scope.selectItemGroup = mdyPro;
            $scope.addressTampd = mdyAddress;
            $scope.contactName = index.contactName ;
          }

        });
        $scope.addAddress(mdyPro);
      }
      
      $scope.cloneAddress = function(param)
      {
        var mdyPro = param.substring(0,param.indexOf('@'));
        var mdyAddress = param.substring(param.indexOf('@')+1);
        var proAddressMap = $scope.proAddressMap;
        var proAddressList = $scope.proAddressMap.get(mdyPro);
        proAddressList.forEach(function(index){

          if(index.addressTampd == mdyAddress)
          {
            $scope.wareHouseName = index.wareHouseName;
            $scope.wareHouseId = index.warehousecode;
            $scope.qutletName = index.qutletName;
            $scope.qutletId = index.qutlet;
            $scope.addressName = index.address;
            $scope.reqQuantity = index.quantity;
            $scope.receiptOwner = index.receiptOwner;
            $scope.receiptOwnerId = index.receiptOwnerId;
            $scope.receiptOwnerPhone = index.receiptOwnerPhone;
            $scope.note = index.note;
            $scope.selectItemGroup = mdyPro;
            $scope.addressTampd = mdyAddress;
            $scope.contactName = index.contactName ;

            var timestamp =new Date().getTime();
            var address ={
                  "wareHouseName":index.wareHouseName,
                  "warehousecode":index.warehousecode,
                  "qutletName" :index.qutletName,
                  "qutlet":index.qutlet,
                  "address":index.address,
                  "quantity":index.quantity,
                  "receiptOwner":index.receiptOwner,
                  "receiptOwnerPhone":index.receiptOwnerPhone,
                  "note":index.note,
                  "proId":mdyPro,
                  "receiptOwnerId":index.receiptOwnerId,
                  "addressTampd": timestamp,
                  "contactName" : index.contactName
                  //"addressId":$scope.addressId
            };
            proAddressList.push(address);
          }

        });
       
        $scope.proAddressMap.set(mdyPro,proAddressList);
        var tr = $("#"+mdyPro);
        table=$('#dt_itemgroup').DataTable();
        var row = table.row( tr );
        row.child(  $scope.format(row.data(),mdyPro) ).show();
      }
      $scope.delAddress = function(param)
      {
        if(confirm('是否确认删除？'))
        {
            var delPro = param.substring(0,param.indexOf('@'));
            var delAddress = param.substring(param.indexOf('@')+1);
            var proAddressMap = $scope.proAddressMap;
            var proAddressList = $scope.proAddressMap.get(delPro);
            for(var i=0;i<proAddressList.length;i++)
            {
              if(proAddressList[i].addressTampd == delAddress)
              {
                if(proAddressList[i].isEdit)
                {
                 $scope.delProAddress.push(proAddressList[i].addressId);
                }
                proAddressList.splice(i,1);

              }
            }
            var tr = $("#"+delPro);
            table=$('#dt_itemgroup').DataTable();
            var row = table.row( tr );
            row.child(  $scope.format(row.data(),delPro) ).show();
        }
      }

      $scope.saveInfoFromTable = function()
      {
       
        var purchaseHeadJson = $scope.recordId;

        if($scope.periodInfos.length<1)
        {
          alert('请至少添加一个产品.');
          return false;
        }
        
        // $scope.periodInfos.forEach(function(e){
        //    e.deadlineTime = $scope.getDateFormat(e.deadlineTime);
        // });
        

        // 组装itemGroup
        var periodInfosJson = JSON.stringify($scope.periodInfos);

        // 判断产品下面至少要有一条地址信息,以及产品和数量必填
        // 组装地址
        var addrList =[];
        var noAddresspro = '';
        var noPro = '';
        var noQuanty = '';
        var noExPro = '';
        var noEqualQty = '';
        var noCateName = '';
        var noSubBrand = '';
        var count = 1;
        $scope.periodInfos.forEach(function(index){
          if(index.itemProductName == '' || index.itemProductName == undefined)
          {
            noPro += count+',';
          }
          if('' != index.itemProductName && index.itemProductId == '')
          {
            noExPro += count+',';
          }
          if(index.totalQty == '' || index.totalQty == undefined)
          {
            noQuanty += count+',';
          }

          if(index.categoryName == 'undefined' || index.itembuyName == 'undefined')
          {
            noCateName += count+',';
          }

          if(index.selsubBrand == undefined || index.selsubBrand == '')
          {
            noSubBrand += count+',';
          }
         
          if($scope.proAddressMap.containsKey(index.proId) && $scope.proAddressMap.get(index.proId).length>0)
          {
             addrList = addrList.concat($scope.proAddressMap.get(index.proId));
              var actualQty = index.totalQty;
              var fillQty = 0;
              var proAddressList = $scope.proAddressMap.get(index.proId);
              proAddressList.forEach(function(e){
                 fillQty += parseInt(e.quantity);
              })
              if(actualQty != fillQty)
              {
                noEqualQty += count+',';
              }
          }
          else
          {
             noAddresspro += count +',';
          }
         


           count ++;
        });

        if('' != noPro)
        {
          alert('第'+noPro+'行的Item Group 为空，请填写!');
          return false;
        }

        if('' != noExPro)
        {
           alert('第'+noExPro+'行的Item Group 信息在系统中找不到,请重新选择Item Group!');
           return false;
        }

        if('' != noCateName)
        {
            alert('第'+noCateName+'行的Item Group 的Category或者Buyer的信息没有维护，此产品不可以订购，请重新选择Item Group!');
            return false;
        }

        if('' != noQuanty)
        {
          alert('第'+noQuanty+'行的Total Quantity为空，请填写!');
          return false;
        }
        
        if('' != noAddresspro)
        {
          alert('第'+noAddresspro+'行的产品的地址信息为空，请至少添加一条地址信息!');
          return false;
        }

        if('' != noEqualQty)
        {
          alert('第'+noEqualQty+'行的产品的订货数量与发货数量不相等，请重新填写发货数量!');
          return false;
        }

        if('' != noSubBrand)
        {
          alert('第'+noSubBrand+'行的产品的Sub Brand为空，请选择!');
          return false;
        }
       
      
        var proAddressMapJson = JSON.stringify(addrList);

        // 删除的产品地址信息组装
        var delProAddressJson = JSON.stringify($scope.delProAddress);

        // 删除产品信息组装
        var delProsJson = JSON.stringify($scope.delPros);
        $("#el_loading").css({'display':'block'});
        
        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.ASI_CTY_CN_Vendor_PR_PurchaseController.savePurchase}',
                            purchaseHeadJson,periodInfosJson,proAddressMapJson,delProsJson,delProAddressJson,
                            function(result, event){
                                console.log(event.status);
                                $("#el_loading").css({'display':'none'});
                                if (event.status) {
                                    console.log(result);
                                    //立即刷新
                                    $scope.$apply(function(){

                                         if(result.flag == 'success')
                                         {
                                             window.location = '/'+result.objId;
                                         }
                                       
                                    });
                                } else if (event.type === 'exception') {
                                    alert(event.message+event.where);
                                } else {
                                    alert(event.message);
                                }
                                $scope.$apply(function(){
                                        $scope.reloading=false;
                                });
                            }, 
                            {escape: false}
                        );
        
      }

      

      $scope.clsoeConfig = function(){

          $(".shadow").css({'display':'none'});
          
          $("#configProduct").hide(); 
          $scope.isEditAddress = false;
       }

      $scope.format =function(d,lineId){
        var newlineId = "'"+lineId+"'";
        var tablehtml ='';
        var isEdit = true;
        $scope.periodInfos.forEach(function(pro){
          if(lineId == pro.purLineId && !pro.isAllowEdit)
          {
            isEdit = false;
          }
        })
         tablehtml +='<div id="item_product_1"><table class="list" border="0" cellpadding="0" cellspacing="0" style="width:95%;left:5%;position: relative;"><tr style="background: antiquewhite;"><td style="width:1%">';
          if(isEdit)
          {
            // tablehtml += '<a ng-click="addAddress('+newlineId+')">Add Address</a>';
            tablehtml += '<input type ="button" ng-click="addAddress('+newlineId+')" value="Add Address"></input>';
          }
          tablehtml += '</td><td style="width:55%"></td>';
          if(isEdit)
          {
           
           tablehtml += '<td><input id="fileUp_'+newlineId+'" type="file" value="批量上传" accept=".csv" onchange="angular.element(this).scope().batchAddAddress(this.files,'+newlineId+',this)" ></input></td><td><a ng-click="downloadTemplate()">下载模板</a></td>';
          }
         tablehtml +='</tr></table>';
         tablehtml +='<table id="myAddressId" class="list" border="0" cellpadding="0" cellspacing="0" style="width:95%;left:5%;position: relative;"><tr class="headerRow" ><th class="headerRow"></th><th class="headerRow">Warehouse/Office</th><th class="headerRow">Outlet</th><th class="headerRow">Address</th><th class="headerRow">Quantity</th><th>Receipt Owner</th><th>Contact Name</th><th>Contact Phone</th><th>Note</th></tr>';
        var addressList = $scope.proAddressMap.get(lineId);
        if(addressList !=undefined)
        {
            addressList.forEach(function(e){
            var addId = "'"+lineId+'@'+e.addressTampd+"'";
            tablehtml +='<tr class="dataRow even first">';
            tablehtml+='<td  class="dataCell ">';
            if(isEdit)
            {
              tablehtml += '<a ng-click="delAddress('+addId+')" style="color:red">D</a>|<a ng-click="modAddress('+addId+')" style="color:indianred">M</a>|<a ng-click="cloneAddress('+addId+')" style="color:red">C</a>';
            }
            tablehtml+='</td>';
            tablehtml+='<td  class="dataCell ">'+e.wareHouseName+'</td>';
            tablehtml+='<td  class="dataCell ">'+e.qutletName+'</td>';
            tablehtml+='<td  class="dataCell ">'+e.address+'</td>';
            tablehtml+='<td  class="dataCell ">'+e.quantity+'</td>';
            tablehtml+='<td  class="dataCell ">'+e.receiptOwner+'</td>';
             tablehtml+='<td  class="dataCell ">'+e.contactName+'</td>';
            tablehtml+='<td  class="dataCell ">'+e.receiptOwnerPhone+'</td>';
             tablehtml+='<td  class="dataCell ">'+e.note+'</td>';
            tablehtml +='</tr>';

          })
        }
        
        tablehtml+='</table></div>';
         var $html = $compile(tablehtml)($scope); 
        return  $html;   

    };

         
        $scope.$on('generateTable', function() {
        // $("#showTable").dataTable().fnDestroy();
        // alert($("#showTable").dataTable());
        $("table[id $='dt_itemgroup']").DataTable({
            "sDom": 'WRC<"clear">lftipr', 
            retrieve: true,
            searching: true,
            ordering:false,
            "paging": true,
            "sPaginationType": "full_numbers",
            "aLengthMenu" : [5,10,25],//更改显示记录数选项 
            "iDisplayLength" : 10, //默认显示的记录数 
            "aoColumnDefs": [{"bVisible": false,"aTargets": []}],
            "language": { //设置页面各个文字的显示
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "从_MAX_条记录中获取",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                'oPaginate': {
                'sFirst': '首页',
                'sPrevious': '上一页',
                'sNext': '下一页',
                'sLast': '末页'
                }
            },
        });

        $('#dt_itemgroup_filter').css({'display':'none'});
        $('#dt_itemgroup_info').css({'float':'left'});
    });

      $scope.generateTable=function(){
         table=$('#dt_itemgroup').DataTable();
         table.destroy(false);
        // table.clear();
            
        };

      $scope.reloadtable=function(){
        table=$('#dt_itemgroup').DataTable();
        table.destroy(false);
            
        };

      $scope.cancel = function()
      {
        window.location = '/'+$scope.recordId;
      }

 

    });

   

     myApp.directive('reloadcasetable', function($timeout){
        return {
            restrict: 'A',
            link: function($scope, $element, $attr){
                if($scope.$last == true){
                    console.log('product执行完毕');
                    $timeout(function() {
                           $scope.$emit('generateTable');
                    });
                }
            }
    
            }
    });

     

    function autoSearchProduct(obj) {
    let el1 =($(obj).next());
    el1.val('').trigger('input');
    //var proIds = [];
    var scope = angular.element('[ng-controller=myCtrl]').scope();
    var purchaseHeadJson = scope.recordId;
    // scope.periodInfos.forEach(function(e){
    //   proIds.push(e.itemProductId);
    // })
    // var proIdsJson = JSON.stringify(proIds);
    $(obj).autocomplete({
        minLength: 0,
        source: function(request, response) {
            var queryStr=$(obj).val();
          
            if (!queryStr || !$.trim(queryStr)) {
                return ;
            }
            queryTerm = request.term;
            $("#el_loading").css({'display':'block'});
            ASI_CTY_CN_Vendor_PR_PurchaseController.ajaxSearchProduct(
                queryStr,
                function(result, event) {
                   $("#el_loading").css({'display':'none'});
                    if (event.type == 'exception') {
                       
                    } 
                    else {
                        sObjects = result;
                        if (0 == sObjects.length) {
                           // $(x).val(null);
                        } else {
                            response(sObjects);
                        }
                    }
                }
            );
        },
        focus: function(event, ui) {
            return false;
        },
        select: function(event, ui) {
            $(obj).val(ui.item.Name.replace(/amp;/g, ''));
          
             let el =($(obj).next());
             el.val(ui.item.Id).trigger('input');
             let cate = el.parent().next().children();
             // cate[0].val(ui.item.cateId).trigger('input');
             // cate[1].val(ui.item.cateName).trigger('input');
             cate[1].value =ui.item.cateId;
             cate[0].value =ui.item.cateName;
             cate.trigger('input');

             let buy = el.parent().next().next().next().children();
             buy[1].value =ui.item.buyerId;
             buy[0].value =ui.item.buyerName;
             buy.trigger('input');
             let subBrand = el.parent().next().next().next().next().children();
             
             var scope = angular.element('[ng-controller=myCtrl]').scope();
             subBrand[0].value = '1';
             scope.subBrandsJson.forEach(function(e){
                if(e.Id == ui.item.subBrand)
                {
                  subBrand[0].value = ui.item.subBrand;
                  subBrand[1].value = ui.item.subBrand;
                }
             });
             subBrand.trigger('select');
             subBrand.trigger('input');
            return false;
        },
        change: function(event, ui) {
            return false;
        }
    }).data("uiAutocomplete")._renderItem = function(ul, item) {
            var entry =item.Name;
            return $("<li>").data("item.autocomplete", item).append($("<a>").html(entry))
                .appendTo(ul);
    };
    setTimeout(function () {
        $(obj).autocomplete("search", $(obj).val());
    }, 0);
}


 function autoWarehouse(obj,type) {
    let el1 =($(obj).next());
    el1.val('').trigger('input');
    $(obj).autocomplete({
        minLength: 0,
        source: function(request, response) {
            var queryStr=$(obj).val();
          
            if (!queryStr || !$.trim(queryStr)) {
                return ;
            }
            queryTerm = request.term;
            $("#el_loading").css({'display':'block'});
            ASI_CTY_CN_Vendor_PR_PurchaseController.ajaxSearchWarehouse(
                queryStr,type,
                function(result, event) {
                   $("#el_loading").css({'display':'none'});
                    if (event.type == 'exception') {
                       
                    } 
                    else {
                        sObjects = result;
                        if (0 == sObjects.length) {
                           // $(x).val(null);
                        } else {
                            response(sObjects);
                        }
                    }
                }
            );
        },
        focus: function(event, ui) {
            return false;
        },
        select: function(event, ui) {
            $(obj).val(ui.item.Name.replace(/amp;/g, ''));
          
             let el =($(obj).next());
             el.val(ui.item.Id).trigger('input');
              var scope = angular.element('[ng-controller=myCtrl]').scope();
                scope.$apply(function() {
                    //将客户ID赋值给SCOPE的MODEL
                    scope.addressName = ui.item.ASI_FOC_Full_Address__c;
                    scope.receiptOwnerPhone = ui.item.ASI_FOC_Phone_Number__c;
                    scope.contactName = ui.item.ASI_FOC_Contact__c;
                });
            return false;
        },
        change: function(event, ui) {
            return false;
        }
    }).data("uiAutocomplete")._renderItem = function(ul, item) {
            var entry =item.Name;
            return $("<li>").data("item.autocomplete", item).append($("<a>").html(entry))
                .appendTo(ul);
    };
    setTimeout(function () {
        $(obj).autocomplete("search", $(obj).val());
    }, 0);
}

function autoUser(obj) {
    let el1 =($(obj).next());
    el1.val('').trigger('input');
    $(obj).autocomplete({
        minLength: 0,
        source: function(request, response) {
            var queryStr=$(obj).val();
          
            if (!queryStr || !$.trim(queryStr)) {
                return ;
            }
            queryTerm = request.term;
            $("#el_loading").css({'display':'block'});
            ASI_CTY_CN_Vendor_PR_PurchaseController.ajaxSearchUser(
                queryStr,
                function(result, event) {
                   $("#el_loading").css({'display':'none'});
                    if (event.type == 'exception') {
                       
                    } 
                    else {
                        sObjects = result;
                        if (0 == sObjects.length) {
                           // $(x).val(null);
                        } else {
                            response(sObjects);
                        }
                    }
                }
            );
        },
        focus: function(event, ui) {
            return false;
        },
        select: function(event, ui) {
            $(obj).val(ui.item.Name.replace(/amp;/g, ''));
          
             let el =($(obj).next());
             el.val(ui.item.Id).trigger('input');
              var scope = angular.element('[ng-controller=myCtrl]').scope();
                scope.$apply(function() {
                    //将客户ID赋值给SCOPE的MODEL
                    scope.receiptOwnerId = ui.item.Id;
                });
            return false;
        },
        change: function(event, ui) {
            return false;
        }
    }).data("uiAutocomplete")._renderItem = function(ul, item) {
            var entry =item.Name+' '+item.Email;
            return $("<li>").data("item.autocomplete", item).append($("<a>").html(entry))
                .appendTo(ul);
    };
    setTimeout(function () {
        $(obj).autocomplete("search", $(obj).val());
    }, 0);
}

</script>

</apex:page>