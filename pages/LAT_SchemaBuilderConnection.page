<apex:page controller="LAT_SchemaBuilderConnectionController" showheader="false" applyBodyTag="false" applyHtmlTag="false" standardstylesheets="false" tabStyle="Account" title="Waka Waka Builder"  sidebar="false" lightningStylesheets="true"  >

<!-- applyHtmlTag="false" applyBodyTag="false" -->
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >

<head>
    <!-- <link rel="stylesheet" type="text/css" href="static/assets/css/demo.css"> -->
    <title>Schema Form Builder</title>
    <apex:stylesheet value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/css/demo.css')}"/>
    <!-- <link rel="stylesheet" type="text/css" href="static/styles/salesforce-lightning-design-system.min.css"> -->
    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" />
    <apex:slds />
    <style>
        .form-wrap.form-builder .frmb .form-elements .false-label:first-child, .form-wrap.form-builder .frmb .form-elements label:first-child {
            margin-right: 0;
        }


        .form-wrap.form-builder .relationFields-wrap input.form-control, .form-wrap.form-builder .object-wrap input.form-control {
            color: #2183c1!important;
            background: #daf1ff url(/_slds/images/logo.svg) no-repeat center right;
            background-size: 30px;
            font-weight: bold;
        }

        html .slds-scope .slds-form-element__legend {
            font-weight: 700;
            float: left;
            font-size: 18px;
            margin-top: 18px;
            text-transform: uppercase;
            color: #0e5613;


        }

        .slds-scope .error .slds-badge {
            background: #9f0000;
            color: #fff;
        }

        .slds-scope  .success .slds-badge {
            background: green;
            color: #fff;
        }

        .slds-scope .slds-badge {
            vertical-align: middle!important;
            display: block;
            margin-bottom: 5px;
            text-align: center;
        }
    </style>
</head>



<body class="slds-scope">
    <div class="slds ">
    <div class="demo-only"  id="saving" style="display: none;">
      <div class="slds-notify_container">
        <div class="slds-notify slds-notify_toast" role="status">
          <div class="slds-notify__content">
            <h2 class="slds-text-heading_small "><strong></strong><span></span></h2>
          </div>
        </div>
      </div>
    </div>

    <!-- <div class="slds-form-element"  >
        <span class="slds-badge">


        </span>
    </div> -->

        <!-- PAGE HEADER -->
        <div class="slds-page-header" role="banner">

            <!-- LAYOUT GRID -->
            <div class="slds-grid ">

                <!-- GRID COL -->
                <div class="slds-col">

                    <!-- HEADING AREA -->
                    <!-- MEDIA OBJECT = FIGURE + BODY -->
                    <div class="slds-media">

                        <div class="slds-media__figure">
                            <span class="slds-icon__container slds-icon__container--circle slds-icon-action-following">
                                <svg aria-hidden="true" class="slds-icon slds-icon--medium ">

                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#database')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>

                                    <!-- <use xlink:href="static/icons/action-sprite/svg/symbols.svg#new_custom34"></use> -->
                                </svg>
                            </span>
                        </div>

                        <div class="slds-media__body">
                            <p class="slds-text-heading--label">{!fbs.Name} form connection</p>
                            <h1 class="slds-text-heading--medium"> {!connection.Name}
                            </h1>
                            <!-- <p class="slds-text-body_small">Total: xxxx  Pages</p> -->
                        </div>

                    </div>
                    <!-- / MEDIA OBJECT -->
                    <!-- /HEADING AREA -->

                </div>
                <!-- /GRID COL -->

                <!-- GRID COL -->
                <div id="newAct" class="slds-col slds-no-flex slds-align-middle">



                </div>
                <!-- / GRID COL -->

            </div>
            <!-- / LAYOUT GRID -->

        </div>
        <!-- / PAGE HEADER

        <div class="loader" style="height: 100%;width: 100%;position: fixed;background: #fff;z-index: 999;opacity: 0.8;top: 0;">
        <div role="status" class="slds-spinner slds-spinner_large">
        <span class="slds-assistive-text">Loading</span>
        <div class="slds-spinner__dot-a"></div>
        <div class="slds-spinner__dot-b"></div>
    </div>
</div> -->
<div class="content slds-">

    <fieldset class="slds-form-element slds-form_compound">
        <legend class="slds-form-element__legend slds-form-element__label">Connection Info</legend>
        <div class="slds-form-element__control">
            <div class="slds-form-element__group">
                <div class="slds-form-element__row">
                    <div class="slds-form-element slds-size_5-of-12">
                        <label class="slds-form-element__label" for="input-01"> <abbr class="slds-required" title="required">* </abbr>Schema Form </label>
                        <div class="slds-form-element__control">
                            <input type="text" id="input-01" disabled="disabled" value="{!fbs.Name}" class="slds-input" />
                        </div>
                    </div>
                    <div class="slds-form-element slds-size_5-of-12">
                        <label class="slds-form-element__label" for="input-02"> <abbr class="slds-required" title="required">* </abbr>Salesforce Object</label>
                        <div class="slds-form-element__control">
                        <div class="slds-form-element">
                              <!-- <label class="slds-form-element__label" for="text-input-id-1">Input Label</label> -->
                              <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left-right">
                                <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#salesforce1')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
                                </svg>
                                <input id="objectName" class="slds-input" onclick="openLookup('objectName')" type="text" value="{!connection.ObjectLabel__c}" />
                                <input id="objectApiName" class="slds-input"  type="hidden" value="{!connection.ObjectName__c}" />
                                <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" onclick="clearObject();" title="Clear">
                                  <svg class="slds-button__icon slds-icon-text-light" aria-hidden="true">
                                  <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#clear')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
                                  </svg>
                                  <span class="slds-assistive-text">Clear</span>
                                </button>
                              </div>
                            </div>

                            <!-- <input type="text" id="input-02" class="slds-input" /> -->
                        </div>
                    </div>

                        <div class="slds-form-element slds-size_1-of-12">
                            <label class="slds-form-element__label" for="input-04">Sequence</label>
                            <div class="slds-form-element__control">
                                <input type="number" id="sequence" class="slds-input" value="{!connection.Sequence__c}" />
                            </div>
                        </div>
                        <div class="slds-form-element slds-size_1-of-12">
                                <label class="slds-form-element__label" for="isActive">Is Active?</label>
                                <div class="slds-form-element__control">
                                <div class="slds-checkbox_add-button">
                                <input class="slds-assistive-text" disabled="disabled" type="checkbox" id="isActive" value="activAe" />
                                <label for="isActive" class="slds-checkbox_faux">
                                <span class="slds-assistive-text">Is Active</span>
                                </label>
                                </div>
                                </div>
                            </div>
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset class="slds-form-element slds-form_compound slds-form-element_address">
        <legend class="slds-form-element__legend slds-form-element__label">Connection Config</legend>
        <div class="slds-form-element__control">
            <div class="slds-form-element__group">

                <div class="slds-form-element__row">


                    <div class="slds-form-element slds-size_2-of-6">
                        <label class="slds-form-element__label" for="input-05">Update based on lookup?</label>
                        <div class="slds-form-element__control">
                        <div class="slds-select_container">
                        <select class="slds-select" id="updateLookup">
                        <option value="-">Please select</option>

                        </select>
                        </div>
                        </div>
                    </div>
                    <div class="slds-form-element slds-size_2-of-6">
                        <label class="slds-form-element__label" for="input-06">Skip If Value Provided? </label>
                        <div class="slds-form-element__control">
                        <div class="slds-select_container">
                        <select class="slds-select" id="skipProvider">
                        <option value="-">Please select</option>

                        </select>
                        </div>
                        </div>
                    </div>
                    <div class="slds-form-element slds-size_2-of-6">
                        <label class="slds-form-element__label" for="input-07">Skip If Value not Provided? </label>
                        <div class="slds-form-element__control">
                        <div class="slds-select_container">
                        <select class="slds-select" id="skipNotProvider">
                        <option value="-">Please select</option>


                        </select>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset class="slds-form-element slds-form_compound slds-form-element_address">
        <legend class="slds-form-element__legend slds-form-element__label">Connection Mappings</legend>
        <div class="slds-form-element__control">
            <div class="slds-form-element__group">

                <div class="slds-form-element__row">


                    <div class="slds-form-element slds-size_2-of-6">
                        <label class="slds-form-element__label" for="input-05">Form field</label>
                        <div class="slds-form-element__control">
                        <div class="slds-select_container">
                        <select class="slds-select" id="fieldsNamesForm">
                            <option value="-">Please select</option>
                        </select>
                        </div>
                        </div>
                    </div>

                    <div class="slds-form-element slds-size_2-of-6">
                        <label class="slds-form-element__label" for="input-06">Salesforce Field </label>
                        <div class="slds-form-element__control">
                        <div class="slds-select_container">
                        <select class="slds-select" id="fieldsNames">
                            <option value="-">Please select</option>
                        </select>
                        </div>
                        </div>
                    </div>
                    <div class="slds-form-element slds-size_1-of-6">
                        <label class="slds-form-element__label" for="input-07"></label>
                        <div class="slds-form-element__control">
                        <button class="slds-button slds-button_brand" onclick="addToMap();">
            <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#change_record_type')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
            </svg> Create new Map</button>


                        </div>
                    </div>
                    <div class="slds-form-element slds-size_1-of-6">

                        </div>
                </div>
            </div>
        </div>
    </fieldset>






    <!-- <span class="oi oi-icon-name" title="icon name" aria-hidden="true"></span>
    <div class="page-header">
    <h3 class="text-success">
    <img src="static/assets/png/glyphicons-361-bug.png" alt=""> Waka-Waka Schema Builder
    <small class="text-muted"> - Smart forms Generation CRM – Audit / Survey module</small>
</h3>
</div> -->
<br/>
<table id="currentMaps" class="slds-table slds-table_bordered slds-table_striped slds-table_col-bordered">
    <thead>
        <tr class="slds-line-height_reset">
            <th class="slds-text-title_caps" scope="col">
                <div class="slds-truncate" title="Number"></div>
            </th>
            <th class="slds-text-title_caps" scope="col">
                <div class="slds-truncate" title="Form Field">Form Field</div>
            </th>
            <th class="slds-text-title_caps" scope="col">
                <div class="slds-truncate" title="Salesfoce Field">Salesforce Field</div>
            </th>
            <th class="slds-text-title_caps" style="width: 120px;" scope="col">
                <div class="slds-truncate" title=""></div>
            </th>
        </tr>
    </thead>
    <tbody>
        <!-- <tr class="slds-hint-parent">
            <th data-label="" scope="row">
                <div class="slds-truncate" title="#">1</div>
            </th>
            <td data-label="Account Name">
                <div class="slds-truncate" title="Cloudhub">Nombre</div>
            </td>
            <td data-label="Close Date">
                <div class="slds-truncate" title="4/14/2015">Name</div>
            </td>

            <td data-label="Contact">
            <button class="slds-button slds-button_destructive">
<svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#delete')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
</svg>Delete</button>
            </td>
        </tr> -->

    </tbody>
</table>



</div>
<div style="height: 180px;">

    <div class="slds-docked-form-footer">
        <a href="javascript:;" onclick="history.back(-1)" class="slds-button slds-button_neutral">Back to form builder </a>
        <button  onclick="saveConnection();" id="save" class="slds-button slds-button_success"> Save Connection</button>

        <!-- <input type="text" name="" readonly id="test" onclick="openLookup('test');"> -->
        <!-- <a  class="slds-button slds-button_neutral" id="test" href="javascript:;" onclick="openLookup('test');">Test</a> -->
        <!-- <a href="/apex/{!backUrl}" class="slds-button slds-button_neutral">Ouuuuuelve </a> -->



    </div>

</div>

<!-- Footer  -->

</div>



<!-- overlay fields -->
<!-- overlay lookup -->

<div class="lookupOverlay" style="height: auto;">
<section role="dialog" tabindex="-1" class="slds-modal slds-max-medium-table_stacked  slds-max-medium-table_stacked-horizontal slds-modal_small slds-list-builder"
  aria-labelledby="id-of-modalheader-h2" aria-modal="true" aria-describedby="modal-content-id-1">
  <div class="slds-modal__container">
    <header class="slds-modal__header">
      <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="hideOverlay('lookupOverlay');"
        title="Close">
        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
            <use xlink:href="{!URLFOR($Asset.SLDS, 'icons/utility-sprite/svg/symbols.svg#close')}"></use>

          <!-- <use xlink:href="static/icons/utility-sprite/svg/symbols.svg#close" xmlns:xlink="http://www.w3.org/1999/xlink" /> -->
        </svg>
        <span class="slds-assistive-text">Close</span>
      </button>
      <h2 id="id-of-modalheader-h2" class="slds-text-heading_medium">Choose Salesforce Object</h2>
      <!-- <p class="slds-m-top_x-small">Pricebook: Salesforce Products</p> -->
    </header>
    <div class="slds-modal__content slds-grid slds-grow" id="modal-content-id-1">
      <div class="slds-hide lookupLoader" style="height: 6rem;">
        <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
          <span class="slds-assistive-text">Loading</span>
          <div class="slds-spinner__dot-a"></div>
          <div class="slds-spinner__dot-b"></div>
        </div>
      </div>
      <div class="slds-grid lookupContent slds-grid_vertical slds-hide">
        <div class="slds-p-vertical_x-small slds-p-horizontal_large slds-shrink-none slds-theme_shade">

          <div class="slds-form-element">
            <label class="slds-form-element__label" for="text-input-id-1">Salesforce Objects</label>
            <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
              <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                  <use xlink:href="{!URLFOR($Asset.SLDS, 'icons/utility-sprite/svg/symbols.svg#search')}"></use>

                <!-- <use xlink:href="static/icons/utility-sprite/svg/symbols.svg#search" xmlns:xlink="http://www.w3.org/1999/xlink" /> -->
              </svg>
              <input type="text" id="filter-lookup" class="slds-input" placeholder="Filter Objects" />
            </div>
          </div>

          <div class="slds-text-title slds-m-top_x-small lookup-count" aria-live="polite">
            <span>0</span> Objects Availables</div>
        </div>
        <div class="slds-scrollable slds-grow">

          <table role="grid" class="resultLookup slds-table slds-table_fixed-layout slds-table_bordered  slds-scrollable_none">
            <thead>
              <tr class="slds-text-title_caps slds-line-height_reset">
                <th scope="col" style="width: 3.75rem;"></th>
                <th scope="col">
                  <span class="slds-truncate" title="Name">Name</span>
                </th>


              </tr>
            </thead>
            <tbody>


            </tbody>
          </table>
        </div>
      </div>
    </div>

  </div>
</section>
<div class="slds-backdrop"></div>
</div>


<!-- Remote Objects definition to set accessible sObjects and fields -->
<apex:remoteObjects jsNamespace="remoteConnection" >
    <apex:remoteObjectModel name="LAT_FormBuilderConnection__c"
        fields="Name,ObjectLabel__c,ObjectName__c,LAT_FormBuilderSchema__c,Sequence__c,Mapping__c,IsActive__c,Id,UpdateBasedOnLookup__c,SkipIfValueProvided__c,SkipIfValueNotProvided__c">
    </apex:remoteObjectModel>
</apex:remoteObjects>



<!-- Vendor JS (Jquery) -->
<apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/vendor.js')}"/>





</body>

<script type="text/javascript">

var currentMappings = [];
var javascriptMapping = new Map();


// First time we must retrieve the fields.
var currentObj = $("#objectApiName").val();
if(currentObj) {
    getObjectFields(currentObj);
    processActualMappings();
}

var currentConectionId = '{!connection.Id}';


function saveConnection(){
    if($('#objectName').val() == '') {
        statusShow('Salesforce Object is Required', 'Error: ', 'error');
    } else {
        $('#save.slds-button.slds-button_success').text('Saving...').attr('disabled', true);
        var myConnection = new remoteConnection.LAT_FormBuilderConnection__c();
        var objectName = $('#objectName').val();
        var objectApiName = $('#objectApiName').val();
        var sequence = $('#sequence').val();
        var update = ($('#updateLookup').val() != '-') ? $('#updateLookup').val() : '';
        var skipIf = ($('#skipProvider').val() != '-') ? $('#skipProvider').val() : '';
        var skipIfNot = ($('#skipNotProvider').val() != '-') ?  $('#skipNotProvider').val()  : '';
        var name = objectName + ' - {!fbs.Name} connection';
        var active = ($('#isActive:checked').length == 1) ;



        //var newMap = JSON.stringify([...javascriptMapping]);
        // var newMap = JSON.stringify({
        //   currentMap: mapToObj(javascriptMapping),
        //   connectionName: name
        // });

        var newMap =  Array.from(javascriptMapping);
        newMap = JSON.stringify(newMap);

        console.log(newMap);



        var connectionDetails = {Name: name,  UpdateBasedOnLookup__c : update, SkipIfValueProvided__c : skipIf, SkipIfValueNotProvided__c : skipIfNot, IsActive__c : active, ObjectLabel__c: objectName, ObjectName__c: objectApiName, LAT_FormBuilderSchema__c: '{!fbs.Id}', Sequence__c: sequence , Mapping__c: newMap };
        var connectionDetailsUpdate = {Name: name, UpdateBasedOnLookup__c : update, SkipIfValueProvided__c : skipIf, SkipIfValueNotProvided__c : skipIfNot, IsActive__c : active, ObjectLabel__c: objectName, ObjectName__c: objectApiName,  Sequence__c: sequence , Mapping__c: newMap };

        // console.log(connectionDetails);
        if(currentConectionId){
            myConnection.update([currentConectionId], connectionDetailsUpdate, function(err) {
                if(err) {
                    console.log(err);
                    alert(err.message);
                }
                else {
                    statusShow(name + ' was Updated!', 'Success: ', 'success');
                    window.location.replace("/apex/LAT_wakawakaForms?id={!fbs.Id}");
                    //https://pernod-ricard--latsb3conf--c.cs107.visual.force.com/one/one.app#/alohaRedirect/apex/LAT_wakawakaForms?id=aTt1q000000000uCAA
                    //console.log(myConnection.get('Id')); // Id is set when create completes
                }
            });
        } else {
            myConnection.create(connectionDetails, function(err) {
                if(err) {
                    console.log(err);
                    alert(err.message);
                }
                else {
                    statusShow(name + ' was Created!', 'Success: ', 'success');
                    window.location.replace("/apex/LAT_wakawakaForms?id={!fbs.Id}");
                    console.log(myConnection.get('Id')); // Id is set when create completes
                }
            });
        }

    }
}



function mapToObj(map){
  const obj = {}
  for (let [k,v] of map)
    obj[k] = v
  return obj
}

// MAPPING FUNCTIONS
// processActualMappings
function processActualMappings(){

    // TO DO, SET
    var currentMap = '{!connection.Mapping__c}';
    if(currentMap) {
        var currentMapJson = JSON.parse(currentMap);
        //javascriptMapping = currentMapJson.currentMap;
        console.log(currentMapJson);
        $.each(currentMapJson, function(key, value) {
            //var item =   JSON.parse(value);
            console.info(value);
            javascriptMapping.set(value[0], value[1]);
         });
    }
    //

    if(javascriptMapping.size > 0) {
        var ind = 0;
        javascriptMapping.forEach(function(values, key ){
            console.log(key + "  " + values);
            appendHTMLItem(key, values, ind);
            ind ++;
        });
    }




    checkIfCanActive();

}

function setCurrentValues(){

    $('#isActive').prop('checked', {!connection.IsActive__c});
    $('#updateLookup').val('{!IF(connection.UpdateBasedOnLookup__c != '', connection.UpdateBasedOnLookup__c, '-' ) }');
    $('#skipProvider').val('{!IF(connection.SkipIfValueProvided__c != '', connection.SkipIfValueProvided__c, '-' ) }');
    $('#skipNotProvider').val('{!IF(connection.SkipIfValueNotProvided__c != '', connection.SkipIfValueNotProvided__c, '-' ) }');
    // //UpdateBasedOnLookup__c
    // //SkipIfValueNotProvided__c
    // SkipIfValueProvided__c
}


function checkIfCanActive(){
    if(javascriptMapping.size > 0) {
        $('#isActive').removeAttr('disabled');
    } else {
        $('#isActive').attr('disabled', true);
        $('#isActive').prop('checked', false);
    }
}

function addToMap(){
    var formVal = $('#fieldsNamesForm').val();
    var sfVal  = $('#fieldsNames').val();
    if(sfVal == '-' || formVal == '-' ) {
        statusShow('Please select fields', 'Error: ', 'error');
        console.info('cant save');
    }  else {
        if(javascriptMapping.has(sfVal)){
            statusShow('Salesforce field already mapped', 'Error: ', 'error');
        } else {
             javascriptMapping.set(sfVal, formVal);
             appendHTMLItem(sfVal, formVal, javascriptMapping.size - 1);
             statusShow('New Map Created', 'Success: ', 'success');

             checkIfCanActive();
        }
        //
        //
        //
    }

}

function appendHTMLItem(key, value, ind){
    var html = '<tr class="slds-hint-parent" id="item-map-ind-'+ind+'">\
        <th scope="row">\
            <div class="slds-truncate" title="#">'+ind+'</div>\
        </th>\
        <td data-label="Account Name">\
            <div class="slds-truncate" title="'+value+'">'+value+'</div>\
        </td>\
        <td data-label="Close Date">\
            <div class="slds-truncate" title="'+key+'">'+key+'</div>\
        </td>\
        <td data-label="Contact">\
        <button class="slds-button slds-button_destructive" onclick="deleteMap(\''+key+'\',\'item-map-ind-'+ind+'\')">\
            <svg aria-hidden="true" class="slds-button__icon slds-button__icon_left"><use xlink:href="/_slds/icons/action-sprite/svg/symbols.svg#delete" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg>Delete</button>\
        </td>\
    </tr>';
    $('#currentMaps.slds-table tbody').append(html);
}


function deleteMap(key, el){
    $('#'+el).remove();
    javascriptMapping.delete(key);
    checkIfCanActive();
    statusShow('Map deleted', 'Success: ', 'success');

}
//////////////


function statusShow(title, text, className) {

    $('#saving .slds-notify').removeClass('slds-theme_error').removeClass('slds-theme_success');
    $('#saving .slds-notify').addClass('slds-theme_'+className);
    $('#saving .slds-text-heading_small span').text(title);
    $('#saving .slds-text-heading_small strong').text(text);
    $('#saving').slideDown().delay(2000).fadeOut('slow'); ;
}

function hideOverlay(elParent) {
  $('.' + elParent + ' section').removeClass('slds-fade-in-open');
  $('.' + elParent + ' .slds-backdrop').removeClass('slds-backdrop_open');
}

function showOverlay(elParent) {
  $('.' + elParent + ' section').addClass('slds-fade-in-open');
  $('.' + elParent + ' .slds-backdrop').addClass('slds-backdrop_open');
}


function clearObject(){
    if(confirm("This will delete all the Mappings")) {
        $('#objectName , #objectApiName').val('');
        openLookup('objectApiName');
        $("#fieldsNames option:not(:first)").remove();
        $('#currentMaps.slds-table tbody tr').remove();
        javascriptMapping = new Map();
    }

}


var objectList = JSON.parse('{!objectList}');
var timeout = null;

function openLookup(eId) {
  var currentValue = $('#objectApiName').val();
  setObjectFields(currentValue);
  $('#filter-lookup').on('keyup', function () {
    clearTimeout(timeout);
    timeout = setTimeout(function () {
      filterResults($('#filter-lookup').val(), 'objectApiName', currentValue);
    }, 500);
  });
}

function setObjectFields(currentValue){
    $('.lookupContent').addClass('slds-hide');
    showOverlay('lookupOverlay');
    // $('.lookupLoader')

    $('.lookupLoader').removeClass('slds-hide');
    setTimeout(function(){
        $('.lookupLoader').addClass('slds-hide');
        $('.lookupContent').removeClass('slds-hide');
    } ,
    1000);

    if(currentValue){
        $('#filter-lookup').val(currentValue);
        filterResults(currentValue, 'objectApiName', currentValue ) ;
    } else {
        $.each(objectList, function(key, value) {
            $('.lookupContent tbody').append(markup(value, key, 'pirate' , ''));
         });

        $('.lookup-count span').text(objectList.length);
    }

}

function cleanTable(){
    $('.lookupContent tbody tr').remove();
}

function markup(text, index, elem, filtered) {


    var regExp = /\(([^)]+)\)/;
    var matches = regExp.exec(text);
    var textFormated = matches[1];


    var checked = (filtered == textFormated) ? 'checked' : '';
    var row = '<tr class="slds-hint-parent">\
                <td role="gridcell" tabindex="0" class="slds-text-align_right" style="width: 3.75rem;">\
                  <div class="slds-checkbox_add-button">\
                    <input type="checkbox" '+checked+' onclick="setCurrent(\''+text+'\', \''+textFormated+'\')" class="slds-assistive-text" id="add-checkbox-'+index+'" value="add-checkbox-'+index+'" tabindex="-1" />\
                    <label for="add-checkbox-'+index+'" class="slds-checkbox_faux">\
                      <span class="slds-assistive-text">Select item '+index+'</span>\
                    </label>\
                  </div>\
                </td>\
                <th scope="row">\
                  <div class="slds-truncate" title="'+text+'">'+text+'</div>\
                </th>\
              </tr>';

    return row;
}

function filterResults(text, elem, currentValue) {
    cleanTable();
    var jsonObjectsNameFiltered = objectList.filter(function(el) {
        return el.toLowerCase().indexOf(text.toLowerCase()) > -1;
    });

    $('.lookup-count span').text(jsonObjectsNameFiltered.length);
    if(jsonObjectsNameFiltered.length > 0) {
        $.each(jsonObjectsNameFiltered, function(key, value) {
            $('.lookupContent tbody').append(markup(value, key, 'objectName', currentValue));
         });
    }
    else if(jsonObjectsNameFiltered.length == 0) {
        $('.lookupContent tbody').append('<tr class="slds-hint-parent"><td role="gridcell" tabindex="0" class="slds-text-align_right" colspan="2">No items to display</td></tr>');
    }
}

function setCurrent(text, apiName){
    // $('.lookupContent tbody tr').remove();
    if($('#objectApiName').val() != apiName) {
        $("#fieldsNames option:not(:first)").remove();
        $('#currentMaps.slds-table tbody tr').remove();
        javascriptMapping = new Map();
    }


    hideOverlay('lookupOverlay');
    var label = text.split(' -');
    $('#objectApiName').val(apiName);
    $('#objectName').val(label[0]);
    getObjectFields(apiName);
}

var jsonObjectsNameFields = JSON.parse('[]');

function getObjectFields(objectname) {
    $("#fieldsNames option:first").text('Loading fields...');
    $("#fieldsNames option:not(:first)").remove();
    Visualforce.remoting.Manager.invokeAction(
       '{!$RemoteAction.LAT_SchemaBuilderConnectionController.getFields}', objectname,
       function(result, event){
           if (event.status) {
               // Get DOM IDs for HTML and Visualforce elements like this
               jsonObjectsNameFields = result;
               //console.log(result);
               $.each(result, function(key, value) {
                 //console.log('value',value);
                     $('#fieldsNames')
                         .append($("<option></option>")
                         .attr("value",value)
                         .text(value));
                     });

                     $("#fieldsNames option:first").text('Please select a Salesforce Field');

           } else if (event.type === 'exception') {
               alert(event.message + " - " + event.where);

           } else {
               alert(event.message );
           }
       },
       {escape: true}
   );
}

    var jsonPages = [];

function processPages(){
    // Build each page
    <apex:repeat value="{!fbs.Form_Builder_Pages__r}"  var="page"  >

		//var jsonToConcat = JSON.stringify({!page.Json__c});
        var jsonToConcat = JSON.parse('{!page.Json__c}');;


    console.log(jsonToConcat);
    	jsonPages = jsonPages.concat(jsonToConcat);
        // $('#fieldsNamesForm')
        //     .append($("<option></option>")
        //     .attr("value",'{!page.Name}')
        //     .text('{!page.Name}'));

        // $('<div class="page-child" id="page-'+ind+'"><div id="{!page.id}">{!page.Name}</div></div>').appendTo('#form-insertion');

        // var json{!page.id} = '{!page.Json__c}';
        // var json{!page.id} = JSON.stringify({!page.Json__c});
        // {!page.id}myRender.build(json{!page.id}, '{!page.id}');

    </apex:repeat>

    $.each(jsonPages, function(key, value) {
        if(value.type == 'select' || value.type == 'checkbox-group' || value.type == 'Photo' || value.type == 'TextInput' || value.type == 'Lookup'  ) {
            console.log(value.name);
            var valueNew = value.label +' -  ('+value.name+')';
            var elem = $("<option></option>").attr("value", valueNew).text(valueNew);
            var elemNotLabel = $("<option></option>").attr("value", value.name).text(valueNew);
            $('#fieldsNamesForm').append(elem);
            $('#skipProvider, #skipNotProvider').append(elemNotLabel);
            if(value.type ==  'Lookup'){
                $('#updateLookup').append(elemNotLabel);
            }
        }

    });

    setCurrentValues();
}

processPages();


</script>

</html>





</apex:page>