<apex:page standardController="EUR_CRM_Contract__c" extensions="EUR_CRM_DE_ContractBuilderController">

    <apex:variable var="PouringRefundWrapper" value="{!mechanicTypeWrapperMap['Pouring Refund']}" />
    <apex:variable var="OthersWrapper" value="{!mechanicTypeWrapperMap['Others']}" />
    <apex:variable var="DrinksMenuWrapper" value="{!mechanicTypeWrapperMap['Drinks Menu']}" />
    <apex:variable var="WKZFixAmountWrapper" value="{!mechanicTypeWrapperMap['WKZ Fix Amount']}" />
    <apex:variable var="NapkinsWrapper" value="{!mechanicTypeWrapperMap['Napkins']}" />
    <apex:variable var="EventsWrapper" value="{!mechanicTypeWrapperMap['Events']}" />
    <apex:variable var="TrainingWrapper" value="{!mechanicTypeWrapperMap['Training']}" />
    <apex:variable var="VisibilityWrapper" value="{!mechanicTypeWrapperMap['Visibility/ Branding']}" />
    <apex:variable var="POSMaterialWrapper" value="{!mechanicTypeWrapperMap['POS Material']}" />
    <apex:variable var="POSWKZWrapper" value="{!mechanicTypeWrapperMap['POS WKZ']}" />
    <apex:variable var="ListingWrapper" value="{!mechanicTypeWrapperMap['Listing']}" />
    <apex:variable var="HousePouringWrapper" value="{!mechanicTypeWrapperMap['House Pouring']}" />

<head>
<apex:stylesheet value="/sCSS/21.0/sprites/1297816277000/Theme3/default/gc/versioning.css" />   

<apex:stylesheet value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/libs/jquery/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/styles/common.css')}" />

<link href="{!URLFOR($Resource.EUR_CRM_JQuery_DataTable_German, 'css/jquery.dataTables.css')}" media="screen" rel="stylesheet" type="text/css" />

<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/libs/jquery/js/jquery-1.9.1.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_JQuery_DataTable_German, 'js/jquery.dataTables.js')}"/>

<script>
    $ = jQuery.noConflict();

    var eventDescriptionItemCount = 0;
    var trainingDescriptionItemCount = 0;
    
    var colLabel_Action = "{!$Label.EUR_CRM_Action}";
    var colLabel_Brand = "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Brand__c.label}";
    var colLabel_BrandQuality = "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Brand_Quality__c.label}";
    var colLabel_Volume = "{!$Label.EUR_CRM_Volume}";
    
    var basicDataTableProperties = {
        "bDestroy":true,
        "bStateSave":true,
        "aaSorting": [[1]],
        "asSorting": [[2, "asc"]],
        "order": [[ 1, "asc" ]],
        "bSearch": false,
        "bFilter" : true,
        "iDisplayLength": 200,
        "aLengthMenu": [200]
    }
    
    //Contract Mechanic Column Definition
    var contractLineItemColumns = [
        {"sTitle": colLabel_Action},
        {"sTitle": colLabel_Brand}
    ]
    
    var contractMechanicColumns = [
        {"sTitle": colLabel_Action},
        {"sTitle": colLabel_Brand}
    ]

    var contractMechanicColumnsPouringRefund = [
        {"sTitle": colLabel_Action},
        {"sTitle": colLabel_BrandQuality}
    ]
    
    //DataTable Variable
    var cliPouringRefund;
    var cmPouringRefund;
    var cliOthers;
    var cmOthers;
    var cliDrinksMenu;
    var cmDrinksMenu;
    var cliWKZFixAmount;
    var cmWKZFixAmount;
    var cliNapkins;
    var cmNapkins;
    var cliEvents;
    var cmEvents;
    var cliTraining;
    var cmTraining;
    var cliVisibility;
    var cmVisibility;
    var cliPOSMaterial;
    var cmPOSMaterial;
    var cliPOSWKZ;
    var cmPOSWKZ;
    var summaryEvents;
    var summaryTraining;

    var thousandSep;
    var decimalSep;
    $(document).ready(
        function(){
            console.log("##INIT - Contract Builder Page");

            thousandSep = '{!thousandSep}';
            decimalSep = '{!decimalSep}';
            console.log('thousandSep => ', thousandSep);
            console.log('decimalSep => ', decimalSep);
            String.prototype.insert = function (index, string) {
                var ind = index < 0 ? this.length + index  :  index;
                return  this.substring(0, ind) + string + this.substring(ind, this.length);
            };
            setTables();
            //setEventsSummaryTable();
            //setTrainingSummaryTable();
        }
    );

    // Sort Settings 
    function setSorting(tablename,colNumber,type){
        var oTable = $(tablename).dataTable();
        oTable.fnSort( [ [colNumber,type] ] );
    }

    function setPouringRefundTable(isFromButtonClick){
        //cliPouringRefund = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!PouringRefundWrapper.mechanicTypeId}");
        var cliPouringRefund_dataTableProperties = basicDataTableProperties;
        cliPouringRefund_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_BrandQuality},
            {"sTitle": colLabel_Volume},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Unit__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Total_Spent__c.label}"}
        ];

        cliPouringRefund =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!PouringRefundWrapper.mechanicTypeId}").dataTable(cliPouringRefund_dataTableProperties);
        
        cmPouringRefund = setContractMechanicTablePouringRefund("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!PouringRefundWrapper.mechanicTypeId}");
        
        setPouringRefundSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!PouringRefundWrapper.mechanicTypeId}",1,'asc');    
        }
        console.log('calculateAllTotalSpend => ');
        calculateAllTotalSpend($('#ContractLineItemTable_{!PouringRefundWrapper.mechanicTypeId}'),'PouringRefund','{!PouringRefundWrapper.mechanicTypeId}');
        console.log('Set PouringRefund Table - Done');
    }

    function setWKZFixAmountTable(isFromButtonClick){
        //cliWKZFixAmount = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}");
        var cliWKZFixAmount_dataTableProperties = basicDataTableProperties;
        cliWKZFixAmount_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": colLabel_Volume},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Unit__c.label}"}
        ];
        
        cliWKZFixAmount =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}").dataTable(cliWKZFixAmount_dataTableProperties);
        
        cmWKZFixAmount = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}");
        
        setWKZFixAmountSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set WKZFixAmount Table - Done');
    }

    function setVisibilityTable(isFromButtonClick){
        //cliVisibility = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!VisibilityWrapper.mechanicTypeId}");
        var cliVisibility_dataTableProperties = basicDataTableProperties;
        cliVisibility_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        
        cliVisibility =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!VisibilityWrapper.mechanicTypeId}").dataTable(cliVisibility_dataTableProperties);
        
        cmVisibility = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!VisibilityWrapper.mechanicTypeId}");
        
        setVisibilitySummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!VisibilityWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set Visibility Table - Done');
    }

    function setPOSMaterialTable(isFromButtonClick){
        //cliPOSMaterial = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!POSMaterialWrapper.mechanicTypeId}");
        var cliPOSMaterial_dataTableProperties = basicDataTableProperties;
        cliPOSMaterial_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        
        cliPOSMaterial =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!POSMaterialWrapper.mechanicTypeId}").dataTable(cliPOSMaterial_dataTableProperties);
        
        cmPOSMaterial = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!POSMaterialWrapper.mechanicTypeId}");
        
        setPOSMaterialSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!POSMaterialWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set POSMaterial Table - Done');
    }

    function setPOSWKZTable(isFromButtonClick){
        //cliPOSWKZ = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!POSWKZWrapper.mechanicTypeId}");
        var cliPOSWKZ_dataTableProperties = basicDataTableProperties;
        cliPOSWKZ_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        
        cliPOSWKZ =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!POSWKZWrapper.mechanicTypeId}").dataTable(cliPOSWKZ_dataTableProperties);
        
        cmPOSWKZ = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!POSWKZWrapper.mechanicTypeId}");
        
        setPOSWKZSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!POSWKZWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set POSWKZ Table - Done');
    }

    function setNapkinsTable(isFromButtonClick){
        //cliNapkins = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}");
        var cliNapkins_dataTableProperties = basicDataTableProperties;
        cliNapkins_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Volume_lt__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_With_Logo__c.label}"}
        ];
        
        cliNapkins =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}").dataTable(cliNapkins_dataTableProperties);
        
        cmNapkins = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}");
        
        setNapkinsSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set Napkins Table - Done');
    }

    function setOthersTable(isFromButtonClick){
        //cliOthers = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!OthersWrapper.mechanicTypeId}");
        var cliOthers_dataTableProperties = basicDataTableProperties;
        cliOthers_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        
        cliOthers =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!OthersWrapper.mechanicTypeId}").dataTable(cliOthers_dataTableProperties);
        
        cmOthers = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!OthersWrapper.mechanicTypeId}");
        
        setOthersSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!OthersWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set Other Table - Done');
    }
    
    function setDrinksMenuTable(isFromButtonClick){
        //cliDrinksMenu = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}");
        var cliDrinksMenu_dataTableProperties = basicDataTableProperties;
        cliDrinksMenu_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        
        cliDrinksMenu =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}").dataTable(cliDrinksMenu_dataTableProperties);
        
        cmDrinksMenu = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}");
        
        setDrinksMenuSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set DrinksMenu Table - Done');
    }
    
    function setEventsTable(isFromButtonClick){
        //cliEvents = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!EventsWrapper.mechanicTypeId}");
        var cliEvents_dataTableProperties = basicDataTableProperties;
        cliEvents_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        
        cliEvents =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!EventsWrapper.mechanicTypeId}").dataTable(cliEvents_dataTableProperties);
        
        cmEvents = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!EventsWrapper.mechanicTypeId}");
        
        setEventsSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!EventsWrapper.mechanicTypeId}",1,'asc');    
        }
        
        console.log('Set Event Table - Done');
    }
    
    function setTrainingTable(isFromButtonClick){
        //cliTraining = setLineItemTable("{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!TrainingWrapper.mechanicTypeId}");
        var cliTraining_dataTableProperties = basicDataTableProperties;
        cliTraining_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":colLabel_Brand},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Product_Item__c.fields.EUR_CRM_Description__c.label}"}
        ];
        cliTraining =  $("#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!TrainingWrapper.mechanicTypeId}").dataTable(cliTraining_dataTableProperties);
        
        cmTraining = setContractMechanicTable("{!CONTRACT_MECHANIC_TABLE_PREFIX}{!TrainingWrapper.mechanicTypeId}");
        
        setTrainingSummaryTable();
        if(isFromButtonClick){
            // Set Sort Ascending on Brand
            setSorting("#{!CONTRACT_MECHANIC_TABLE_PREFIX}{!TrainingWrapper.mechanicTypeId}",1,'asc');
        }
        
    }
    
    function setEventsSummaryTable(){
        var summaryEvents_dataTableProperties = basicDataTableProperties;
        summaryEvents_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.Name.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryEvents =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!EventsWrapper.mechanicTypeId}").dataTable(summaryEvents_dataTableProperties);
    }

    function setPouringRefundSummaryTable(){
        var summaryPouringRefund_dataTableProperties = basicDataTableProperties;
        summaryPouringRefund_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryPouringRefund =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!PouringRefundWrapper.mechanicTypeId}").dataTable(summaryPouringRefund_dataTableProperties);
    }

    function setVisibilitySummaryTable(){
        var summaryVisibility_dataTableProperties = basicDataTableProperties;
        summaryVisibility_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryVisibility =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!VisibilityWrapper.mechanicTypeId}").dataTable(summaryVisibility_dataTableProperties);
    }

    function setDrinksMenuSummaryTable(){
        var summaryDrinksMenu_dataTableProperties = basicDataTableProperties;
        summaryDrinksMenu_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryDrinksMenu =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}").dataTable(summaryDrinksMenu_dataTableProperties);
    }

    function setWKZFixAmountSummaryTable(){
        var summaryWKZFixAmount_dataTableProperties = basicDataTableProperties;
        summaryWKZFixAmount_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryWKZFixAmount =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}").dataTable(summaryWKZFixAmount_dataTableProperties);
    }

    function setPOSMaterialSummaryTable(){
        var summaryPOSMaterial_dataTableProperties = basicDataTableProperties;
        summaryPOSMaterial_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Exclude_Budget_Deduction__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryPOSMaterial =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!POSMaterialWrapper.mechanicTypeId}").dataTable(summaryPOSMaterial_dataTableProperties);
    }

    function setPOSWKZSummaryTable(){
        var summaryPOSWKZ_dataTableProperties = basicDataTableProperties;
        summaryPOSWKZ_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryPOSWKZ =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!POSWKZWrapper.mechanicTypeId}").dataTable(summaryPOSWKZ_dataTableProperties);
    }

    function setNapkinsSummaryTable(){
        var summaryNapkins_dataTableProperties = basicDataTableProperties;
        summaryNapkins_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryNapkins =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!NapkinsWrapper.mechanicTypeId}").dataTable(summaryNapkins_dataTableProperties);
    }
    
    function setTrainingSummaryTable(){
        var summaryTraining_dataTableProperties = basicDataTableProperties;
        summaryTraining_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.Name.label}"},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryTraining =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!TrainingWrapper.mechanicTypeId}").dataTable(summaryTraining_dataTableProperties);
    }

    function setOthersSummaryTable(){
        var summaryOthers_dataTableProperties = basicDataTableProperties;
        summaryOthers_dataTableProperties["aoColumns"] = [
            {"sTitle":colLabel_Action},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.Name.label}"},
            {"sTitle":"{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Vendor__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"},
            {"sTitle": "{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"},
            {"sTitle": "{!$Label.EUR_CRM_Product_List}"}
        ];
        
        summaryOthers =  $("#{!CONTRACT_SUMMARY_ITEM_PREFIX}{!OthersWrapper.mechanicTypeId}").dataTable(summaryOthers_dataTableProperties);
    }
    
    function setTables(){
        //Set all line item and contract mechanic tables (for all mechanic type)
        setPouringRefundTable(false);
        setOthersTable(false);
        setDrinksMenuTable(false);
        setWKZFixAmountTable(false);
        setNapkinsTable(false);
        setEventsTable(false);
        setTrainingTable(false);
        setVisibilityTable(false);
        setPOSMaterialTable(false);
        setPOSWKZTable(false);
    }
    
    function setLineItemTable(lineItemTableId){
        var lineItem_dataTableProperties = basicDataTableProperties;
        lineItem_dataTableProperties ["aoColumns"] = contractLineItemColumns;
        lineItemTable= $("#"+lineItemTableId).dataTable(lineItem_dataTableProperties );
        console.log ("Set Line Item Table: " + lineItemTableId);
    }
    
    function setContractMechanicTable(contractMechanicTableId){
        var contractMechanic_dataTableProperties = basicDataTableProperties;
        contractMechanic_dataTableProperties ["aoColumns"] = contractMechanicColumns;
        contractMechanicTable= $("#"+contractMechanicTableId).dataTable(contractMechanic_dataTableProperties);
         console.log ("Set Contract Mechanic Table: " + contractMechanicTableId);
    }

    function setContractMechanicTablePouringRefund(contractMechanicTableId){
        var contractMechanic_dataTableProperties = basicDataTableProperties;
        contractMechanic_dataTableProperties ["aoColumns"] = contractMechanicColumnsPouringRefund;
        contractMechanicTable= $("#"+contractMechanicTableId).dataTable(contractMechanic_dataTableProperties);
         console.log ("Set Contract Mechanic Table: " + contractMechanicTableId);
    }
    
    function validateNumber(input){
        input = normalizeFloat(input, [",", "."]);
        var numRe =  new RegExp("^([+]?)([0-9]*)(\.[0-9]{0})?$"); 
        return numRe.test(input);
    }
    
    function validateFloat(input, precision){
        input = normalizeFloat(input, [",", "."]);
        var numRe =  new RegExp("^([+]?)([0-9]*)(\.[0-9]{1,"+precision+"})?$"); 
        return numRe.test(input);
    }

    function validateInput(uInput){
        return /^\d{1,3}(?:(,?)\d{3}(?:\1\d{3})*)?(?:\.\d{1,10})?$/.test(uInput);
    }
    
    function normalizeFloat(number, chars) {
        var lastIndex = -1;
        for(var i=0; i < chars.length; i++) {
            t = number.lastIndexOf(chars[i]);

            if (t > lastIndex) {
                lastIndex = t;
            }
        }

        if (lastIndex == -1) {
            lastIndex = number.length;
        }

        var whole = number.substring(0, lastIndex);   
        var precision = number.substring(lastIndex);
        //console.log('NORMALIZE FLOAT: Whole-'+whole+' PRECISION-'+precision);
        
        for (var i=0; i < chars.length; i++) {
            whole = whole.replace(chars[i], '');
            if (precision.length<=3){
                precision = precision.replace(chars[i],'.');   
            }else{
                precision = precision.replace(chars[i],'');   
            }
        }
        number = whole + precision;
        
        f = parseFloat(number);
        //console.log('NORMALIZE FLOAT: Whole-'+whole+' PRECISION-'+precision+' NUMBER-'+number + ' FLOAT-'+f);
        return f;
    }

    function cleanNumber(num){
        var newNum = '' + num;
        if(decimalSep == ','){
            newNum = newNum.replace(/\./g,'');
            newNum = newNum.replace(/,/g , '.');
        }else{
            newNum = newNum.replace(/,/g , '');
        }
        newNum = newNum.replace(/\s+/g, '')
        return newNum;
    }

    function currencyFormat(number)
    {
       var decimalplaces = 2;
       // var decimalcharacter = ".";
       // var thousandseparater = ".";
       var decimalcharacter = decimalSep;
       var thousandseparater = thousandSep;
       number = parseFloat(number);
       var sign = number < 0 ? "-" : "";
       var formatted = new String(number.toFixed(decimalplaces));
       if( decimalcharacter.length && decimalcharacter != "." ) { formatted = formatted.replace(/\./,decimalcharacter); }
       var integer = "";
       var fraction = "";
       var strnumber = new String(formatted);
       var dotpos = decimalcharacter.length ? strnumber.indexOf(decimalcharacter) : -1;
       if( dotpos > -1 )
       {
          if( dotpos ) { integer = strnumber.substr(0,dotpos); }
          fraction = strnumber.substr(dotpos+1);
       }
       else { integer = strnumber; }
       if( integer ) { integer = String(Math.abs(integer)); }
       while( fraction.length < decimalplaces ) { fraction += "0"; }
       temparray = new Array();
       while( integer.length > 3 )
       {
          temparray.unshift(integer.substr(-3));
          integer = integer.substr(0,integer.length-3);
       }
       temparray.unshift(integer);
       integer = temparray.join(thousandseparater);
       return sign + integer + decimalcharacter + fraction;
    }
    
    function calculateTotalSpend(cpiRow){
        var totalSpendVal = 0;
        var isInputValid = false;
        
        console.log('Calculate Total Spend - CPI Row:'+cpiRow);
        if (cpiRow!=undefined){
            //Get Qty
            var qty = cpiRow.find("input.cpiVolume").val();//cpiRow.children().children(".cpiVolume").val();
            console.log('Calculate Total Spend - Qty:' + qty);
            qty = cleanNumber(qty);
            if (qty!= undefined){
                if (validateNumber(qty)){
                    cpiRow.find("input.cpiVolume").removeClass('error-input');
                    isInputValid = true;
                }else{
                    cpiRow.find("input.cpiVolume").addClass('error-input');
                    isAllInputValid = false;
                }
            }
            
            //Get Rate (Amount)
            var amount = cpiRow.find("input.cpiAmount").val();//cpiRow.children().children(".cpiAmount").val();
            if (amount!= undefined){
                amount = cleanNumber(amount);
                console.log('Calculate amount => ', amount);
                if (validateFloat(amount, 2)){
                    cpiRow.find("input.cpiAmount").removeClass('error-input');
                    isInputValid = true;
                }else{
                    cpiRow.find("input.cpiAmount").addClass('error-input');
                    isAllInputValid = false;
                }
            }
            
            if (isInputValid){
                qty = normalizeFloat(qty, [",","."]);//qty.replace(',', '');
                qty = (qty!=null&&qty!=undefined&&qty!="NaN")?parseInt(qty):0;
                
                amount = normalizeFloat(amount, [",","."]);//amount.replace(',', '');
                console.log('Calculate Total Spend - Amount:' + amount);
                amount = (amount!=null&&amount!=undefined&&amount!="NaN")?parseFloat(amount):0;
                console.log('Calculate Total Spend - Qty, Amount:' + qty + '-'+ amount);

                totalSpendVal = precise_round(qty*amount, 2);
                totalSpendVal = isNaN(totalSpendVal)?0:totalSpendVal;
                console.log('Calculate Total Spend:' + totalSpendVal);
            }
        }
        // return currencyFormat(totalSpendVal);
       return   totalSpendVal;
    }

    // old method
    // function sumTotalSpend(tableEle){
    //     var sTotalSpend = 0;
    //     var totalSpendArr = tableEle.find("span.cpiTotalSpend");
    //     var len = totalSpendArr.length;
    //     console.log('Table Element:'+tableEle +'-'+len);
    //     for (var x=0; x<len; x++){
    //         console.log('IN SUM TOTAL SPEND - '+ x);
    //         var totalSpendEle = $(totalSpendArr[x]);
    //         console.log('totalSpendEle:' + totalSpendEle + '--' + totalSpendEle.text());
    //         var fTotalSpend = normalizeFloat(totalSpendEle.text(), [",","."]);//parseFloat(totalSpendEle.text())
    //         fTotalSpend = isNaN(fTotalSpend)?0:fTotalSpend;
    //         sTotalSpend += fTotalSpend;
    //     }
    //
    //     console.log("sTotalSpend:" + sTotalSpend);
    //     sTotalSpend = isNaN(sTotalSpend)?0:sTotalSpend;
    //     sTotalSpend = precise_round(sTotalSpend, 2);
    //     // return currencyFormat(sTotalSpend);
    //     return sTotalSpend;
    // }


    // methods from EUR_CRM_FI_ContractBuilderPage.page
    /*-----------------------------------------------------------*/
    function updateTotalSpend(mechanic,cpiRow,mechId){
        var totalSpendId = '#' + mechanic + '_totalSpend_' + cpiRow;
        console.log('totalSpendId => ', totalSpendId);

        var rowSpendId ='#row_' + mechanic + '_' + cpiRow ;
        console.log('rowSpendId => ', rowSpendId);
        var total =  calculateTotalSpend( $(rowSpendId));

        let amountInputField = mechanic + '_inputField_' + cpiRow;
        let currency = formatToCurrency(total);
        // console.log('currency => ', currency);
        $(totalSpendId).text(currency);

        let optionalParams = $('[data-id=' + amountInputField + ']');

        console.log('amountInputField => ', amountInputField);
        console.log('optionalParams => ', optionalParams);
        let val = optionalParams.val(currency);

        // console.log('val => ', val);

        var mTableId = '#ContractLineItemTable_' + mechId;
        var t =  sumTotalSpend($(mTableId));
        console.log('t => ', t);
        var totalfooter = '#span_footer_total_' + mechanic;
        // console.log('totalfooter => ', totalfooter);
        t = formatToCurrency(t);
        $(totalfooter).text(t);
    }

    function sumTotalSpend(tableEle){
        var sTotalSpend = 0;
        var totalSpendArr = tableEle.find("span.cpiTotalSpend");
        console.log('totalSpendArr => ', totalSpendArr);
        if(totalSpendArr != null && totalSpendArr.length > 0){
            for (i=0; i<totalSpendArr.length; i++){
                var totalSpendEle =  $(totalSpendArr[i]);
                var fTotalSpend = parseFloat( cleanNumber(totalSpendEle.text()));
                fTotalSpend = isNaN(fTotalSpend)?0:fTotalSpend;
                sTotalSpend += fTotalSpend;
            }
        } else{
            totalSpendArr = tableEle.find("input.cpiTotalSpend");
            if(totalSpendArr != null && totalSpendArr.length > 0){
                for (i=0; i<totalSpendArr.length; i++){
                    var totalSpendEle = '' + totalSpendArr[i].value;
                    var fTotalSpend = parseFloat( cleanNumber(totalSpendEle));
                    fTotalSpend = isNaN(fTotalSpend)?0:fTotalSpend;
                    sTotalSpend += fTotalSpend;
                }
            }
        }

        sTotalSpend = isNaN(sTotalSpend)?0:sTotalSpend;
        sTotalSpend = parseFloat(sTotalSpend).toFixed(2);
        return sTotalSpend;
    }

    function formatToCurrency(num){
        var newNum = '' + num;
        if(decimalSep == ','){
            newNum = newNum.replace(/\./g,',');
        }
        var len = newNum.length;
        len -= 6; //remove decimal place.
        var i = 0;
        for(var j = len ; j > 0 ; j = j-3){
            newNum = newNum.insert(j, thousandSep);
        }
        return newNum;
    }

    function calculateAllTotalSpend(tableEle,mechanic,mechId){
        var allCpiContentRow = tableEle.find(".cpiContent");
        // console.log('allCpiContentRow => ', allCpiContentRow);
        for (var i=0; i<allCpiContentRow.length; i++){
            var cpiContentRow = $(allCpiContentRow[i]);
            var rId = $(cpiContentRow).find(".rowId");
            let cpiRow = $(rId).attr('id');
            // console.log('rId => ', rId);
            // console.log('cpiRow => ', cpiRow);
            updateTotalSpend(mechanic, cpiRow,mechId);

        }
    }
    /*----------------------------------------------*/
    
    function sumTotalQuantity(tableEle){
        var totalQty = 0;
        var totalQtyArr = tableEle.find("input.cpiQty");
        
        for (var i=0; i<totalQtyArr.length; i++){
            var qtyEle = $(totalQtyArr[i]);
            var fQty = normalizeFloat(qtyEle.val(), [",","."]);
            fQty = isNaN(fQty)?0:fQty;
            totalQty += fQty;
        }
        
        totalQty = isNaN(totalQty)?0:totalQty;
        return totalQty;
    }

    // function calculateAllTotalSpend(tableEle){
    //     var allCliContentRow = tableEle.find(".cpiContent");
    //
    //     console.log("allCliContentRow:" +allCliContentRow+'-'+allCliContentRow.length);
    //     for (var i=0; i<allCliContentRow.length; i++){
    //         var cliContentRow = $(allCliContentRow[i]);
    //         console.log('Check - Calculate All Total Spend:' + cliContentRow);
    //         //calculateTotalSpend("", cliContentRow);
    //         var tSpend = calculateTotalSpend(cliContentRow);
    //         console.log("Check - Calculate All Total Spend - TSpend:"+ tSpend);
    //         //cliContentRow.find("span.cpiTotalSpend").text(currencyFormat(tSpend));
    //         cliContentRow.find("span.cpiTotalSpend").text( tSpend);
    //         console.log("Check - Calculate All Total Spend - TSpend formatted:", currencyFormat(tSpend))
    //         //cliContentRow.children().children(".cpiTotalSpend").text(tSpend);
    //         console.log("Check - Calculate All Total Spend - Assign:" +cliContentRow.find("span.cpiTotalSpend") + "-"+cliContentRow.find("span.cpiTotalSpend").val());
    //     }
    // }


    
    function precise_round(num,decimals){
        return Math.round(num*Math.pow(10,decimals))/Math.pow(10,decimals);
    }
    
    function loading(val) {
        if (val) {
          document.getElementById('contentLoading').style.display = 'block';
          document.getElementById('contentLoaded').style.display = 'none';
        }
        else {
          document.getElementById('contentLoading').style.display = 'none';
          document.getElementById('contentLoaded').style.display = 'block';
        }
    }
    
    function startLoading(){
        $('#load_scrl').css('top', $(document).scrollTop() + 200);
        $('.loadingBox').show();
    }
    function endLoading(){
        $('.loadingBox').hide();
    }

    function setTableLabels(){
        debugger;
        var nextButtons = $('a[id*=_next]');
        for(let i = 0; i < nextButtons.length; i++){
            nextButtons[i].innerHTML = '$Label.EUR_CRM_Next';
        }

        var prevButtons = $('a[id*=_previous]');
        for(let i = 0; i < prevButtons.length; i++){
            prevButtons[i].innerHTML = '$Label.EUR_CRM_Previous';
        }

        var emptyTables = $('.dataTables_empty');
        for(let i = 0; i < emptyTables.length; i++){
            emptyTables[i].innerHTML = '$Label.EUR_CRM_No_Data_Available_In_Table';
        }
                
    }
</script>

<style>
body {
    margin-top: 40px;
    font-size: 12px;
    font-family: Helvetica,Arial,Verdana,sans-serif;
    width:100%;
}
        
.loadingOverlay{
    opacity: 0.4;
    postion: absolute;
    top:0px;
    left:0px;
    background-color:#001100;
    width:100%;
    z-index: 5000
}

#container1{
    width:100%;
}

#tabLink{
    font-size: 10px;
}

.overlay {
    display: none;
    height: 100%;
    left: 0;
    position: fixed;
    top: 0;
    opacity: 0.3;
    -moz-opacity: 0.3;
    width: 100%;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
    filter: alpha(opacity=30);
    background: #000;
    -khtml-opacity: 0.3;
    z-index: 1000;
}

.loader {
    width: 32px;
    height: 32px;
    position: absolute;
    left: 50%;
    z-index: 1000;
}

input.error-input {
    border-color: red;
}

</style>

</head>

<body>
    <apex:actionStatus id="loading" onstart="startLoading();" onstop="endLoading();" />
     
    <apex:form id="main_form">
    <apex:inputHidden value="{!mechanicTypeValue}" id="mechanicTypeValue"/>
    <apex:pageMessages id="pageMsg"></apex:pageMessages>
    
    <div id="contentLoading" style="display:none;">
        <div style="text-align: center;">
            <p>Loading...
            <img src="/img/loading.gif" alt="Loading graphic" /></p>
        </div>
    </div>
    
    <div id="load_scrl" class="loadingBox loader" style="display:none"><div style="text-align: center;">
            <p>Loading...
            <img src="/img/loading.gif" alt="Loading graphic" /></p>
        </div>
    </div>
    <div class="loadingBox overlay"> </div>
    
    <apex:actionFunction name="addCPDescriptionItem" action="{!addContractProductItem}" rerender="none">
        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value=""/>
        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value=""/>
        <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value=""/>
    </apex:actionFunction>
    
    <apex:actionFunction name="removeCPItem" action="{!removeContractProductItem}" rerender="none">
        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value=""/>
        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value=""/>
        <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value=""/>
    </apex:actionFunction>
    
    <apex:actionFunction name="xSaveContract" action="{!saveContract}" status="loading" rerender="pageMsg">
        <apex:param name="IS_QUICK_SAVE" value="" assignTo="{!IS_QUICK_SAVE}"/>

    </apex:actionFunction>
    
    <apex:actionFunction name="xQuickSaveContract" action="{!saveContract}" status="loading" rerender="pageMsg">
        <apex:param name="IS_QUICK_SAVE" value="" assignTo="{!IS_QUICK_SAVE}"/>
    </apex:actionFunction>
    
    <apex:actionFunction name="resetFlagship" 
    immediate="true"
    action="{!resetFlagshipBrandSelection}" 
    rerender="panel_listingPouring, pageBlock_PouringRefund, pageBlock_Others, pageBlock_DrinksMenu, pageBlock_WKZFixAmount, pageBlock_Napkins, panel_Training, panel_Event, pageBlock_VisibilityBranding, pageBlock_POSMaterial, pageBlock_POSWKZ, panel_pouring, panel_listing"
    status="loading"
    oncomplete="setTables();">
        <apex:param name="PARAM_SELECTED_FLAGSHIP_BRAND" value=""/>
    </apex:actionFunction>
    
    <apex:actionFunction name="assignVendor" action="{!postProcessPRDActivity}" 
    immediate="true" rerender="pageBlock_EventContractActivity, pageBlock_TrainingContractActivity, pageBlock_OtherContractActivity"
    status="loading">
        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value=""/>
        <apex:param name="PARAM_PR_DE_FLAG" value=""/>
    </apex:actionFunction>
    
    <!-- <apex:actionFunction name="assignBudgetExclusionOthers" action="{!postProcessExcludeBudget}" 
    immediate="true" rerender="panel_CADetails_Others"
    status="loading">
        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value=""/>
        <apex:param name="PARAM_BUDGET_EXCLUSION_FLAG" value=""/>
    </apex:actionFunction> -->
    
    
    <apex:pageBlock id="main_pageBlock">
        <apex:pageblockButtons >
            <apex:commandButton value="{!$Label.EUR_CRM_Save}" 
                onClick="saveListingPouringTables(false); return false;"/>
            <apex:commandButton value="{!$Label.EUR_CRM_Quick_Save}"
                onClick="saveListingPouringTables(true); return false;" />
            <apex:commandButton value="{!$Label.EUR_CRM_Exit}" action="{!cancel}" 
                immediate="true"
                status="loading"/>
        </apex:pageblockButtons>
        
        <apex:pageBlockSection columns="1">
            <apex:outputField value="{!contractObj.EUR_CRM_Account__c}"/>
            <apex:outputField value="{!contractObj.EUR_CRM_Start_Date__c}"/>
            <apex:outputField value="{!contractObj.EUR_CRM_End_Date__c}"/>

            <apex:pageBlockSectionItem rendered="{!isFlagshipMode}">
                <apex:outputLabel value="{!$Label.EUR_CRM_Brand_Selection}"/>
                <apex:selectList styleclass="flagshipSelection" id="select_flagship"
                value="{!selectedFlagshipBrand}" size="1"
                onchange="console.log('SELECTED FLAGSHIP:' + $(this).val()); resetFlagship($(this).val());">
                    <apex:selectOptions value="{!flagshipBrandSelection}"/>
                </apex:selectList>
            </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
        
        <div id="contractContentTabs" class="tabLink">
            <ul>
                <!-- Hide sections due to SFAPRD-1168 (https://pernod-ricard-europe.atlassian.net/browse/SFAPRD-1168)-->
                <!--<li><apex:outputPanel rendered="{!IF(isFlagshipMode, false, true)}"><a href="#tab_FocusBrand">{!$Label.EUR_CRM_Contract_Focus_Brand}</a></apex:outputPanel></li>-->
                <!--<li><apex:outputPanel rendered="true"><a href="#tab_ListingPouring">{!$Label.EUR_CRM_Contract_Pouring_Listing}</a></apex:outputPanel></li>-->
                <li><apex:outputPanel rendered="true"><a href="#mechanicTypeTabs">{!$Label.EUR_CRM_DE_Contract_Activity_Item}</a></apex:outputPanel></li>
            </ul>

        <!-- Hide section due to SFAPRD-1168 (https://pernod-ricard-europe.atlassian.net/browse/SFAPRD-1168)-->
        <!--<div id="tab_FocusBrand">-->
            <!--<apex:outputPanel id="panel_focusBrand" layout="block" rendered="{!IF(isFlagshipMode, false, true)}">-->
            <!--<c:EUR_CRM_ContractFocusBrand Component_Key="{!FOCUS_BRAND_KEY}" Page_Controller="{!this}" -->
                <!--Contract_Header="{!contractObj}" All_Brand_List="{!allBrandList}"/>-->
            <!--</apex:outputPanel>-->
        <!--</div>-->

        <!-- Hide section due to SFAPRD-1168 (https://pernod-ricard-europe.atlassian.net/browse/SFAPRD-1168)-->
        <!--<div id="tab_ListingPouring">-->
            <!--<apex:outputPanel id="panel_listingPouring" layout="block">-->
            <!--<c:EUR_CRM_ContractListingPouring Component_Key="{!LISTING_POURING_KEY}" Page_Controller="{!this}" -->
                <!--Contract_Header="{!contractObj}" All_BrandQuality_List="{!IF(isFlagshipMode, listingPouringBQList, allBrandQualityList)}"/>-->
            <!--</apex:outputPanel>-->
        <!--</div>-->
        
        <div id="mechanicTypeTabs" class="tabLink">
            <ul>
                <li><apex:outputPanel rendered="true"><a href="#tab_Listing">{!ListingWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_Pouring">{!HousePouringWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_PouringRefund">{!PouringRefundWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_WKZFixAmount">{!WKZFixAmountWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_DrinksMenu">{!DrinksMenuWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_Events">{!EventsWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_Visibility">{!VisibilityWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_POSMaterial">{!POSMaterialWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_POSWKZ">{!POSWKZWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_Napkins">{!NapkinsWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_Training">{!TrainingWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
                <li><apex:outputPanel rendered="true"><a href="#tab_Others">{!OthersWrapper.mechanicTypeTranslatedName}</a></apex:outputPanel></li>
            </ul>

            <div id="tab_PouringRefund">
                <apex:outputPanel id="panel_PouringRefund" layout="block">
                <apex:pageBlock id="pageBlock_PouringRefundSummary" rendered="{!NOT(PouringRefundWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!PouringRefundWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_PouringRefund, pageMsg"
                            onComplete="console.log('Add PouringRefund'); setPouringRefundTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!PouringRefundWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!PouringRefundWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!PouringRefundWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_PouringRefund, pageMsg"
                                    onComplete="console.log('Edit PouringRefund'); setPouringRefundTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_PouringRefundSummary, pageMsg"
                                    onComplete="console.log('Remove PouringRefund'); setPouringRefundTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_PouringRefund, pageMsg"
                                        onComplete="console.log('Clone PouringRefund'); setPouringRefundTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!PouringRefundWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_PouringRefundEditor" rendered="{!PouringRefundWrapper.isEditMode}" >
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_PouringRefund, pageMsg"
                            onComplete="console.log('Save New PouringRefund'); setPouringRefundTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_PouringRefund, pageMsg"
                            onComplete="console.log('Cancel New PouringRefund'); setPouringRefundTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity" >
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(PouringRefundWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, NOT(PouringRefundWrapper.mechanicType.EUR_CRM_Has_Vendor__c)), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                    
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(PouringRefundWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:selectList value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!pouringRefundPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <!--<apex:inputField value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}"/>-->
                        <!--<apex:pageBlockSectionItem >-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>-->
                            <!--<apex:outputPanel styleClass="requiredInput"  layout="block">-->
                                <!--<apex:outputPanel styleClass="requiredBlock" layout="block"/>-->
                                <!--<apex:inputField value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />-->
                            <!--</apex:outputPanel>-->
                        <!--</apex:pageBlockSectionItem>-->
                        
                        <!--<apex:outputField value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" -->
                            <!--rendered="{!IF(AND(PouringRefundWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}"/>-->
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(PouringRefundWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, PouringRefundWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(PouringRefundWrapper.mechanicType.EUR_CRM_Has_Start_Date__c), PouringRefundWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!PouringRefundWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!PouringRefundWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(PouringRefundWrapper.mechanicType.EUR_CRM_Has_End_Date__c), PouringRefundWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_PouringRefund" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!PouringRefundWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!PouringRefundWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!PouringRefundWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr id="row_PouringRefund_{!cpiKey}" class="cpiContent">
                                    <td class="rowId" id="{!cpiKey}">
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_PouringRefundEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setPouringRefundTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td>
                                        <div class="requiredInput">
                                            <div class="requiredBlock"/>
                                            <apex:inputField styleClass="cpiVolume"
                                                             value="{!cpiObj.EUR_CRM_Volume_lt__c}"
                                                             onKeyUp="updateTotalSpend('PouringRefund', '{!cpiKey}', '{!PouringRefundWrapper.mechanicTypeId}');"
                                            />
                                            </div>
                                    </td>
                                    <td>
                                        <apex:inputField value="{!cpiObj.EUR_CRM_Unit__c}" required="true"/>
                                    </td>
                                    <td>
                                        <div class="requiredInput">
                                            <div class="requiredBlock"/>
                                        <apex:inputField value="{!cpiObj.EUR_CRM_Amount__c}"
                                        styleclass="cpiAmount"
                                        onKeyUp="updateTotalSpend('PouringRefund', '{!cpiKey}', '{!PouringRefundWrapper.mechanicTypeId}');"/>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="cpiTotalSpend" id="PouringRefund_totalSpend_{!cpiKey}">{!cpiObj.EUR_CRM_Amount_Spent_Reference__c}</span>
                                    </td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                                <tfoot>
                                    <tr>
                                        <th style="text-align:right;" colspan="5" rowspan="1"><apex:outputLabel value="{!$Label.EUR_CRM_Total_Value}: "/></th>
                                        <th id="footer_total_PouringRefund"  >
                                            <span id="span_footer_total_PouringRefund"  >
                                            {!PouringRefundWrapper.currentContractActivityItem.totalPouringRefund}</span>
                                        </th>
                                    </tr>
                                 </tfoot>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_PouringRefund" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_PouringRefundEditor, pageMsg"
                        oncomplete="PouringRefundDescriptionItemCount+=1; console.log('PouringRefund: Add Non-Brand Item - Count:'+PouringRefundDescriptionItemCount); setPouringRefundTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!PouringRefundWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!PouringRefundWrapper.currentContractActivityItem.brandQualityItems}">
                                <apex:repeat var="csObj" value="{!PouringRefundWrapper.currentContractActivityItem.brandQualityItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_PouringRefundEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setPouringRefundTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!PouringRefundWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>

            <div id="tab_WKZFixAmount">
                <apex:outputPanel id="panel_WKZFixAmount" layout="block">
                <apex:pageBlock id="pageBlock_WKZFixAmountSummary" rendered="{!NOT(WKZFixAmountWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!WKZFixAmountWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_WKZFixAmount, pageMsg"
                            onComplete="console.log('Add WKZFixAmount'); setWKZFixAmountTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!WKZFixAmountWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!WKZFixAmountWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_WKZFixAmount, pageMsg"
                                    onComplete="console.log('Edit WKZFixAmount'); setWKZFixAmountTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_WKZFixAmountSummary, pageMsg"
                                    onComplete="console.log('Remove WKZFixAmount'); setWKZFixAmountTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_WKZFixAmount, pageMsg"
                                        onComplete="console.log('Clone WKZFixAmount'); setWKZFixAmountTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!WKZFixAmountWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_WKZFixAmountEditor" rendered="{!WKZFixAmountWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_WKZFixAmount, pageMsg"
                            onComplete="console.log('Save New WKZFixAmount'); setWKZFixAmountTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_WKZFixAmount, pageMsg"
                            onComplete="console.log('Cancel New WKZFixAmount'); setWKZFixAmountTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, NOT(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Vendor__c)), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                    
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">   
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/>               
                                <apex:selectList value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!wkzFixAmountPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:outputField value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" -->
                            <!--rendered="{!IF(AND(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}"/>-->

                        <apex:inputField id="input_caVendor" styleClass="eventVendorClass" value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Vendor__c, WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="eventVendorClass" value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Vendor__c, WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>

                        <!--<apex:pageBlockSectionItem >-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>-->
                            <!--<apex:outputPanel styleClass="requiredInput"  layout="block">-->
                                <!--<apex:outputPanel styleClass="requiredBlock" layout="block"/>-->
                                <!--<apex:inputField value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />-->
                            <!--</apex:outputPanel>-->
                        <!--</apex:pageBlockSectionItem>-->

                        <apex:pageBlockSectionItem rendered="{!IF(AND(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <apex:pageBlockSectionItem rendered="{!WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Lump_Sum__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Start_Date__c), WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!WKZFixAmountWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_End_Date__c), WKZFixAmountWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_WKZFixAmount" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!WKZFixAmountWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!WKZFixAmountWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_WKZFixAmountEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setWKZFixAmountTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField required="true"
                                    styleclass="cpiAmount"
                                    value="{!cpiObj.EUR_CRM_Volume_lt__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Unit__c}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_WKZFixAmount" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_WKZFixAmountEditor, pageMsg"
                        oncomplete="WKZFixAmountDescriptionItemCount+=1; console.log('WKZFixAmount: Add Non-Brand Item - Count:'+WKZFixAmountDescriptionItemCount); setWKZFixAmountTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!WKZFixAmountWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!WKZFixAmountWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!WKZFixAmountWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, WKZFixAmountWrapper.currentContractActivityItem.productItemsCount!=null, WKZFixAmountWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_WKZFixAmountEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setWKZFixAmountTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!WKZFixAmountWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>

            <div id="tab_Visibility">
                <apex:outputPanel id="panel_Visibility" layout="block">
                <apex:pageBlock id="pageBlock_VisibilitySummary" rendered="{!NOT(VisibilityWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!VisibilityWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_Visibility, pageMsg"
                            onComplete="console.log('Add Visibility'); setVisibilityTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!VisibilityWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!VisibilityWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!VisibilityWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_Visibility, pageMsg"
                                    onComplete="console.log('Edit Visibility'); setVisibilityTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_VisibilitySummary, pageMsg"
                                    onComplete="console.log('Remove Visibility'); setVisibilityTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_Visibility, pageMsg"
                                        onComplete="console.log('Clone Visibility'); setVisibilityTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!VisibilityWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_VisibilityEditor" rendered="{!VisibilityWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_Visibility, pageMsg"
                            onComplete="console.log('Save New Visibility'); setVisibilityTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_Visibility, pageMsg"
                            onComplete="console.log('Cancel New Visibility'); setVisibilityTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                    
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(VisibilityWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/>                  
                                <apex:selectList value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!visibilityPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:outputField value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" -->
                            <!--rendered="{!IF(AND(VisibilityWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}"/>-->

                        <!--<apex:pageBlockSectionItem >-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>-->
                            <!--<apex:outputPanel styleClass="requiredInput"  layout="block">-->
                                <!--<apex:outputPanel styleClass="requiredBlock" layout="block"/>-->
                                <!--<apex:inputField value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />-->
                            <!--</apex:outputPanel>-->
                        <!--</apex:pageBlockSectionItem>-->


                        <apex:inputField id="input_caVendor" styleClass="eventVendorClass" value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(VisibilityWrapper.mechanicType.EUR_CRM_Has_Vendor__c, VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="eventVendorClass" value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(VisibilityWrapper.mechanicType.EUR_CRM_Has_Vendor__c, VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>    
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(VisibilityWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, VisibilityWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <apex:pageBlockSectionItem rendered="{!VisibilityWrapper.mechanicType.EUR_CRM_Has_Lump_Sum__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(VisibilityWrapper.mechanicType.EUR_CRM_Has_Start_Date__c), VisibilityWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!VisibilityWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!VisibilityWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(VisibilityWrapper.mechanicType.EUR_CRM_Has_End_Date__c), VisibilityWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_Visibility" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!VisibilityWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!VisibilityWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!VisibilityWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_VisibilityEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setVisibilityTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>

                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_Visibility" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_VisibilityEditor, pageMsg"
                        oncomplete="VisibilityDescriptionItemCount+=1; console.log('Visibility: Add Non-Brand Item - Count:'+VisibilityDescriptionItemCount); setVisibilityTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!VisibilityWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!VisibilityWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!VisibilityWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, VisibilityWrapper.currentContractActivityItem.productItemsCount!=null, VisibilityWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_VisibilityEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setVisibilityTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!VisibilityWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>
            
            <div id="tab_Others">
                <apex:outputPanel id="panel_Other" layout="block">
                <apex:pageBlock id="pageBlock_OtherSummary" rendered="{!NOT(OthersWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!OthersWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_Other, pageMsg"
                            onComplete="console.log('Add Other'); setOthersTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!OthersWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!OthersWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!OthersWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_Other, pageMsg"
                                    onComplete="console.log('Edit Other'); setOthersTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_OtherSummary, pageMsg"
                                    onComplete="console.log('Remove Other'); setOthersTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_Other, pageMsg"
                                        onComplete="console.log('Clone Other'); setOthersTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!OthersWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Name__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_OtherEditor" rendered="{!OthersWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_Other, pageMsg"
                            onComplete="console.log('Save New Other'); setOthersTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_Other, pageMsg"
                            onComplete="console.log('Cancel New Other'); setOthersTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>

                    <apex:outputPanel id="pageBlock_OtherContractActivity">
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Name__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(OthersWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, NOT(OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c)), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:inputField styleclass="eventPRCheckbox" value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c}" -->
                        <!--rendered="{!OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c}" label="PR Other"-->
                        <!--onchange="assignVendor('{!OthersWrapper.mechanicTypeName}', $.find('input.eventPRCheckbox[name*=\'OtherEditor\']')[0].checked); return false;"/>-->

                        <apex:inputField styleclass="eventPRCheckbox" value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Is_PR_Other__c}"
                             onchange="assignVendor('{!OthersWrapper.mechanicTypeName}', $.find('input.eventPRCheckbox[name*=\'OtherEditor\']')[0].checked); return false;"
                        />

                        <apex:pageBlockSectionItem rendered="{!OthersWrapper.mechanicType.EUR_CRM_Has_Lump_Sum__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:inputField id="input_caVendor" styleClass="OtherVendorClass" value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c, OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="OtherVendorClass" value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c, OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>
                        
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(OthersWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/>                  
                                <apex:selectList value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!otherPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(OthersWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}">-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>-->
                            <!--<apex:outputLabel value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" />-->
                        <!--</apex:pageBlockSectionItem>-->

                        <!--<apex:pageBlockSectionItem >-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>-->
                            <!--<apex:outputPanel styleClass="requiredInput"  layout="block">-->
                                <!--<apex:outputPanel styleClass="requiredBlock" layout="block"/>-->
                                <!--<apex:inputField value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />-->
                            <!--</apex:outputPanel>-->
                        <!--</apex:pageBlockSectionItem>-->
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(OthersWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(OthersWrapper.mechanicType.EUR_CRM_Has_Start_Date__c), OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                        
                        <apex:outputField styleClass="OtherBudgetExclusion" value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Exclude_Budget_Deduction__c}" rendered="{!OthersWrapper.mechanicType.EUR_CRM_Has_Budget_Exclusion_Option__c}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!OthersWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!OthersWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(OthersWrapper.mechanicType.EUR_CRM_Has_End_Date__c), OthersWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    </apex:outputPanel>
                    <apex:pageBlockSection id="section_lineItem_Others" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!OthersWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!OthersWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!OthersWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_OtherEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setOthersTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>

                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_Others" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_OtherEditor, pageMsg"
                        oncomplete="OtherDescriptionItemCount+=1; console.log('Others: Add Non-Brand Item - Count:'+OtherDescriptionItemCount); setOthersTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!OthersWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!OthersWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!OthersWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, OthersWrapper.currentContractActivityItem.productItemsCount!=null, OthersWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_OtherEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setOthersTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!OthersWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>
            
            <div id="tab_DrinksMenu">
                <apex:outputPanel id="panel_DrinksMenu" layout="block">
                <apex:pageBlock id="pageBlock_DrinksMenuSummary" rendered="{!NOT(DrinksMenuWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!DrinksMenuWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_DrinksMenu, pageMsg"
                            onComplete="console.log('Add DrinksMenu'); setDrinksMenuTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!DrinksMenuWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!DrinksMenuWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_DrinksMenu, pageMsg"
                                    onComplete="console.log('Edit DrinksMenu'); setDrinksMenuTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_DrinksMenuSummary, pageMsg"
                                    onComplete="console.log('Remove DrinksMenu'); setDrinksMenuTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_DrinksMenu, pageMsg"
                                        onComplete="console.log('Clone DrinksMenu'); setDrinksMenuTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!DrinksMenuWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_DrinksMenuEditor" rendered="{!DrinksMenuWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_DrinksMenu, pageMsg"
                            onComplete="console.log('Save New DrinksMenu'); setDrinksMenuTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_DrinksMenu, pageMsg"
                            onComplete="console.log('Cancel New DrinksMenu'); setDrinksMenuTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>  
                    
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:selectList value="{!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!drinksMenuPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:outputField value="{!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" -->
                            <!--rendered="{!IF(AND(DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}"/>-->
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Start_Date__c), DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!DrinksMenuWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!DrinksMenuWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(DrinksMenuWrapper.mechanicType.EUR_CRM_Has_End_Date__c), DrinksMenuWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_DrinksMenu" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!DrinksMenuWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!DrinksMenuWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_DrinksMenuEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setDrinksMenuTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>

                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_DrinksMenu" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_DrinksMenuEditor, pageMsg"
                        oncomplete="DrinksMenuDescriptionItemCount+=1; console.log('DrinksMenu: Add Non-Brand Item - Count:'+DrinksMenuDescriptionItemCount); setDrinksMenuTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!DrinksMenuWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!DrinksMenuWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!DrinksMenuWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, DrinksMenuWrapper.currentContractActivityItem.productItemsCount!=null, DrinksMenuWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_DrinksMenuEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setDrinksMenuTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!DrinksMenuWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>
                        
            <div id="tab_Events">
                <apex:outputPanel id="panel_Event" layout="block">
                <apex:pageBlock id="pageBlock_EventSummary" rendered="{!NOT(EventsWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!EventsWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_Event, pageMsg"
                            onComplete="console.log('Add Event'); setEventsTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!EventsWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!EventsWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!EventsWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_Event, pageMsg"
                                    onComplete="console.log('Edit Event'); setEventsTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_EventSummary, pageMsg"
                                    onComplete="console.log('Remove Event'); setEventsTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_Event, pageMsg"
                                        onComplete="console.log('Clone Events'); setEventsTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!EventsWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Name__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_EventEditor" rendered="{!EventsWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_Event, pageMsg"
                            onComplete="console.log('Save New Event'); setEventsTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_Event, pageMsg"
                            onComplete="console.log('Cancel New Event'); setEventsTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:outputPanel id="pageBlock_EventContractActivity">
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Name__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(EventsWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, NOT(EventsWrapper.mechanicType.EUR_CRM_Has_Vendor__c)), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:inputField styleclass="eventPRCheckbox" value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c}" -->
                        <!--rendered="{!EventsWrapper.mechanicType.EUR_CRM_Has_Vendor__c}" label="PR Event"-->
                        <!--onchange="assignVendor('{!EventsWrapper.mechanicTypeName}', $.find('input.eventPRCheckbox[name*=\'EventEditor\']')[0].checked); return false;"/>-->

                        <apex:inputField styleclass="eventPRCheckbox" value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Is_PR_Event__c}"
                        onchange="assignVendor('{!EventsWrapper.mechanicTypeName}', $.find('input.eventPRCheckbox[name*=\'EventEditor\']')[0].checked); return false;"/>

                        
                        <apex:pageBlockSectionItem rendered="{!EventsWrapper.mechanicType.EUR_CRM_Has_Lump_Sum__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:inputField id="input_caVendor" styleClass="eventVendorClass" value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(EventsWrapper.mechanicType.EUR_CRM_Has_Vendor__c, EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="eventVendorClass" value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(EventsWrapper.mechanicType.EUR_CRM_Has_Vendor__c, EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>
                        
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(EventsWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:selectList value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!eventsPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(EventsWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}">-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>-->
                            <!--<apex:outputLabel value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" />-->
                        <!--</apex:pageBlockSectionItem>-->

                        <!--<apex:pageBlockSectionItem >-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>-->
                            <!--<apex:outputPanel styleClass="requiredInput"  layout="block">-->
                                <!--<apex:outputPanel styleClass="requiredBlock" layout="block"/>-->
                                <!--<apex:inputField value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />-->
                            <!--</apex:outputPanel>-->
                        <!--</apex:pageBlockSectionItem>-->
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(EventsWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, EventsWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:outputField styleClass="eventBudgetExclusion" value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Exclude_Budget_Deduction__c}" rendered="{!EventsWrapper.mechanicType.EUR_CRM_Has_Budget_Exclusion_Option__c}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!EventsWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!EventsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(EventsWrapper.mechanicType.EUR_CRM_Has_End_Date__c), EventsWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    </apex:outputPanel>
                    <apex:pageBlockSection id="section_lineItem_Events" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!EventsWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!EventsWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!EventsWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_EventEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setEventsTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>

                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_Events" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_EventEditor, pageMsg"
                        oncomplete="eventDescriptionItemCount+=1; console.log('Events: Add Non-Brand Item - Count:'+eventDescriptionItemCount); setEventsTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!EventsWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!EventsWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!EventsWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, EventsWrapper.currentContractActivityItem.productItemsCount!=null, EventsWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_EventEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setEventsTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!EventsWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>
            
            <div id="tab_Training">
                <apex:outputPanel id="panel_Training" layout="block">
                <apex:pageBlock id="pageBlock_TrainingSummary" rendered="{!NOT(TrainingWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!TrainingWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_Training, pageMsg"
                            onComplete="console.log('Add Training'); setTrainingTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!TrainingWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!TrainingWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!TrainingWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_Training, pageMsg"
                                    onComplete="console.log('Edit Training'); setTrainingTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_TrainingSummary, pageMsg"
                                    onComplete="console.log('Remove Training'); setTrainingTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_Training, pageMsg"
                                        onComplete="console.log('Clone Training'); setTrainingTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!TrainingWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Name__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                                <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_TrainingEditor" rendered="{!TrainingWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_Training, pageMsg"
                            onComplete="console.log('Save New Training'); setTrainingTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_Training, pageMsg"
                            onComplete="console.log('Cancel New Training'); setTrainingTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:outputPanel id="pageBlock_TrainingContractActivity">
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity_Training">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Name__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(TrainingWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, NOT(TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c)), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:inputField styleclass="eventPRCheckbox" value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c}" -->
                        <!--rendered="{!TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c}" label="PR Training"-->
                        <!--onchange="assignVendor('{!TrainingWrapper.mechanicTypeName}', $.find('input.eventPRCheckbox[name*=\'TrainingEditor\']')[0].checked);"/>-->

                        <apex:inputField styleclass="eventPRCheckbox" value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Is_PR_Training__c}"
                             onchange="assignVendor('{!TrainingWrapper.mechanicTypeName}', $.find('input.eventPRCheckbox[name*=\'TrainingEditor\']')[0].checked); return false;"/>
                        
                        <apex:pageBlockSectionItem rendered="{!TrainingWrapper.mechanicType.EUR_CRM_Has_Lump_Sum__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:inputField id="input_caVendor" styleClass="eventVendorClass" value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c, TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="eventVendorClass" value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c, TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>
                        
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(TrainingWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                <apex:selectList value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!trainingPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(TrainingWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}">-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>-->
                            <!--<apex:outputLabel value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" />-->
                        <!--</apex:pageBlockSectionItem>-->

                        <!--<apex:pageBlockSectionItem >-->
                            <!--<apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>-->
                            <!--<apex:outputPanel styleClass="requiredInput"  layout="block">-->
                                <!--<apex:outputPanel styleClass="requiredBlock" layout="block"/>-->
                                <!--<apex:inputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />-->
                            <!--</apex:outputPanel>-->
                        <!--</apex:pageBlockSectionItem>-->

                        <apex:pageBlockSectionItem rendered="{!IF(AND(TrainingWrapper.mechanicType.EUR_CRM_Has_Start_Date__c, TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(TrainingWrapper.mechanicType.EUR_CRM_Has_Start_Date__c), TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                        <apex:outputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Exclude_Budget_Deduction__c}" rendered="{!TrainingWrapper.mechanicType.EUR_CRM_Has_Budget_Exclusion_Option__c}"/>
                        
                        <apex:pageBlockSectionItem rendered="{!TrainingWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!TrainingWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem rendered="{!IF(AND(NOT(TrainingWrapper.mechanicType.EUR_CRM_Has_End_Date__c), TrainingWrapper.mechanicType.EUR_CRM_Has_Vendor__c), true, false)}"/>
                    </apex:pageBlockSection>
                    </apex:outputPanel>
                    <apex:pageBlockSection id="section_lineItem_Training" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!TrainingWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!TrainingWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!TrainingWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_TrainingEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setTrainingTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_Training" title="{!$Label.EUR_CRM_Brands}" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_TrainingEditor, pageMsg"
                        oncomplete="eventDescriptionItemCount+=1; console.log('Training: Add Non-Brand Item - Count:'+eventDescriptionItemCount); setTrainingTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!TrainingWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!TrainingWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!TrainingWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, TrainingWrapper.currentContractActivityItem.productItemsCount!=null, TrainingWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}"
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_TrainingEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setTrainingTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!TrainingWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>

            <div id="tab_POSMaterial">
                <apex:outputPanel id="panel_POSMaterial" layout="block">
                <apex:pageBlock id="pageBlock_POSMaterialSummary" rendered="{!NOT(POSMaterialWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!POSMaterialWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_POSMaterial, pageMsg"
                            onComplete="console.log('Add POSMaterial'); setPOSMaterialTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!POSMaterialWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!POSMaterialWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!POSMaterialWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_POSMaterial, pageMsg"
                                    onComplete="console.log('Edit POSMaterial'); setPOSMaterialTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_POSMaterialSummary, pageMsg"
                                    onComplete="console.log('Remove POSMaterial'); setPOSMaterialTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_POSMaterial, pageMsg"
                                        onComplete="console.log('Clone POSMaterial'); setPOSMaterialTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!POSMaterialWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Exclude_Budget_Deduction__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_POSMaterialEditor" rendered="{!POSMaterialWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_POSMaterial, pageMsg"
                            onComplete="console.log('Save New POSMaterial'); setPOSMaterialTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_POSMaterial, pageMsg"
                            onComplete="console.log('Cancel New POSMaterial'); setPOSMaterialTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                                                
                        <apex:pageBlockSectionItem rendered="{!POSMaterialWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:selectList value="{!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!posMaterialPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:outputField styleClass="OtherBudgetExclusion" value="{!POSMaterialWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Exclude_Budget_Deduction__c}" rendered="{!POSMaterialWrapper.mechanicType.EUR_CRM_Has_Budget_Exclusion_Option__c}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_POSMaterial" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!POSMaterialWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!POSMaterialWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!POSMaterialWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_POSMaterialEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setPOSMaterialTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>

                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_POSMaterial" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_POSMaterialEditor, pageMsg"
                        oncomplete="POSMaterialDescriptionItemCount+=1; console.log('POSMaterial: Add Non-Brand Item - Count:'+POSMaterialDescriptionItemCount); setPOSMaterialTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!POSMaterialWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!POSMaterialWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!POSMaterialWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, POSMaterialWrapper.currentContractActivityItem.productItemsCount!=null, POSMaterialWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_POSMaterialEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setPOSMaterialTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSMaterialWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>

            <div id="tab_POSWKZ">
                <apex:outputPanel id="panel_POSWKZ" layout="block">
                <apex:pageBlock id="pageBlock_POSWKZSummary" rendered="{!NOT(POSWKZWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!POSWKZWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_POSWKZ, pageMsg"
                            onComplete="console.log('Add POSWKZ'); setPOSWKZTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!POSWKZWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!POSWKZWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!POSWKZWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_POSWKZ, pageMsg"
                                    onComplete="console.log('Edit POSWKZ'); setPOSWKZTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_POSWKZSummary, pageMsg"
                                    onComplete="console.log('Remove POSWKZ'); setPOSWKZTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_POSWKZ, pageMsg"
                                        onComplete="console.log('Clone POSWKZ'); setPOSWKZTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!POSWKZWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_POSWKZEditor" rendered="{!POSWKZWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_POSWKZ, pageMsg"
                            onComplete="console.log('Save New POSWKZ'); setPOSWKZTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_POSWKZ, pageMsg"
                            onComplete="console.log('Cancel New POSWKZ'); setPOSWKZTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                            
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                    
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(POSWKZWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:selectList value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!posWKZPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:outputField value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" -->
                            <!--rendered="{!IF(AND(POSWKZWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}"/>-->
                        
                        <apex:pageBlockSectionItem rendered="{!POSWKZWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <apex:inputField id="input_caVendor" styleClass="eventVendorClass" value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(POSWKZWrapper.mechanicType.EUR_CRM_Has_Vendor__c, POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="eventVendorClass" value="{!POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(POSWKZWrapper.mechanicType.EUR_CRM_Has_Vendor__c, POSWKZWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>

                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_POSWKZ" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!POSWKZWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!POSWKZWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!POSWKZWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_POSWKZEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setPOSWKZTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Description__c}" required="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, false, true)}"/></td>

                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_POSWKZ" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_POSWKZEditor, pageMsg"
                        oncomplete="POSWKZDescriptionItemCount+=1; console.log('POSWKZ: Add Non-Brand Item - Count:'+POSWKZDescriptionItemCount); setPOSWKZTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!POSWKZWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!POSWKZWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!POSWKZWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, POSWKZWrapper.currentContractActivityItem.productItemsCount!=null, POSWKZWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_POSWKZEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setPOSWKZTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!POSWKZWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>

            <div id="tab_Napkins">
                <apex:outputPanel id="panel_Napkins" layout="block">
                <apex:pageBlock id="pageBlock_NapkinsSummary" rendered="{!NOT(NapkinsWrapper.isEditMode)}">
                    <apex:outputPanel layout="block">
                        <apex:commandButton value="{!$Label.EUR_CRM_Add} {!NapkinsWrapper.mechanicTypeName}" status="loading"
                            immediate="true"
                            action="{!retrieveCurrentContractActivity}"
                            rerender="panel_Napkins, pageMsg"
                            onComplete="console.log('Add Napkins'); setNapkinsTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="null"/>
                        </apex:commandButton>
                        <table id="{!CONTRACT_SUMMARY_ITEM_PREFIX}{!NapkinsWrapper.mechanicTypeId}">
                            <apex:repeat var="caKey" value="{!NapkinsWrapper.contractActivityItems}">
                            <apex:repeat var="caObj" value="{!NapkinsWrapper.contractActivityItems[caKey]}">
                            <tr>
                                <td style="text-align:center;">
                                    <apex:commandLink value="{!$Label.EUR_CRM_Edit}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    action="{!retrieveCurrentContractActivity}"
                                    rerender="panel_Napkins, pageMsg"
                                    onComplete="console.log('Edit Napkins'); setNapkinsTable(true);"> 
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Remove}" status="loading" styleclass="actionLink"
                                    immediate="true"
                                    onclick="if(!confirm('Are you sure?')){return false;}"
                                    action="{!removeContractActivity}"
                                    rerender="pageBlock_NapkinsSummary, pageMsg"
                                    onComplete="console.log('Remove Napkins'); setNapkinsTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="{!$Label.EUR_CRM_Clone}" status="loading" styleclass="actionLink"
                                        immediate="true"
                                        action="{!cloneContractActivity}"
                                        rerender="panel_Napkins, pageMsg"
                                        onComplete="console.log('Clone Napkins'); setNapkinsTable(true);">
                                        <apex:param name="PARAM_MECHANIC_TYPE_ID" value="{!NapkinsWrapper.mechanicTypeId}"/>
                                        <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                                        <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!caKey}"/>
                                    </apex:commandLink>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Vendor__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Payment_Term__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_End_Date__c}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!caObj.contractActivityItem.EUR_CRM_Amount__c}"/>
                                </td>
                                <td>
                                    <table>
                                        <apex:repeat var="cpiKey" value="{!caObj.contractProductItems}">
                                        <apex:repeat var="cpiObj" value="{!caObj.contractProductItems[cpiKey]}">
                                        <tr>
                                            <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}" rendered="{!IF(cpiObj.EUR_CRM_Name_Reference__c!=null, true, false)}"/>
                                            <apex:outputField value="{!cpiObj.EUR_CRM_Description__c}" rendered="{!IF(AND(cpiObj.EUR_CRM_Description__c!=null,cpiObj.EUR_CRM_Brand__c==null),true,false)}"/>
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                        </apex:repeat>
                                    </table>
                                </td>
                            </tr>
                            </apex:repeat>
                            </apex:repeat>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlock>
                
                <apex:pageBlock id="pageBlock_NapkinsEditor" rendered="{!NapkinsWrapper.isEditMode}">
                    <apex:pageBlockButtons >
                        <apex:commandButton value="{!$Label.EUR_CRM_Confirm_Button}" status="loading"
                            onclick="console.log('Test Current Contract Activity:{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Contract__c} - {!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Name__c}')"
                            action="{!saveCurrentContractActivity}"
                            rerender="panel_Napkins, pageMsg"
                            onComplete="console.log('Save New Napkins'); setNapkinsTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                        
                        <apex:commandButton value="{!$Label.EUR_CRM_Cancel}" status="loading"
                            immediate="true"
                            action="{!removeCurrentContractActivity}"
                            rerender="panel_Napkins, pageMsg"
                            onComplete="console.log('Cancel New Napkins'); setNapkinsTable(true);">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                        </apex:commandButton>
                    </apex:pageBlockButtons>
                    
                    <apex:pageBlockSection columns="2" rendered="true" id="pageBlock_CurrentContractActivity">
                        
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Start_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Start_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                    
                        <!--<apex:pageBlockSectionItem rendered="{!IF(AND(NapkinsWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),false, true)}">-->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Payment_Term__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:selectList value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term__c}" size="1">
                                    <apex:selectOptions value="{!napkinsPaymentTermOptions}" />
                                </apex:selectList>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        
                        <!--<apex:outputField value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Payment_Term_By_SR__c}" -->
                            <!--rendered="{!IF(AND(NapkinsWrapper.mechanicType.EUR_CRM_Has_Payment_Term__c, NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c),true, false)}"/>-->
                        
                        <apex:pageBlockSectionItem rendered="{!NapkinsWrapper.mechanicType.EUR_CRM_Has_End_Date__c}">
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_End_Date__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_End_Date__c}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.EUR_CRM_Contract_Activity_Item__c.fields.EUR_CRM_Amount__c.label}"/>
                            <apex:outputPanel styleClass="requiredInput"  layout="block">                 
                                <apex:outputPanel styleClass="requiredBlock" layout="block"/> 
                                <apex:inputField value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Amount__c}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem> 

                        <apex:inputField id="input_caVendor" styleClass="eventVendorClass" value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(NapkinsWrapper.mechanicType.EUR_CRM_Has_Vendor__c, NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), false, true)}"/>
                        <apex:outputField styleClass="eventVendorClass" value="{!NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_Vendor__c}" 
                        rendered="{!IF(AND(NapkinsWrapper.mechanicType.EUR_CRM_Has_Vendor__c, NapkinsWrapper.currentContractActivityItem.contractActivityItem.EUR_CRM_PR_DE_Flag__c), true, false)}"/>
                        
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="section_lineItem_Napkins" title="{!$Label.EUR_CRM_Contract_Line_Items}" columns="1">
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}">
                                <apex:repeat var="cpiKey" value="{!NapkinsWrapper.currentContractActivityItem.contractProductItems}">
                                <apex:repeat var="cpiObj" value="{!NapkinsWrapper.currentContractActivityItem.contractProductItems[cpiKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Remove}"
                                        immediate="true"
                                        action="{!removeContractProductItem}"
                                        rerender="pageBlock_NapkinsEditor, pageMsg"
                                        onComplete="console.log('Remove CPI'); setNapkinsTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_PRODUCT_ITEM_ID" value="{!cpiKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!cpiObj.EUR_CRM_Name_Reference__c}"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_Quantity__c}" styleclass="cpiQty"
                                    onchange="$('#span_footer_total_Napkins').text(sumTotalQuantity($('#{!CONTRACT_LINE_ITEM_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}')));"/></td>
                                    <td><apex:inputField value="{!cpiObj.EUR_CRM_With_Logo__c}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection id="section_contractMechanic_Napkins" title="Brands" columns="1">
                        <apex:commandLink value="{!$Label.EUR_CRM_Add} {!$Label.EUR_CRM_Non_Brand_Item}" 
                        immediate="true"
                        action="{!addContractProductItem}"
                        status="loading" styleClass="btn" style="text-decoration:none"
                        rerender="pageBlock_NapkinsEditor, pageMsg"
                        oncomplete="NapkinsDescriptionItemCount+=1; console.log('Napkins: Add Non-Brand Item - Count:'+NapkinsDescriptionItemCount); setNapkinsTable(true); return false;">
                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!DESCRIPTION_PREFIX}"/>                        
                        </apex:commandLink>
                        <br/>
                        <apex:outputPanel layout="block">
                            <table id="{!CONTRACT_MECHANIC_TABLE_PREFIX}{!NapkinsWrapper.mechanicTypeId}">
                                <apex:repeat var="csKey" value="{!NapkinsWrapper.currentContractActivityItem.brandItems}">
                                <apex:repeat var="csObj" value="{!NapkinsWrapper.currentContractActivityItem.brandItems[csKey]}">
                                <tr>
                                    <td>
                                        <apex:commandLink value="{!$Label.EUR_CRM_Add}"
                                        rendered = "{!IF(AND(isFlagshipMode, NapkinsWrapper.currentContractActivityItem.productItemsCount!=null, NapkinsWrapper.currentContractActivityItem.productItemsCount>=1), true, true)}" 
                                        immediate="true"
                                        action="{!addContractProductItem}"
                                        rerender="pageBlock_NapkinsEditor, pageMsg"
                                        onComplete="console.log('Add CPI'); setNapkinsTable(true);"
                                        status="loading">
                                            <apex:param name="PARAM_MECHANIC_TYPE_NAME" value="{!NapkinsWrapper.mechanicTypeName}"/>
                                            <apex:param name="PARAM_CONTRACT_ACTIVITY_KEY" value="{!CURRENT_CONTRACT_ACTIVITY_FLAG}"/>
                                            <apex:param name="PARAM_CONTRACT_SOURCE_ITEM_ID" value="{!csKey}"/>
                                        </apex:commandLink>
                                    </td>
                                    <td><apex:outputField value="{!csObj.Name}"/></td>
                                </tr>
                                </apex:repeat>
                                </apex:repeat>
                            </table>
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                </apex:outputPanel>
            </div>

            <div id="tab_Listing">
                <apex:outputPanel id="panel_listing" layout="block">
                    <c:EUR_CRM_ContractListing Component_Key="{!LISTING_KEY}"
                        Page_Controller="{!this}"
                        Contract_Header="{!contractObj}"
                        All_BrandQuality_List="{!IF(isFlagshipMode, listingPouringBQList, allBrandQualityList)}"/>
                </apex:outputPanel>
            </div>

            <div id="tab_Pouring">
                <apex:outputPanel id="panel_pouring" layout="block">
                    <c:EUR_CRM_ContractPouring Component_Key="{!POURING_KEY}"
                            Page_Controller="{!this}"
                            Contract_Header="{!contractObj}"
                            All_BrandQuality_List="{!IF(isFlagshipMode, listingPouringBQList, allBrandQualityList)}"/>
                </apex:outputPanel>
            </div>

        </div>
        </div>
        
         <script>
            $("#mechanicTypeTabs").tabs();
            $("#contractContentTabs").tabs();
            
		    /*
		    *   function: saveListingPouringTables
		    *   Workaround to fix jQuery datatable's bug whereby only the current page
		    *   will be sent to SFDC
		    */
		    function saveListingPouringTables(isQuickSave) {
		        // Change the length of Listing Pouring show all BQ table
		        var listingPouringAllTable = $('#CONTRACT_LINE_ITEM_ListingPouring_All').dataTable();
		        if(typeof listingPouringAllTable != "undefined" &&
		          listingPouringAllTable != null &&
		          listingPouringAllTable.length > 0) {
		          
    		      listingPouringAllTable.fnLengthChange(5000);
    		    }
		        
		        // Change the length of Listing Pouring BQ table
		        var listingPouringTable = $('#CONTRACT_LINE_ITEM_ListingPouring').dataTable();
		        if(typeof listingPouringTable != "undefined" &&
		          listingPouringTable != null &&
		          listingPouringTable.length > 0) {
		          
		          listingPouringTable.fnLengthChange(5000);
                }
		        
		        if(isQuickSave) {
		          xQuickSaveContract('true');
		          //xSaveContract('true');
		        } else {
		          xSaveContract('false');
		        }
		    }
        </script>
        
    </apex:pageBlock>
    
    </apex:form>

</body>

</apex:page>