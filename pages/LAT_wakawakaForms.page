<apex:page controller="LAT_wakawakaFormsController" showheader="false" applyBodyTag="false" applyHtmlTag="false" standardstylesheets="false"  title="Audit/Survey Builder"  sidebar="false" lightningStylesheets="true"  >

    <!-- applyHtmlTag="false" applyBodyTag="false" -->
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >

    <head>
      <!-- <link rel="stylesheet" type="text/css" href="static/assets/css/demo.css"> -->
      <title>Audit/Survey Builder</title>
      <apex:stylesheet value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/css/demo.css')}"/>
      <!-- <link rel="stylesheet" type="text/css" href="static/styles/salesforce-lightning-design-system.min.css"> -->
      <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" />
       <apex:slds />
      <style>
      .form-wrap.form-builder .frmb .form-elements .false-label:first-child, .form-wrap.form-builder .frmb .form-elements label:first-child {
          margin-right: 0;
      }


      .form-wrap.form-builder .relationFields-wrap input.form-control, .form-wrap.form-builder .object-wrap input.form-control {
            color: #2183c1!important;
            background: #daf1ff url(/_slds/images/logo.svg) no-repeat center right;
            background-size: 30px;
            font-weight: bold;
        }

        .name-wrap label:before {
            content: '*';
    color: #cc3131;
    font-size: 13px;
    margin: 0 5px 0 0;
        }

        ul#selected-names li {
    display: block;
    float: left;
    border: solid 1px #1e64af;
    font-size: 11px;
    padding: 5px;
    margin-right: 5px;
    border-radius: 4px;
    background: #359dca;
    color: #fff;
    margin-top: 5px;}
      </style>
    </head>



    <body class="slds-scope">
  <div class="slds ">

    <!-- PAGE HEADER -->
    <div class="slds-page-header" role="banner">

      <!-- LAYOUT GRID -->
      <div class="slds-grid ">

        <!-- GRID COL -->
        <div class="slds-col">

          <!-- HEADING AREA -->
          <!-- MEDIA OBJECT = FIGURE + BODY -->
          <div class="slds-media">

            <div class="slds-media__figure">
              <span class="slds-icon__container slds-icon__container--circle slds-icon-action-follow">
                <svg aria-hidden="true" class="slds-icon slds-icon--medium ">

    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#new_custom34')}" xmlns:xlink="http://www.w3.org/1999/xlink"></use>

                  <!-- <use xlink:href="static/icons/action-sprite/svg/symbols.svg#new_custom34"></use> -->
                </svg>
              </span>
            </div>

            <div class="slds-media__body">
              <p class="slds-text-heading--label">Audit/Survey Schema Builder</p>
              <h1 class="slds-text-heading--medium">{!fbs.Name} - <span class="slds-text-title_caps {!IF(fbs.status__c == 'Active', 'slds-text-color_success', 'slds-text-color_error')}">[STATUS: {!fbs.Status__c}]</span>

              </h1>
              <p class="slds-text-body_small">Total: {!fbs.Pages_Count__c} Pages</p>
            </div>

          </div>
          <!-- / MEDIA OBJECT -->
          <!-- /HEADING AREA -->

        </div>
        <!-- /GRID COL -->

        <!-- GRID COL -->
        <div id="newAct" class="slds-col slds-no-flex slds-align-middle">
            <a class="slds-button slds-button_outline-brand" href="/apex/{!backUrl}">
                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#back')}"></use>
                  </svg>
                Back to Dashboard</a>
                <div class="slds-dropdown-trigger slds-dropdown-trigger_over" onhover="$(this).addClass('slds-is-open')" onmouseout="$(this).removeClass('slds-is-open')">
<button class="slds-button slds-button_outline-brand" aria-haspopup="true" title="Show More">
<svg class="slds-button__icon" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#database')}"></use>
</svg>
<span class="">{!connections.size} Connections</span>
</button>



<div class="slds-dropdown slds-dropdown_right slds-dropdown_length-with-icon-5">
<ul class="slds-dropdown__list" role="menu" aria-label="Show More">
<apex:repeat value="{!connections}"  var="con" id="conn">
<li class="slds-dropdown__item slds-is-selected" role="presentation">
<a href="/apex/LAT_SchemaBuilderConnection?schema={!fbs.Id}&id={!con.id}" role="menuitemcheckbox" aria-checked="true" tabindex="0">
<span class="slds-truncate" title="Menu Item One">
<svg class="slds-icon slds-icon_selected slds-icon_x-small slds-icon-text-default slds-m-right_x-small" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#database')}"></use>
</svg>{!con.Name} </span>
</a>
</li>
<!-- <li class="slds-dropdown__item slds-is-selected" role="presentation">
<a href="javascript:void(0);" role="menuitemcheckbox" aria-checked="true" tabindex="0">
<span class="slds-truncate" title="Menu Item One">
<svg class="slds-icon slds-icon_selected slds-icon_x-small slds-icon-text-default slds-m-right_x-small" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#database')}"></use>
</svg>Connection 1 -  User</span>
</a>
</li> -->

  </apex:repeat>


  <li class="slds-has-divider_top-space" role="separator"></li>
<li class="slds-dropdown__item" role="presentation">
<a href="/apex/LAT_SchemaBuilderConnection?schema={!fbs.Id}" role="menuitemcheckbox" aria-checked="false" tabindex="-1">
<span class="slds-truncate" title="Menu Item Five">
<svg class="slds-icon slds-icon_x-small slds-icon-text-default slds-m-right_x-small" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
</svg>New Connection</span>
</a>
</li>


</ul>
</div>
</div>
            <a class="slds-button slds-button_brand" href="/apex/LAT_wakawakaPageBuilder?id={!fbs.Id}">
                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#view_relationship')}"></use>
                  </svg>

                Preview Entire Form</a>




        </div>
        <!-- / GRID COL -->

      </div>
      <!-- / LAYOUT GRID -->

    </div>
    <!-- / PAGE HEADER -->

  <div class="loader" style="height: 100%;width: 100%;position: fixed;background: #fff;z-index: 999;opacity: 0.8;top: 0;">
        <div role="status" class="slds-spinner slds-spinner_large">
          <span class="slds-assistive-text">Loading</span>
          <div class="slds-spinner__dot-a"></div>
          <div class="slds-spinner__dot-b"></div>
        </div>
    </div>
    <div class="content slds-hide">
    <div class="slds-grid">
<div class="slds-col">
<div>
  <h1 class="slds-page-header__title slds-truncate slds-align-middle" title="{!fbs.Name}">{!fbs.Name}</h1>
  <div class="slds-text-title_capps" id="currentPage">
    <div class="slds-form_stacked">
        <div class="">
            <div class="slds-form-element slds-form-element_edit slds-hint-parent" >
                <div class="slds-form-element__control" id="currName" style="height: 32px;">
                    <span class="" id="currentPage-Name">####</span>


                    <button onclick="showNameForm()" class="slds-button slds-button_icon" title="Edit: Status">
                    <svg class="slds-button__icon slds-button__icon_hint" aria-hidden="true">
                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#edit')}"></use>
                    </svg>
                    <span class="slds-assistive-text">Edit Name</span>
                    </button>
                </div>


            </div>

            <div class="slds-grid slds-form-element__control" id="name-form" style="display:none;">
              <div class="">
                <input type="text" id="newName" class="  slds-input" />
              </div>
              <div>
                <a href="javascript:;" onclick="saveNewName();" class="slds-button slds-button_neutral slds-text-color_success slds-m-horizontal_x-small"> Save</a>
              </div>
              <div>
                <a href="javascript:;" onclick="hideNameForm();" class="slds-button slds-button_neutral slds-text-color_error">Cancel</a>
              </div>

            </div>
        </div>

    </div>

  </div>
</div>
</div>
<div class="slds-col">

</div>
<div class="slds-col">
<div class="slds-clearfix">
    <div class="slds-float_right">
    <button class="slds-button slds-button_icon slds-button_icon-border-filled slds-button_icon-error" onclick="deletePage()">
    <svg class="slds-button__icon" aria-hidden="true">
    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#delete')}"></use>
    </svg>
    <span class="slds-assistive-text">Delete</span>
    </button>

    </div>
  </div>

</div>
</div>



      <!-- <span class="oi oi-icon-name" title="icon name" aria-hidden="true"></span>
    <div class="page-header">
      <h3 class="text-success">
        <img src="static/assets/png/glyphicons-361-bug.png" alt=""> Waka-Waka Schema Builder
        <small class="text-muted"> - Smart forms Generation CRM â€“ Audit / Survey module</small>
      </h3>
    </div> -->
      <br/>


      <!-- Build Wrap  -->
      <div class="slds-tabs_scoped">
        <ul class="slds-tabs_scoped__nav" role="tablist">
              <apex:variable var="rowIndex" value="0" />
              <apex:repeat value="{!fbs.Form_Builder_Pages__r}"  var="page" id="theRepeat">

                 <li class="custom-pages slds-tabs_scoped__item {! IF(VALUE(rowIndex)  == 0, 'slds-is-active' , '')}" title="Item {!rowIndex}" role="presentation">
                    <a class="slds-tabs_scoped__link" href="javascript:void(0);" role="tab" tabindex="{!rowIndex}" aria-selected="true" aria-controls="{!rowIndex}"
                      id="tab-scoped-{!rowIndex}__item"><apex:outputText value="{!page.Name}" /></a>
                  </li>
                  <apex:variable var="rowIndex" value="{!VALUE(rowIndex) + 1}"/>

                </apex:repeat>


          <!-- <li class="slds-tabs_scoped__item" title="Item Two" role="presentation">
            <a class="slds-tabs_scoped__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="1"
              id="tab-scoped-2__item">Presencia</a>
          </li> -->
          <li class="slds-tabs_scoped__item" title="New Page" role="presentation">
            <a class="slds-tabs_scoped__link" href="javascript:void(0);" onclick="cleanNewPageForm(); showOverlay('new-page'); $('#pageName').focus();" role="tab" tabindex="-1" aria-selected="false" aria-controls="new"
              id="tab-scoped-99999__item">+ New Page</a>
          </li>
        </ul>
        <div id="tab-scoped-1" class="slds-tabs_scoped__content slds-show" role="tabpanel" aria-labelledby="tab-scoped-1__item">
          <div id="stage1" class="build-wrap"></div>

          <!-- Edition Mode and wrap to get the values  -->
          <form class="render-wrap slds-form-element">

          </form>
          <button id="edit-form">Edit Form</button>
        </div>

      </div>

      <br />


    </div>
    <div style="height: 180px;">

      <div class="slds-docked-form-footer">
        <!-- <input type="text" name="" readonly id="test" onclick="openLookup('test');"> -->
        <!-- <a  class="slds-button slds-button_neutral" id="test" href="javascript:;" onclick="openLookup('test');">Test</a> -->
        <a href="/apex/{!backUrl}" class="slds-button slds-button_neutral">{!IF(fbs.status__c == 'Active', 'Back to Dashboard', 'Cancel')} </a>

        <apex:outputPanel rendered="{!fbs.Status__c != 'Active'}" layout="none">
            <button type="button" id="saveChanges" class="slds-button slds-button_brand" onclick="customSave();">Save Changes</button>
            <!-- <button type="button" id="publishForm" class="slds-button slds-button_success">Publish Form</button> -->
            <apex:form id="changeStatusForm">
                <apex:commandButton styleClass="slds-button slds-button_success" style="margin-left: 5px;" value="Publish Form" action="{!publish}"/>
            </apex:form>


        </apex:outputPanel>

      </div>

    </div>

    <!-- Footer  -->

  </div>

    <!-- overlay lookup -->
    <div class="lookupOverlay" style="height: auto;">
    <section role="dialog" tabindex="-1" class="slds-modal slds-max-medium-table_stacked  slds-max-medium-table_stacked-horizontal slds-modal_small slds-list-builder"
      aria-labelledby="id-of-modalheader-h2" aria-modal="true" aria-describedby="modal-content-id-1">
      <div class="slds-modal__container">
        <header class="slds-modal__header">
          <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="hideOverlay('lookupOverlay');"
            title="Close">
            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'icons/utility-sprite/svg/symbols.svg#close')}"></use>

              <!-- <use xlink:href="static/icons/utility-sprite/svg/symbols.svg#close" xmlns:xlink="http://www.w3.org/1999/xlink" /> -->
            </svg>
            <span class="slds-assistive-text">Close</span>
          </button>
          <h2 id="id-of-modalheader-h2" class="slds-text-heading_medium">Choose Salesforce Object</h2>
          <!-- <p class="slds-m-top_x-small">Pricebook: Salesforce Products</p> -->
        </header>
        <div class="slds-modal__content slds-grid slds-grow" id="modal-content-id-1">
          <div class="slds-hide lookupLoader" style="height: 6rem;">
            <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
              <span class="slds-assistive-text">Loading</span>
              <div class="slds-spinner__dot-a"></div>
              <div class="slds-spinner__dot-b"></div>
            </div>
          </div>
          <div class="slds-grid lookupContent slds-grid_vertical slds-hide">
            <div class="slds-p-vertical_x-small slds-p-horizontal_large slds-shrink-none slds-theme_shade">

              <div class="slds-form-element">
                <label class="slds-form-element__label" for="text-input-id-1">Salesforce Objects</label>
                <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
                  <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                      <use xlink:href="{!URLFOR($Asset.SLDS, 'icons/utility-sprite/svg/symbols.svg#search')}"></use>

                    <!-- <use xlink:href="static/icons/utility-sprite/svg/symbols.svg#search" xmlns:xlink="http://www.w3.org/1999/xlink" /> -->
                  </svg>
                  <input type="text" id="filter-lookup" class="slds-input" placeholder="Filter Objects" />
                </div>
              </div>

              <div class="slds-text-title slds-m-top_x-small lookup-count" aria-live="polite">
                <span>0</span> Objects Availables</div>
            </div>
            <div class="slds-scrollable slds-grow">

              <table role="grid" class="resultLookup slds-table slds-table_fixed-layout slds-table_bordered  slds-scrollable_none">
                <thead>
                  <tr class="slds-text-title_caps slds-line-height_reset">
                    <th scope="col" style="width: 3.75rem;"></th>
                    <th scope="col">
                      <span class="slds-truncate" title="Name">Name</span>
                    </th>
                    <!-- <th scope="col">
                      <span class="slds-truncate" title="Name">Label</span>
                    </th> -->

                  </tr>
                </thead>
                <tbody>


                </tbody>
              </table>
            </div>
          </div>
        </div>

      </div>
    </section>
    <div class="slds-backdrop"></div>
  </div>

    <!-- overlay fields -->
    <div class="fieldsOverlay" >
      <section role="dialog" tabindex="-1" class="slds-modal slds-max-medium-table_stacked  slds-max-medium-table_stacked-horizontal slds-modal_small slds-list-builder">


      <div class="slds-modal__container">
        <header class="slds-modal__header">
          <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="hideOverlay('fieldsOverlay');" title="Close">
            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
              <!-- <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="static/icons/utility-sprite/svg/symbols.svg#close" /> -->
              <use xlink:href="{!URLFOR($Asset.SLDS, '/icons/utility-sprite/svg/symbols.svg#close')}"></use>

            </svg>
            <span class="slds-assistive-text">Close</span>
          </button>
          <h2 id="id-of-modalheader-h2" class="slds-text-heading_medium">Add Fields to Lookup</h2>
          <p class="slds-m-top_x-small">Fields: Salesforce <span>Account</span></p>
        </header>
        <div class="slds-modal__content   slds-grid slds-grow" id="modal-content-id-1">
            <div class="slds-hide lookupContentFieldsLoader" style="height: 6rem;">
                <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                  <span class="slds-assistive-text">Loading</span>
                  <div class="slds-spinner__dot-a"></div>
                  <div class="slds-spinner__dot-b"></div>
                </div>
              </div>
          <div class="slds-grid slds-grid_vertical lookupContentFields">
            <div class="slds-p-vertical_x-small slds-p-horizontal_large slds-shrink-none slds-theme_shade">
              <div class="slds-form-element">
                <label class="slds-form-element__label slds-assistive-text" for="lookupFields">Search</label>
                <div class="slds-form-element__control">
                  <div class="slds-combobox_container">
                    <div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click" aria-expanded="false" aria-haspopup="listbox"
                      role="combobox">
                      <div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right" role="none">
                        <input type="text" class="slds-input slds-combobox__input" id="lookupFields" aria-autocomplete="list" aria-controls="listbox-unique-id"
                          autocomplete="off" role="textbox" placeholder="Search Fields" />
                        <span class="slds-icon_container slds-icon-utility-search slds-input__icon slds-input__icon_right">
                          <svg class="slds-icon slds-icon slds-icon_x-small slds-icon-text-default" aria-hidden="true">
                              <use xlink:href="{!URLFOR($Asset.SLDS, '/icons/utility-sprite/svg/symbols.svg#search')}"></use>

                            <!-- <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="static/icons/utility-sprite/svg/symbols.svg#search" /> -->
                          </svg>
                        </span>
                      </div>

                    </div>
                  </div>
                </div>
              </div>
              <!-- <div class="slds-pill_container slds-pill_container_bare">
                <ul class="slds-listbox  ul-fields slds-listbox_horizontal" role="listbox" aria-label="Selected Options:" aria-orientation="horizontal">

                  <li class="slds-listbox-item" role="presentation">
                    <span class="slds-pill" role="option" aria-selected="true">
                      <span class="slds-pill__label" title="Option B">Id</span>
                      <span class="slds-icon_container slds-pill__remove" title="Remove">
                        <svg class="slds-icon slds-icon_x-small slds-icon-text-default" aria-hidden="true">
                          <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="static/icons/utility-sprite/svg/symbols.svg#close" />
                        </svg>
                        <span class="slds-assistive-text">Press delete or backspace to remove</span>
                      </span>
                    </span>
                  </li>
                </ul>
              </div> -->
              <div class="slds-text-title slds-m-top_x-small" aria-live="polite"><span class="selected-fields"></span> Item(s) Selected - <ul id="selected-names"></ul></div>
            </div>
            <div class="slds-scrollable slds-grow">
                <table role="grid" class="resultLookupFields slds-table slds-table_fixed-layout slds-table_bordered  slds-scrollable_none">
                    <thead>
                      <tr class="slds-text-title_caps slds-line-height_reset">
                        <th scope="col" style="width: 3.75rem;"></th>
                        <th scope="col">
                          <span class="slds-truncate" title="Name">Name</span>
                        </th>

                      </tr>
                    </thead>
                    <tbody>

                    </tbody>
                  </table>
            </div>
          </div>
        </div>
        <footer class="slds-modal__footer">
          <button  onclick="hideOverlay('fieldsOverlay');" class="slds-button slds-button_neutral">Cancel</button>
          <button data-parent="" onclick="saveSelection()" id="saveFields" class="slds-button slds-button_success">Save</button>
        </footer>
      </div>
    </section>
    <div class="slds-backdrop"></div>
  </div>

    <!-- overlay fields -->
    <div class="new-page" >
      <section role="dialog" tabindex="-1" class="slds-modal slds-modal_small ">

      <div class="slds-modal__container">
        <header class="slds-modal__header">
          <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="hideOverlay('new-page');" title="Close">
            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
              <use xlink:href="{!URLFOR($Asset.SLDS, '/icons/utility-sprite/svg/symbols.svg#close')}"></use>
            </svg>
            <span class="slds-assistive-text">Close</span>
          </button>
          <h2 id="id-of-modalheader-h2" class="slds-text-heading_medium">Add a new Page</h2>
          <!-- <p class="slds-m-top_x-small">Fields: Salesforce <span>Account</span></p> -->
        </header>
        <div class="slds-modal__content  slds-p-around_medium">
            <div class="slds-form-element">
                <div class="slds-form-element__control">
                    <input type="text" id="pageName" class="slds-input" placeholder="Page Name" />
                </div>
                 <div id="error-message-page" class="slds-hide slds-form-element__help">This field is required</div>
            </div>

        </div>
        <footer class="slds-modal__footer">
          <button  onclick="hideOverlay('new-page');" class="slds-button slds-button_neutral">Cancel</button>
          <button data-parent="" onclick="newPage()" id="saveFields" class="slds-button slds-button_success">Save</button>
        </footer>
      </div>
        </section>
        <div class="slds-backdrop"></div>
     </div>

     <div class="new-schema" >
       <section role="dialog" tabindex="-1" class="slds-modal slds-modal_small ">

       <div class="slds-modal__container">
         <header class="slds-modal__header">

           <h2  class="slds-text-heading_medium">Create a new Schema</h2>
         </header>
         <div class="slds-modal__content  slds-p-around_medium">
             <div class="slds-form-element">
                 <div class="slds-form-element__control">
                     <input type="text" id="schemaName" class="slds-input" placeholder="Schema Name" />
                 </div>
                  <div id="error-message-schema" class="slds-hide slds-form-element__help">This field is required</div>
             </div>

             <div class="slds-form-element">
              <label class="slds-form-element__label" for="select-01">Country</label>
              <div class="slds-form-element__control">
                <div class="slds-select_container">
                  <select class="slds-select" id="schemaCountry">
                    <option>Argentina</option>
                    <option>Brazil</option>
                    <option>Mexico</option>
                    <option>Uruguay</option>
                  </select>
                </div>
              </div>
            </div>

         </div>
         <footer class="slds-modal__footer">
           <button data-parent="" onclick="newSchema()" id="saveFields" class="slds-button slds-button_success">Save</button>
         </footer>
       </div>
       <script type="text/javascript">
           function newSchema(){
               $('#error-message-schema').addClass('slds-hide');
               var cName = $('#schemaName').val();
               if(cName != '') {
                   console.log(name, country);
                   var name = $('#schemaName').val();
                   var country = $('#schemaCountry').val();
                   console.log(name, country);
                   saveSchema(name, country);
               } else {
                   $('#error-message-schema').removeClass('slds-hide');
               }
           }

       </script>
       <apex:form >


            <apex:actionFunction name="saveSchema" rerender="dummy" action="{!saveSchema}">
                <apex:param name="name" value=""  />
                <apex:param name="country"  value=""  />
            </apex:actionFunction>
            <apex:outputPanel id="dummy"></apex:outputPanel>
        </apex:form>

         </section>
         <div class="slds-backdrop"></div>
      </div>



  <apex:remoteObjects jsNamespace="RemoteObjectModel">
      <apex:remoteObjectModel name="LAT_FormBuilderPages__c" fields="Name,Order__c,Json__c,Form_Builder_Schema__c"/>
  </apex:remoteObjects>

  <!-- Vendor JS (Jquery) -->
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/vendor.js')}"/>
  <!-- Builders -->
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/form-builder.min.js')}"/>
  <!--Custom Plugins -->
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/control_plugins/line.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/control_plugins/picklist.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/control_plugins/photo.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/control_plugins/action.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/control_plugins/lookup.js')}"/>
  <script type="text/javascript">
  </script>
  <!-- Render -->
  <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/form-render.min.js')}"/>


  <script>
      function showNameForm(){
          $('#name-form').show();
          $('#currName').hide();
          $('#newName').val($('#currentPage-Name').text());
      }

      function hideNameForm(){
          $('#name-form').hide();
          $('#currName').show();
      }

      function saveNewName(){
          var name = $('#newName').val();
          if(name != '') {
              $($('li.custom-pages.slds-is-active a')[0]).text(name);
              $('#currentPage-Name').text(name);
          }
          $('#name-form').hide();
           $('#currName').show();

      }


    function cleanNewPageForm(){
        $('#error-message-page').hide();
        $('#pageName').val('');
        $($('#pageName')[0]).focus();
    }

    function newPage(){
        var val = $('#pageName').val();
        if(val == '') {
            $('#error-message-page').show();
        } else {

            hideOverlay('new-page');
            cleanNewPageForm();

            // Tab Manipulation
            var currentCount = $('.custom-pages').length;
            var myEl = '<li class="custom-pages slds-tabs_scoped__item " role="presentation" title="Item '+currentCount+'">\
                    <a aria-controls="'+currentCount+'" aria-selected="true" class="slds-tabs_scoped__link" href="javascript:void(0);" id="tab-scoped-'+currentCount+'__item" role="tab" tabindex="'+currentCount+'">'+val+'</a>\
                  </li>';
            $('.custom-pages').last().after(myEl);
            $( ".slds-tabs_scoped__item").unbind( "click" );
            startTabs();
            // Add an empty array to general json
            finalObj.push('[]');
            // last position
            var last = finalObj.length;
            jQuery('.slds-tabs_scoped__link')[last-1].click();


        }

    }

    function deletePage(){
        var index = jQuery('.slds-is-active a').attr('aria-controls');
        var elem =  jQuery('.slds-is-active a').text();
        var r = confirm("Confirm to delete " + elem + 'page?');
        if (r == true) {
            $('.custom-pages')[index].remove();
            $('.custom-pages a')[0].click();
        } else {
            //txt = "You pressed Cancel!";
        }
    }

    var currentSalesforceId = '{!fbs.Id}'; //salesforceId
    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, '\\$&');
        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }

        // function customSave(){}



    /*
    * hasDuplicateNames
    */
    function hasDuplicateNames(currentNames){

        var usedNames = [];
        var hasDup = false;
        $.each(currentNames, function(k, valInput) {
            var customInd = $(valInput).attr('aria-controls');
            var myJson = finalObj[customInd];
            var jsonPagePreProcess = $.parseJSON(myJson);
            $.each(jsonPagePreProcess, function(key, value) {

                if(value.type == 'checkbox-group' || value.type == 'Photo' || value.type == 'TextInput' || value.type == 'select' ||   value.type == 'Lookup'   ){
                    if(usedNames.includes(value.name)) {
                        console.log('exists')
                        hasDup = true;

                    } else {
                        usedNames.push(value.name);
                    }

                    console.log('usedNames', usedNames);

                }
            });
        });
            console.log('hasDup', hasDup);
        return hasDup;
    }

    function customSave(){

        //Set the current page into the global array (we alse save it on change tab action)
        finalObj[currentIndex] = JSON.stringify(formBuilder.actions.getData());

        var currentNames = $('.slds-scope .slds-tabs_scoped__item:not(:last-child) a');


        // Validate unique field Names
        if(hasDuplicateNames(currentNames)) {
            console.log('detected');
            alert('Fields names must be uniques, please verify.');
            return false;
        }
        else {
            console.log('else ???');
            $('.loader').removeClass('slds-hide');
            $('#saveChanges').text('Saving form...');
            $('.slds-docked-form-footer button').attr('disabled', true);


            var ct = new RemoteObjectModel.LAT_FormBuilderPages__c();

            // Delete existing pages
            if(currentSalesforcePages.length > 0 ){
                ct.del(currentSalesforcePages, function(err, ids) {
                    if (err) {
                        alert(err);
                    } else {
                        // Reload the contacts with current list
                        //getAllContacts();
                        console.log(ids.length + ' record(s) deleted.');
                    }
                });
            }


            var fieldCount = 0;

            // Save the current Pages
            $.each(currentNames, function(key, value) {

                // If not present, the user remove it

                var currentName = $(value).text();
                var customInd = $(value).attr('aria-controls');
                var myJson = finalObj[customInd];
                var jsonFieldCount = $.parseJSON(myJson);
                // Field Count for each page
                $.each(jsonFieldCount, function(key, value) {
                    console.log(value);
                    if(value.type == 'checkbox-group' || value.type == 'Photo' || value.type == 'TextInput' || value.type == 'select' ||   value.type == 'Lookup'   ){
                        fieldCount = fieldCount+1;

                        // Empty Label Support
                        if(value.type == 'TextInput'){
                            if(!value.label ) {
                                value.label = ' ';
                            }
                        }
                    }
                });


                console.log('currentName',jsonFieldCount);
                var ctDetails = { Name: currentName , Fields_Count__c: fieldCount, Json__c: JSON.stringify(jsonFieldCount), Form_Builder_Schema__c: currentSalesforceId, Order__c: customInd };
                // Reset field count
                fieldCount = 0;
                ct.create(ctDetails, function(err) {
                    if(err) {
                        console.log(err);
                        alert(err.message);
                    }
                    else {
                        // this is the contact
                        console.log(ct.log());     // Dump contact to log
                        console.log(ct.get('Id')); // Id is set when create completes
                    }
                    if(key == currentNames.length - 1 ) {
                        // After save, redirect
                        //$('.loader').addClass('slds-hide');
                        //$('#saveChanges').text('Save Schema');
                        //$('.slds-docked-form-footer button').attr('disabled', false);

                         window.location.href = window.location.href + "&saved";

                         //window.location = '{!urlfor($Page.LAT_wakawakaForms)}'+'&saved';
                    }
                });




            });
        }





    }


    var formBuilder = null;
    var madeChanges = false;
    var firstTime = true;
    var currentIndex = 0;
    var currentSalesforcePages = [];


    // to remove
    var jsonCliente = '';
    var jsonPresencia = '';

    // var finalObj = [jsonCliente, jsonPresencia];
    var finalObj = [];
    var jsonObjectsName = JSON.parse('{!ObjectsList}');
    var jsonObjectsNameFields = JSON.parse('[]');
  </script>
  <!--
  <script src="static/assets/js/waka-waka.js"></script>
  <script src="static/assets/js/waka-waka-lookup.js "></script>
  <script src="static/assets/js/waka-waka-lookupFields.js "></script> -->

    <!-- <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/waka-waka.js')}"/> -->
    <!-- JUST TO DEVELOP WE HAVE THE WAKA WAKA JS INLINE TO MAKE CHANGES -->
    <script type="text/javascript">

    jQuery(function($) {
        if(firstTime){

        }
        var replaceFields = [
            {
              type: 'TextInput',
              label: 'Text Input',
            },
        ];

        /*
        * Remove attributes based on type
        *
        * */
        var typeUserDisabledAttrs = {
        autocomplete: ['access'],
        header: ['class', 'className'],
        Line: ['label', 'required', 'name', 'placeholder', 'description', 'className'],
        Photo: ['description', 'className'],
        Action: ['name', 'description', 'className', 'label', 'required'],
        Lookup: ['description', 'className'],
        };

/*
* Add custom fields
*   'access',
'className',
'description',
'inline',
'label',
'max',
'maxlength',
'min',
'multiple',
'name',
'options',
'other',
'placeholder',
'required',
'rows',
'step',
'style',
'subtype',
'toggle',
'value'
* */
var typeUserAttrs = {
select: {
    condition: {
      label: 'condition',
      placeholder: 'xxx AND yyy OR xxxx'
      // style: 'color: red;'
    },
},
Lookup: {
  object: {
    label: 'Object',
    type: 'input',
    onclick: 'openLookup(this.id)',
    className: 'slds-input'
    // readonly: true
  },
  maxRows: {
    label: 'Max rows',
    type: 'input',
    value: '20'
  },
  buttonLabel: {
    label: 'Button label',
    type: 'input',
    value: 'Find'
  },
  position: {
    label: 'Button Position',
    options: {
      'left': 'left',
      'right': 'right',
    },
  },

  displayFields: {
    label: 'Display Fields',
    onclick: 'openLookupFields(this.id)',
    type: 'text',
  },
  relationFields: {
    label: 'Relation Fields',
    // onclick: 'openLookupFields(this.id)',
    type: 'text',
    placeholder: 'Example: RecordType.Name #  RecordType.Id',
  },

  orderByFields: {
    label: 'Order by',
    options: {
      '': 'Choose one',
    },
  },
  orderBy: {
    label: 'Order',
    options: {
      'desc': 'Desc',
      'asc': 'Asc',
    },
  },
  filter: {
    label: 'Filter',
    type: 'input',
  },
  desc: {
    label: 'Description',
    type: 'input',
    subtype: 'textarea'
  },
  condition: {
    label: 'condition',
    placeholder: 'xxx AND yyy OR xxxx'
    // style: 'color: red;'
  },

},

TextInput: {
  color: {
    label: 'Color',
    value: '#000',
  },
  subtype: {
    label: 'Type',
    name: 'customType',
    options: {
        'text': 'text',
        'number': 'number',
        'password': 'password',
        'mail': 'mail'
      },
  },
  condition: {
    label: 'condition',
    placeholder: 'xxx AND yyy OR xxxx'
    // style: 'color: red;'
  },
  rows: {
    label: 'Rows',
    type: 'text',
    value: '1',
  },
  readOnly: {
    label: 'Read Only',
    type: 'checkbox'
  },

  hidden: {
    label: 'Hidden',
    type: 'Checkbox'
  },
  value: {},

},
Line: {

  height: {
    label: 'Height (px)',
    value: '2',
    maxlength: '3'
  },
  width: {
    label: 'Width',
    options: {
      '10%': '10%',
      '50%': '50%',
      '100%': '100%',
    },
  },
},
Action: {
  text: {
    label: 'Label',
    value: 'Save'
  },
  action: {
    label: 'Action',
    options: {
      'Submit': 'submit',
      'Cancel': 'cancel',
      'Next': 'next',
      'Back': 'back',
      'Save': 'save'
    },
  },
  desc: {
    label: 'Description',
    type: 'text',
    subtype: 'text',
  },
  goPage: {
    label: 'Go to Page',
  },

  position: {
    label: 'Position',
    options: {
      'left': 'left',
      'right': 'right',
    },
  },
  cssStyle: {
    label: 'Button Style',
    options: {
     'slds-button_neutral':  'Neutral',
      'slds-button_brand': 'Brand',
      'slds-button_outline-brand': 'Outline Brand',
      'slds-button_destructive': 'Destructive',
      'slds-button_success': 'Success',
    },
  },
  fullButton: {
    label: 'Full Size',
    options: {
      'yes': 'Yes',
      'no': 'No',
    },
    value: 'no',
  },
  condition: {
    label: 'condition',
    placeholder: 'xxx AND yyy OR xxxx'
  },
  background: {
    label: 'Custom background color',
    placeholder: '#fff'
  },
  color: {
    label: 'Custom  color',
    placeholder: '#000'
  },
},
Photo: {
  desc: {
    label: 'Description',
    type: 'textArea',
  },
  condition: {
    label: 'condition',
    placeholder: 'xxx AND yyy OR xxxx'
  },
},
header: {
  color: {
    label: 'Color',
    text: '',
  },
  position: {
    label: 'Position',
    options: {
      'left': 'left',
      'center': 'center',
      'right': 'right',
    },
  },
  desc: {
    label: 'Description',
  },
  condition: {
    label: 'condition',
    placeholder: 'xxx AND yyy OR xxxx'
  },
},

};



var templates = {};


/*
* Remove Global attributes based on type
*
* */
var disabledAttrs = [
'access',
'className',
'inline',
'max',
'maxlength',
'min',
'style',
'toggle',
'value'
];

var controlOrder = [
'header',
'select',
'checkbox-group',
'Line',
'text',
'textarea',
];

var fields = [];



/**
* Notify
*/
function toggleEdit() {
    document.body.classList.toggle('form-rendered', editing);
    return editing = !editing;
}

var fbOptions = {
subtypes: {
  text: ['datetime-local']
},
controlConfig: {
  'Lookup': {
    salesforceObjects: ['Account', 'Contact', 'User']
  }
},
onSave: function(e, formData) {
  toggleEdit();
  console.log(window.fbControls);
  $('.render-wrap').formRender({
    formData: formData,
    templates: templates
  });
  //window.sessionStorage.setItem('formData', JSON.stringify(formData));
},
disabledActionButtons: ['clear', 'data','save'],//'save',
stickyControls: {
  enable: false
},

sortableControls: true,
fields: fields,
templates: templates,
editOnAdd: true,
// inputSets: inputSets,
// Deactive properties
typeUserDisabledAttrs: typeUserDisabledAttrs,
typeUserAttrs: typeUserAttrs,
disableInjectedStyle: false,
// actionButtons: actionButtons,
disableFields: [
  'autocomplete',
  'file',
  'date',
  'paragraph',
  'number',
  'radio-group',
  'hidden',
  'button',
  'text',
  'textarea',
  'hidden',
],
replaceFields: replaceFields,
// Disable copy,edit or delete button
// disabledFieldButtons: {
//   button: ['copy']
// },
controlPosition: 'left',
disabledAttrs: disabledAttrs,
controlOrder: controlOrder,
notify: {
error: function(message) {
  return console.error(message);
},
success: function(message) {
  return console.log(message);
},
warning: function(message) {
  return console.warn(message);
}
}
};

var editing = true;


/**
* Toggles the edit mode for the demo
* @return {Boolean} editMode
*/
function toggleEdit() {
document.body.classList.toggle('form-rendered', editing);
return editing = !editing;
}


function setOrders(){
var lookups = $('.Lookup-field');
console.log('lookups', lookups);
jQuery.each(lookups, function(key, value) {
    var fields = $(value).find('.displayFields-wrap input').val();
    console.log('fields', fields);
    var select = $(value).find('.orderByFields-wrap select');
    console.log('select', select);
    if(fields){
      var res = [];

      var fieldsSplit =  fields.split(",");
      for (var it of fieldsSplit) {
              res.push(it);
          }

          console.log(res);
          $.each(res, function(key, value) {
            console.log('value',value);
                $(select[0])
                    .append($("<option></option>")
                    .attr("value",value)
                    .text(value));
       });
  }
});

}

// var formData = window.sessionStorage.getItem('formData');
// if (formData) {
//     fbOptions.formData = JSON.parse(formData);
// }

    // Get All the Page
    if (firstTime) {
        //fbOptions.formData = JSON.parse(formData);

        if({!newSchema}) {

            $('.loader, .slds-docked-form-footer').hide();
            showOverlay('new-schema')

        } else {
            getRemotePages();
        }

    }



    function getRemotePages() {


        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.LAT_wakawakaFormsController.getPages}', '{!fbs.Id}' ,
            function(result, event){
                if (event.status) {
                    $('.loader').addClass('slds-hide');
                    $('.content').removeClass('slds-hide');
                    var firstArray = [];
                    if(result.length > 0) {
                        console.log(result[0]);
                        console.log();

                        // SET THE FIRST PAGE or a en empty array
                        var firstJsonAsString = result[0].Json__c;
                        firstArray = firstJsonAsString;
                        $('#currentPage-Name').html($('.custom-pages a').first().text());
                        // Save all the pages in a common Array
                        $.each(result, function(key, value) {
                            finalObj.push(value.Json__c);
                            currentSalesforcePages.push(value.Id);

                        });
                    }


                    console.log(result);
                    console.log('firstArray', firstArray);
                    // Set Default json
                    fbOptions.formData = firstArray;

                    // Init Builder
                    formBuilder = $('.build-wrap').formBuilder(fbOptions);
                    var fbPromise = formBuilder.promise;


                    fbPromise.then(function(fb) {
                    console.log('############');
                        setOrders();
                        var apiBtns = {
                          showData: fb.actions.showData,
                          // clearFields: fb.actions.clearFields,
                          // getData: function() {
                          //   console.log(fb.actions.getData());
                          // },
                          setData: function() {
                            fb.actions.setData(jsonCliente);
                          },
                          setData2: function() {
                            fb.actions.setData(jsonPresencia);
                          },
                          resetDemo: function() {
                            window.sessionStorage.removeItem('formData');
                            location.reload();
                          }
                        };

                    });

                } else if (event.type === 'exception') {
                    alert(event.where );

                } else {
                    alert(event.message );

                    // document.getElementById("responseErrors").innerHTML = event.message;
                }
            },
            {escape: false}
        );
    }


});

    </script>


    <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/waka-waka-lookup.js')}"/>
    <!--  -->
    <!--  -->
    <!--  -->


    <!-- TO DO MOVE THE CODE BELOW TO THE STATIR RESOURCE PIRATE -->
    <!-- <apex:includeScript value="{!URLFOR($Resource.LAT_wakawakaForms, '/assets/js/waka-waka-lookupFields.js')}"/> -->

    <script>
    //  waka-waka-lookupFields.js
    /*
* This time for Africa!
*/
class WakaWakaLookupFields {

    constructor (myCustomElement) {
        this.myCustomElement = myCustomElement;
        this.selectedItems = [];
    }

     // This time for Africa!
     open() {
        this.cleanTable();
        showOverlay('fieldsOverlay');
        $('.lookupContentFields').addClass('slds-hide');
        $('.lookupContentFieldsLoader').removeClass('slds-hide');
        // TO DO
        // AJAX TO retrieve the fields  jsonObjectsNameFields
        setTimeout(function(){
            $('.lookupContentFieldsLoader').addClass('slds-hide');
            $('.lookupContentFields').removeClass('slds-hide');
        } ,
        1000);

        $('#selected-names li').remove();

        var currentValue = $('#'+this.myCustomElement).val();

        var currentValues = currentValue.split("#");
        var selectedCount = 0;

        var mark = this.markup;

        // for (var key in jsonObjectsNameFields) {
        $.each( jsonObjectsNameFields, function( key, value ) {

            console.log('keeeeeeey', value);

            //var regExp = /\(([^)]+)\)/;
            // New impementation trying to get the last ones
            var regExp = /\(([^)]*)\)[^(]*$/;

            var matches = regExp.exec(value.toLowerCase());
            var textFormated = matches[1];
            // console.log('textFormated', textFormated);


            var isSelected = false;
            if(currentValues.length == 1) {
                var childMatches = regExp.exec(currentValues[0].toLowerCase());
                var textFormatedChild  =  (childMatches) ? childMatches[1] : '';
                // console.log('textFormatedChild', textFormatedChild);
                if(textFormatedChild == textFormated ) {
                    isSelected = true;
                    // console.log('match!!!!!!', textFormatedChild);
                    selectedCount++;
                }
            } else {
                $.each(currentValues, function(key, value) {
                    var childMatches = regExp.exec(value.toLowerCase());

                    var textFormatedChild  =  (childMatches) ? childMatches[1] : '';

                    // console.log('textFormatedChild', textFormatedChild);
                    if(textFormatedChild == textFormated ) {
                        isSelected = true;
                        // console.log('match!!!!!!', textFormatedChild);
                        selectedCount++;
                    }
                 });


            }

            $('.resultLookupFields tbody').append(mark(value, key, this.myCustomElement , isSelected));

        });
        $('.selected-fields').text(selectedCount);
        // Current Values
        if(this.selectedItems) {
            var currentElements = $('.resultLookupFields .slds-checkbox_add-button input:checked');
            this.selectedItems = [];
            var _this = this;
            $.each(currentElements, function(key, value) {

                _this.selectedItems.push($(value).val());
                $('#selected-names').append("<li>"+$(value).val()+"</li>")

             });

        }


    }

    cleanTable(){
        $('.resultLookupFields tbody tr, .ul-fields li').remove();
    }

    // Tsamina mina zangalewa
    markup(text, index, elem, selected) {

        var checked = (selected) ? 'checked' : '';
        var row = '<tr class="slds-hint-parent">\
                    <td role="gridcell" tabindex="0" class="slds-text-align_right" style="width: 3.75rem;">\
                      <div class="slds-checkbox_add-button">\
                        <input type="checkbox" '+checked+' onclick="setCurrentFields(this.id)" class="slds-assistive-text" id="add-checkboxField-'+index+'" value="'+text+'" tabindex="-1" />\
                        <label for="add-checkboxField-'+index+'" class="slds-checkbox_faux">\
                          <span class="slds-assistive-text">Select item '+index+'</span>\
                        </label>\
                      </div>\
                    </td>\
                    <th scope="row">\
                      <div class="slds-truncate" title="'+text+'">'+text+'</div>\
                    </th>\
                  </tr>';
        // console.log(row);

        return row;
    }



    setCurrent(el, lookupFields){

        var isChecked = $('#'+el).is(':checked');
        if(isChecked) {
            lookupFields.selectedItems.push($('#'+el).val());

        } else {
           lookupFields.selectedItems.splice(  lookupFields.selectedItems.indexOf($('#'+el).val()), 1 );
        }
        var le = lookupFields.selectedItems.length;
        $('.selected-fields').text(le);


        // Show pills names
        $('#selected-names li').remove();
        $.each(lookupFields.selectedItems, function(key, value) {
            $('#selected-names').append("<li>"+value+"</li>")

         });


    }

    saveSelection(){
        // console.log('asdadasdas', lookupFields.selectedItems);
        var selected = lookupFields.selectedItems ;//$('.resultLookupFields .slds-checkbox_add-button input:checked');
        var res = [];
        // for (var it of selected) {
        //     res.push($(it).val());
        // }
        $.each(selected, function(key, value) {
            // Remove Commas from LABEL
            var valNew = value.replace(',' , '');
            res.push(valNew);
            console.log(valNew);

         });
        var elem = $('#saveFields').data('parent');
        // console.log(elem);
        var arrayAsString = res.toString();
        // console.log('resresresresres');
        arrayAsString = arrayAsString.replace(/,/g, "#");

        $('#'+elem).val(arrayAsString);
        hideOverlay('fieldsOverlay');
        $('#'+elem).focus();
        $('#'+elem).blur();


        // Set Order Options
        var elemParent = $('#'+elem).parents('.form-elements')[0];
        var select = $(elemParent).find('.orderByFields-wrap select');
        $(select).children('option:not(:first)').remove();
        $.each(res, function(key, value) {
            $(select)
                .append($("<option></option>")
                .attr("value",value)
                .text(value));
       });

    }






    // Tsamina mina zangalewa
    filterResults(text, elem) {

        console.log(text);
                var jsonObjectsNameFiltered = jsonObjectsNameFields.filter(function(el) {

                return el.toLowerCase().indexOf(text.toLowerCase()) > -1;
        });

        this.cleanTable();
        if(jsonObjectsNameFiltered.length > 0) {

            //var regExp = /\(([^)]+)\)/;
            // New impementation trying to get the last ones
            var regExp = /\(([^)]*)\)[^(]*$/;

            var _this = this;
            $.each(jsonObjectsNameFiltered, function(k, v) {
            // for (var key in jsonObjectsNameFiltered) {
                var matches = regExp.exec(v.toLowerCase());
                var textFormated = matches[1];
                console.log('textFormated', textFormated);


                var isSelected = false;
                $.each(_this.selectedItems, function(key, value) {
                    console.log(key, value);
                        var childMatches = regExp.exec(value.toLowerCase());

                        var textFormatedChild  =  (childMatches) ? childMatches[1] : '';

                        console.log('textFormatedChild', textFormatedChild);
                        if(textFormatedChild == textFormated ) {
                            isSelected = true;
                            console.log('match!!!!!!', textFormatedChild);
                        }

                 });


                $('.resultLookupFields tbody').append(_this.markup(v, k, _this.myCustomElement , isSelected));
                // $('.lookupContent tbody').append(this.markup(jsonObjectsNameFiltered[key], key, elem, currentValue));
             });
        }
        else  {
            $('.resultLookupFields tbody').append('<tr class="slds-hint-parent"><td role="gridcell" tabindex="0" class="slds-text-align_center" colspan="2">No Fields to display</td></tr>');
        }
    }



  }


    </script>
    <!--  -->
    <!--  -->
    <!--  -->










  <script>
    function hideOverlay(elParent) {
      $('.' + elParent + ' section').removeClass('slds-fade-in-open');
      $('.' + elParent + ' .slds-backdrop').removeClass('slds-backdrop_open');
    }

    function showOverlay(elParent) {
      $('.' + elParent + ' section').addClass('slds-fade-in-open');
      $('.' + elParent + ' .slds-backdrop').addClass('slds-backdrop_open');
    }

    var timeout = null;
    var timeoutC = null;
    var functionSetCurrent = null;

    function openLookup(eId) {
      console.log(eId);
      var lookup = new WakaWakaLookup(eId);
      lookup.open();
      functionSetCurrent = lookup.setCurrent;
      var currentValue = $('#' + eId).val();
      $('#filter-lookup').on('keyup', function () {
        clearTimeout(timeout);
        timeout = setTimeout(function () {
          lookup.filterResults($('#filter-lookup').val(), eId, currentValue);
        }, 500);
      });
    }

    var setFieldsCurrentFunction = null;
    var saveSelectionfunction = null;

    var lookupFields = null;
    var currentChoosedField
    function openLookupFields(eId) {
        var fieldId = eId.replace('displayFields-frmb-', 'object-frmb-');
        var currentObj = $('#'+fieldId).val();
        $($('.fieldsOverlay p.slds-m-top_x-small span ')[0]).text(currentObj);
        $($('.fieldsOverlay  tbody tr ')).remove();
        showOverlay('fieldsOverlay');
        //$('#'+fieldId).val('Loading fields....');


        Visualforce.remoting.Manager.invokeAction(
           '{!$RemoteAction.LAT_wakawakaFormsController.getFields}', currentObj,
           function(result, event){
               if (event.status) {
                   // Get DOM IDs for HTML and Visualforce elements like this
                   jsonObjectsNameFields = result;
                   console.log(result);
                   lookupFields = new WakaWakaLookupFields(eId);
                   lookupFields.open();
                   setFieldsCurrentFunction = lookupFields.setCurrent;
                   saveSelectionfunction = lookupFields.saveSelection;
                   $('#saveFields').data('parent', eId);

                   $('#lookupFields').on('keyup', function () {
                     clearTimeout(timeoutC);
                     timeoutC = setTimeout(function () {
                       lookupFields.filterResults($('#lookupFields').val());
                     }, 500);
                   });
               } else if (event.type === 'exception') {
                   alert(event.message + " - " + event.where);

               } else {
                   alert(event.message );
               }
           },
           {escape: true}
       );
        // object-frmb-1537365350031-fld-4
        // displayFields-frmb-1537365350031-fld-4





    }

    function setCurrentFields(el) {
      //console.log(index);
     setFieldsCurrentFunction(el, lookupFields);
    }

    function saveSelection() {
      saveSelectionfunction();
    }

    function setCurrent(index, elem) {
      //console.log(index);
      functionSetCurrent(index, elem);
    }


    function startTabs(){
        /*SLDS Tabs JS*/
        jQuery('.slds-tabs_scoped__link').on("click", function () {

            hideNameForm();

            // Add confirm to change tab?
          finalObj[currentIndex] = JSON.stringify(formBuilder.actions.getData());

          //console.log('formBuilder.actions.getData();', formBuilder.actions.getData());
          var action = jQuery(this).attr('aria-controls');


          if (action != 'new') {
              $('#currentPage-Name').html(jQuery(this).text());
            jQuery(this).parent().addClass('slds-is-active').siblings().removeClass('slds-is-active');
            var jsonIndex = parseInt(action);
            console.log(jsonIndex);
            formBuilder.actions.setData(finalObj[jsonIndex]);
            currentIndex = action;
          }

        });
    }

    startTabs();




  </script>


        <!-- <input id="acctSearch" type="text"/>
        <button onclick="getRemoteAccount()" class="slds-btn">Get Account</button>
        <div id="responseErrors"></div>
        <apex:pageBlock id="block">
            <apex:pageBlockSection id="blockSection" columns="2">
                <apex:pageBlockSectionItem id="firstItem">
                    <span id="remoteAcctId"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="secondItem">
                    <apex:outputText id="acctNumEmployees"/>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock> -->

    </body>
    <!-- LAT_wakawakaForms  -->
<script type="text/javascript">
    // function getRemoteAccount() {
    //     var accountName = document.getElementById('acctSearch').value;
    //
    //     Visualforce.remoting.Manager.invokeAction(
    //         '{!$RemoteAction.LAT_wakawakaFormsController.getObjects}',
    //         function(result, event){
    //             if (event.status) {
    //                 // Get DOM IDs for HTML and Visualforce elements like this
    //                 document.getElementById('remoteAcctId').innerHTML = result.Id
    //                 console.log(result);
    //                 /*document.getElementById(
    //                     "{!$Component.block.blockSection.secondItem.acctNumEmployees}"
    //                     ).innerHTML = result.NumberOfEmployees;*/
    //             } else if (event.type === 'exception') {
    //                 document.getElementById("responseErrors").innerHTML =
    //                     event.message + "<br/>\n<pre>" + event.where + "</pre>";
    //             } else {
    //                 document.getElementById("responseErrors").innerHTML = event.message;
    //             }
    //         },
    //         {escape: true}
    //     );
    // }
    </script>

</html>





</apex:page>