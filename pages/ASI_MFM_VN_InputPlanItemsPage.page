<apex:page standardController="ASI_MFM_Plan__c"  tabstyle="ASI_MFM_Plan__c" sidebar="false"  docType="html-5.0" extensions="ASI_MFM_VN_InputPlanItemsController" action="{!init}">
    <head>
        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/css/bootstrap.min.css')}"/> 
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_PH_Datatable, 'DataTables-1.10.7/media/css/jquery.dataTables.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/css/SimpleTable.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_MFM_PH_Jqueryui,'jquery-ui-1.11.4.custom/jquery-ui.css')}"/>
    
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/jquery.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library,  'dist/js/jquery-ui.min.js')}" />  
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/calx_js/numeral.min.js')}" />  
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/jquery-calx-2.2.3.min.js')}" />               
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/underscore-min.js')}" />  
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/bootstrap.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/typeahead.js/typeahead.jquery.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/typeahead.js/typeahead.bundle.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Datatable, 'DataTables-1.10.7/media/js/jquery.dataTables.min.js')}" />
        
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/numericInput.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_MFM_PH_Library, 'dist/js/CurrencyUtil.js')}" />
        
        <style type="text/css">
            div.hid {display: none;}
            
            /* highlight results */ 
            .ui-autocomplete span.hl_results {
            background-color: #ffff66;
            }
            
            /* loading - the AJAX indicator */
            .ui-autocomplete-loading {
            background: white url('/img/loading.gif') right center no-repeat;
            }
            
            
            .ui-autocomplete-input{ 
            border-left: 3px solid darkred !important;
            }
            
            .ui-autocomplete {
            height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            overflow:auto;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
            left: 0;
            }
            /* IE 6 doesn't support max-height
            * we use height instead, but this forces the menu to always be this tall
            */
            *html .ui-autocomplete {
            height: 200x;
            }
            
            
            .bs.panel-heading.div-size {
            border-radius: 10px;
            }
            
            body {
            font-family: Arial;
            font-size: 9pt;
            }
            
            th { 
            white-space: nowrap; 
            }  
            
            .required {
                border-left: 3px solid darkred !important;  
            }
            
            .ui-helper-hidden-accessible { display:none !important;} 
            
            .ui-helper-hidden-accessible { position: absolute; left:-999em !important;}
            input:-moz-read-only { /* For Firefox */
            background-color: Gainsboro;
            }
            
            input:read-only {
            background-color: Gainsboro;
            }
            
        </style>
        
        <script type="text/javascript">
        
        $j = jQuery.noConflict();
        
        var RecordTypeName = null;
        var headerId = null;
        var FiscalYearFilter = null;
        var finishRetrieveBudgets = false;
        var exchangeRate = null;
        var Budgets = [];
        var ACCodes = [];
        var SubBrands = [];
        var calc ;
        var resultTable ;
        var sheet;
        var returnURL;
        var Customers = [];
        var CustomerTypeName = null; //added on 2015-09-02*/
        var SBBrandTypeName = null; 
        var ACCodeTypeName = null; 
        var avamonth=null;
        var monthDiff = null; 
        var resultTable = null;
        var info = null;
        var datatableILength = 5;

        if('{!ACAPCodeMap}' != '')
        {
            var acapcodeMapstring = JSON.parse('{!ACAPCodeMap}');
        }
        console.log(acapcodeMapstring);
        
        window.onload =  function(){
            returnURL = gup('retURL');
            //alert('Set retURL = ' + returnURL);
            
        };
        
        function gup( name ){  //this function just grabs HTTP params by name
            
            name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]"); 
            var regexS = "[\\?&]"+name+"=([^&#]*)"; 
            var regex = new RegExp( regexS ); 
            var results = regex.exec( window.location.href );
            if( results == null )    return ""; 
            else    return results[1];}
        
        
        function stopRKey(evt) {
            var evt = (evt) ? evt : ((event) ? event : null);
            var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
            if ((evt.keyCode == 13) && (node.type=="text")) {return false;}
        }
        
        document.onkeypress = stopRKey; 
        
        
        function htmlEncode( input ) {
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
            //return String(input).replace(/\&amp;/g,'&').replace(/\&lt;/g,'<').replace(/\&rt;/g,'>');
        };
        
        
        $j(document).on('mousemove', function(e){
            $j('#loadtext').css({
                left:  e.pageX,
                top:   e.pageY
            });
        });
        

        function disableButton() {
            $j('#divForm .btn').button('loading');
        } 
        
        
        function initPlanItemPage(config) {
            if (config) {
                RecordTypeName=config.RecordTypeName;
                CustomerTypeName=config.CustomerTypeName;//added on 2015-09-02*/
                SBBrandTypeName=config.SBBrandTypeName;
                ACCodeTypeName=config.ACCodeTypeName;
                avamonth=config.avamonth;
                monthDiff=config.monthDiff;
                headerId = config.headerId;
                FiscalYearFilter = config.FiscalYearFilter;
                exchangeRate = config.exchangeRate;
                setResultTable(true);
               
                retrieveCustomer();
                retrieveSBBrand();
                retrieveACCode();
                
            }
        }      
        

        function setResultTable(newTable){
             

             resultTable = $j('#dt_LineItems').on( 'init.dt', function () {
                 
                  retrieveCustomer();
                 retrieveSBBrand();
                 retrieveACCode();
                 }).DataTable({
                             "bDestroy":true,
                             "bSearch":false,
                             "dom": '<"top">irt<"bottom"p><"clear">',
                             "bSort": false, 
                             "bFilter": false, 
                             "iDisplayLength":datatableILength,
                             "bPaginate": true,
                             "sPaginationType": "full_numbers",
                             "columnDefs": [{
                                 "targets": [ 0 ],
                                 "searchable": false,
                                 "orderable": false
                             }],
                             "fnDrawCallback": function() { 
                                 
                                 $j('.totalcost').numericInput({ allowNegative: false  ,allowFloat: true });
                                 $j('.monthly_input').numericInput({ allowNegative: false  ,allowFloat: true });
                    
                                 
                                 
                                 // $j('input.cost').change();
                                 // $j('.monthly_input input').on("focus", function() {
                                     //console.log("focus");
                                 //  }).change(function () {
                                     //console.log("change");
                                 //  });
                                 
                                 ////////////////////////////////////////// Tony: 2015-10-13: auto-change Plan Amount and month amount
                                 /*                                 
                                 $j('.PlanAmount input').keyup(function(){
                                     if(($j('.PlanAmount input').val().length > 0)){
                                         
                                         $j(this).find(".monthly_input input").each(function() {
                                             console.log($j(this).val());
                                         });
                                         
                                         $j(".monthly_input input").prop( "disabled", true );
                                         
                                         //Calculate Amount
                                         var count=0;
                                         $j(".monthly_input input").each(function() {
                                             count++;
                                         });
                                         var monthAmt=$j('.PlanAmount input').val()/count;
                                         $j(".monthly_input input").each(function() {
                                             $j(this).val(monthAmt);
                                         });
                                     }else{
                                         $j(".monthly_input input").prop( "disabled", false );
                                     } 
                                 });
                                 
                                 
                                 $j(".monthly_input input").keyup(function(){
                                     if(($j(this).val()> 0)){
                                         var TotalAmt=0;
                                         $j(".PlanAmount input").prop( "disabled", true );
                                         
                                         $j(".monthly_input input").each(function() {
                                             var Amt=$j(this).val();
                                             TotalAmt=Number(TotalAmt)+Number(Amt);
                                         });
                                         $j(".PlanAmount input").val(Number(TotalAmt));
                                     }else{
                                         var allzero=true;
                                         $j(".monthly_input input").each(function() {
                                             if($j(this).val()!="0" && $j(this).val()!==''){
                                                 allzero=false;
                                             }
                                         });
                                         if(allzero){
                                             $j(".PlanAmount input").prop( "disabled", false );
                                         }
                                     }

                                 });   */
                                 /////////////////////////////////////////////
                                 
                                 // $j('.monthly_input input').change();
                                 $j('.lookupCen input').change();
                                 $j('.lookupCen1 input').change();
                                 initalizeAutoCompleteComponent();
                                 //initCalx();
                                 //calc.calx('calculate');
                                 
                             }
                         });
                $j('#dt_LineItems').on( 'page.dt', function () {
                   
                   info = resultTable.page.info();
                    
                    $j('#dt_LineItems').on("change", ".monthly_input input", function(event) {});
                    
                    if(info){
                           $j('.monthly_input input').change();
                           $j('.lookupCen input').change();
                           initalizeAutoCompleteComponent();
                           //initCalx();
                           //calc.calx('calculate');
                    }                    
                } );
            info = resultTable.page.info();
            if(newTable==false){
                addRow(); 
            } 
        }
        

            
        function setTables(newTable){
            setResultTable(newTable);

        }
        
        function addRow(){
            resultTable.page('last').draw(false);        
        }
        
        
        function callbackbudgets(result, event) {
            if (event.status) {
                if (result) {
                    //console.log(result);
                    
                    Budgets = [];
                    ACCodes = [];
                    SubBrands = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var budget = new Object();
                        
                        budget.AcCode = result[i].ASI_MFM_A_C_Code__c;
                        budget.Subbrand =  result[i].ASI_MFM_Sub_brand_Code__c;
                        budget.TotalAmount = result[i].ASI_MFM_Total_Amount__c;
                        
                        //Subbrand
                        var SubBrand = new Object();
                        SubBrand.label =  htmlEncode(result[i]["ASI_MFM_Sub_brand_Code__r"]["Name"]);
                        SubBrand.value =  result[i].ASI_MFM_Sub_brand_Code__c;
                        SubBrands.push(SubBrand);
                        
                        //AC Code
                        var ACCode =  new Object();
                        ACCode.label = htmlEncode(result[i]["ASI_MFM_A_C_Code__r"]["Name"]);
                        ACCode.value = result[i].ASI_MFM_A_C_Code__c;
                        ACCodes.push(ACCode);
                        
                        
                        Budgets.push(budget);
                    }
                    finishRetrieveBudgets = true;
                    
                    initalizeAutoCompleteComponent();
                    
                    //displayDataIfReady(); 
                }
            } else {
                // TODO: Handle error
                //displayErrorMsg(event.message);
            }
        }      
        
        function retrieveCustomer() {////added on 2015-09-02

            // Resolve sub brand not populate when click on recalculate button
            // Andy Zhang @Laputa 20190520
                CustomerTypeName = '(\'ASI_CRM_VN_Outlet\',\'ASI_CRM_VN_PG_Outlets\',\'ASI_CRM_VN_Off_Trade_Outlet\',\'ASI_CRM_VN_Value_Off_Trade_Outlet\',\'ASI_CRM_VN_Value_On_Trade_Outlet\')';


            var name = '%MFM - PRVN%';
            
            var whereClause =   ' WHERE RecordType.DeveloperName IN '+ CustomerTypeName + 'AND Name like \''+name +'\''
            //alert(whereClause);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_VN_InputPlanItemsController.findSObjects}','ASI_CRM_AccountsAdditionalField__c', whereClause
                , callbackCustomer
                , {escape: true, timeout: 10000}
            );       
        }////added on 2015-09-02*/
        
        function callbackCustomer(result, event){////added on 2015-09-02
            if (event.status) {
                if (result) {
            
                    Customers = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var cu = new Object();
                        cu.label =  htmlEncode(result[i]["Name"]);
                        cu.value =  htmlEncode(result[i]["Id"]);
                        Customers.push(cu);
                    }
                }
            } else {
                // TODO: Handle error
                //displayErrorMsg(event.message);
            }   
            initalizeAutoCompleteComponent();
        }////added on 2015-09-02*/
        
        
        
        function retrieveSBBrand() {
            // Resolve sub brand not populate when click on recalculate button
            // Andy Zhang @Laputa 20190520
            //if(SBBrandTypeName == ''&&ACCodeTypeName.includes('DP'))
            //{
                //SBBrandTypeName = 'ASI_MFM_VN_DP_Sub_brand';
            //}
            //else{
               // SBBrandTypeName ='ASI_MFM_VN_DP_Sub_brand';
            //}
            //console.log('SBBrandTypeName'+SBBrandTypeName);
            var whereClause =   ' WHERE RecordType.DeveloperName = \''+ SBBrandTypeName + '\' and ASI_TH_CRM_Active__c=true '
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_VN_InputPlanItemsController.findSObjects}','ASI_MFM_Sub_brand__c', whereClause 
                , callbackSBBrand
                , {escape: true, timeout: 10000}
            );       
        }
        
        
           function callbackSBBrand(result, event){
            if (event.status) {
                if (result) {
                    SubBrands = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var sb = new Object();
                        sb.label =  htmlEncode(result[i]["Name"]);
                        sb.value =  htmlEncode(result[i]["Id"]);
                        SubBrands.push(sb);
                    }
                }
            } else {
            }   
            initalizeAutoCompleteComponent();
        }
        
        
        
           function retrieveACCode() {
            //console.log(ACCodeTypeName);
               // Add condition ASI_MFM_Active__c = true
               // Andy Zhang @Laputa 20190521

               /*var header = '{!Header.Name}';

               console.log(header);
               if(header.indexOf('DPMP')){
                   ACCodeTypeName = recordType;


               }
               else{
                   ACCodeTypeName = '{!AC_Code_RecordType_Developer_Name}';
               }
               //ACCodeTypeName = recordType;
               console.log(ACCodeTypeName)*/

               var whereClause =   ' WHERE RecordType.DeveloperName = \''+ ACCodeTypeName + '\' and ASI_MFM_Dummy_A_C__c = false and ASI_MFM_Active__c = true' ;
            //var whereClause =   ' WHERE RecordType.DeveloperName = \''+ ACCodeTypeName + '\' and ASI_MFM_Dummy_A_C__c = false ' ;
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_VN_InputPlanItemsController.findSObjects}','ASI_MFM_A_C_Code__c', whereClause 
                , callbackACCode
                , {escape: true, timeout: 10000}
            );       
        }
        
        
           function callbackACCode(result, event){
            if (event.status) {
                if (result) {
            
                    ACCodes = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var ac = new Object();
                        ac.label =  htmlEncode(result[i]["Name"]);
                        ac.value =  htmlEncode(result[i]["Id"]);
                        ACCodes.push(ac);
                    }
                }
            } else {
            }   
            initalizeAutoCompleteComponent();
        }

        // retrieve AP code base on AC code selection
        // Andy Zhang @Laputa 20190506

        function retrieveAPCode() {

            var whereClause =   ' WHERE RecordType.DeveloperName = \''+ APCodeTypeName + '\' and ASI_MFM_A_C_Code__c =false';

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_VN_InputPlanItemsController.findSObjects}','ASI_MFM_AP_Code__c', whereClause
                , callbackAPCode
                , {escape: true, timeout: 10000}
            );
        }


        function callbackAPCode(result, event){
            if (event.status) {
                if (result) {

                    APCodes = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var ap = new Object();
                        ap.label =  htmlEncode(result[i]["Name"]);
                        ap.value =  htmlEncode(result[i]["Id"]);
                        APCodes.push(ap);
                    }
                }
            } else {
            }
            initalizeAutoCompleteComponent();
        }
        
        
        
        
        
        
        
        
        function initalizeAutoCompleteComponent() {

            //added on 2015-09-02*/ 
            //For Customer

           // console.log(Customers);
            $j(".CustomerClass").autocomplete
            (
                {
                    source:
                    Customers,
                    response: function(event, ui)
                    {
                        if(ui.content.length===0)
                        {
                            console.log("No result found");
                            //alert(JSON.stringify(ui)+JSON.stringify(event));
                        }
                    },
                    minLength: 0,
                    
                    scroll: true,
                    change: function (event, ui) {
                    if (!ui.item) {
                        this.value = '';
                    }
                    },
                    select: function(event, ui)
                    {
                        $j(this).val(ui.item.label);
                        $j(this).next().next().children().val(ui.item.value);
                        event.preventDefault();
                    },
                    focus: function(event, ui)
                    {
                        $j(this).val(ui.item.label);
                        event.preventDefault();
                    }
                }
            ).focus(function()
                    {
                         $j(this).autocomplete("search", "");
                    }
                   );
            // AP code
            $j(".apCodeClass").autocomplete({
                    source:
                    [],
                    minLength: 0,

                    focus: function(event, ui)
                    {
                        $j(this).val(ui.item.label);
                        event.preventDefault();
                    }
                }
            ).focus(function () {
                $j(this).autocomplete("search", "");
            });
                   
            //Sub Brand Code Array


            
            //console.log(SubBrands);

            $j(".SubBrandClass").autocomplete({
                source: 
                SubBrands,
                response: function(event, ui) 
                {
                    if(ui.content.length===0){ 
                        console.log("No result found");
                    }
                }
                ,
                minLength: 0,
                scroll: true,
                change: function (event, ui) {
                    if (!ui.item) {
                        this.value = '';
                    }
                },
                select: function(event, ui){
                    $j(this).val(ui.item.label);
                    $j(this).next().next().children().val(ui.item.value);                
                    event.preventDefault();
                },
                focus: function(event, ui){
                    $j(this).val(ui.item.label);
                    event.preventDefault();
                }  
                
            })
            .focus(function () {
                $j(this).autocomplete("search", "");
            });
            
            
            
            //AC Code Array
            $j(".accCodeClass").autocomplete({
                source:
                ACCodes,
                response: function(event, ui) 
                {
                    if(ui.content.length===0){ 
                        console.log("No result found");
                        //$j(this).parent().next().next().html("");
                    }
                } 
                ,
                minLength: 0,
                change: function (event, ui) {
                    if (!ui.item) {
                        this.value = '';
                    }
                },
                select: function (event, ui) {
                    $j(this).val(ui.item.label);

                    $j(this).next().next().children().val(ui.item.value);

                    // retrieve AP code after select AC code
                    // Andy Zhang @ 20190508
                    if(acapcodeMapstring != null) {
                        var myKeys = Object.keys(acapcodeMapstring);

                        var matchingKeys = myKeys.filter(function (key) {
                            return key.indexOf(ui.item.label) !== -1
                        });
                        var matchingValues = matchingKeys.map(function (key) {
                            return acapcodeMapstring[key]
                        });
                        console.log('acapcodeMapstring' + JSON.stringify(acapcodeMapstring));
                        console.log('matchingValues' + matchingValues);


                        // get index of table
                        var index = $j(this).attr('index').split('-')[1];
                        $j(`input[index='APCode-${index}']`).val('');
                        //var source = $j(`input[index='APCode-${index}']`).autocomplete('option','source',[]);
                        var source = $j(`input[index='APCode-${index}']`).autocomplete('option', 'source', matchingValues);
                    }

                    var filterVal = ui.item.value;

                    //$j(`input[index='APCode-${index}']`).autocomplete('option','source',matchingValues);

                    var result = $j.grep(Budgets, function (e, i) {
                        return e.AcCode.indexOf(filterVal) == 0;
                    });

                    if (result.length == 0) {
                        // not found
                        console.log("No found");
                    } else if (result.length == 1) {
                        // access the foo property using result[0].SubBrands
                        var SubBrand = $j(this).parent().prev().children().next().html();
                        console.log(SubBrand);
                        console.log(result[0].TotalAmount);
                        //$j(this).parent().next().next().html(result[0].TotalAmount);

                        console.log("find the value");
                    } else {
                        // multiple items found
                        console.log("multiple found");
                    }


                    event.preventDefault();
                },
                    focus: function(event, ui){
                        $j(this).val(ui.item.label);
                        event.preventDefault();
                    }  
                    
                }).focus(function () {
                    $j(this).autocomplete("search", "");
                });
            ;
            
            
            initCalx();
            //var count =  resultTable.column( 1 ).data().length;                      
            //calc.calx('getCell', 'AZ100').setFormula('SUM(A1:A'+ count +')');
            calc.calx('calculate');
            
            
            
        }
        
        function Recalulate(){
            $j('.totalcost').each(function() {
                var currentid = $j(this).attr('data-id'); //Get Current Id
                AmountRender(currentid);
            });
        }
        
        function AmountRender(Id){// If change 'Amount'
            var count=0;
            if(parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$.]+/g,""))>0){
                var CarryForward='{!Header.ASI_MFM_Cross_Fiscal_Year__c}';
               
                var monthAmt=(parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$.]+/g,""))/(monthDiff)).toFixed(2);
                // Add all remaining amount to last monthly amount  console.log(avamonth+' monthAmt: '+monthAmt+': monthDiff: '+monthDiff);
                var lastamount=(parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$.]+/g,""))-(monthDiff-1)*monthAmt).toFixed(2);
                $j('#monthly_' + Id + '_input input').each(function() {
                    
                    if (!$j(this).is('[readonly]') ) { 
                        count++;
                        $j(this).val(monthAmt);
                         if(count==monthDiff && CarryForward!='true'){ 
                            $j(this).val(lastamount);
                        }
                    }else{
                        $j(this).val(0.00);
                    }
                   
                });
                $j('#carryForward_' + Id + '_input input').each(function() {
                     if (!$j(this).is('[readonly]') ) { 
                         $j(this).val((parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$.]+/g,""))-monthAmt*avamonth).toFixed(2)); // $j(this).val((monthAmt*(monthDiff-avamonth)).toFixed(2));
                         
                     }else{
                        $j(this).val(0.00);
                    }
                });
            }
            /*
            var totalAmt = parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$,]+/g,""));
            console.log(totalAmt);
            
            monthAmt = parseFloat(monthAmt);


            if(monthAmt && monthAmt>0 && monthDiff>0 && monthAmt*monthDiff!==totalAmt){
                console.log("sum of period != plan line amt. ");
                var amtDiff = (totalAmt  - (monthAmt*monthDiff)).toFixed(2);
                amtDiff =  parseFloat(amtDiff);
                var lastPos = 0; 
                
                console.log(amtDiff);
                
                $j('#carryForward_' + Id + '_input input').each(function() {
                    if (!$j(this).is('[readonly]') ) {
                        
                        lastPos = 13;
                        var currentAmt = parseFloat($j(this).val());
                        currentAmt = currentAmt + amtDiff;
                        currentAmt=(Number(currentAmt)).toFixed(2);
                        $j(this).val(currentAmt); 
                    }    
                });    
                
                count--;
                    
                $j('#monthly_' + Id + '_input input').each(function() {
                    //console.log(lastPos);
                    
                    if (!$j(this).is('[readonly]') && lastPos== count) { 
                        console.log("add back the last month");
                        var currentAmt =parseFloat($j(this).val());
                        currentAmt = currentAmt + amtDiff;
                        currentAmt=(Number(currentAmt)).toFixed(2);
                        $j(this).val(currentAmt);                        
                    }
                    
                    lastPos++;
                });                
            }*/
            
        }
        
        function MonthRender(Id){ // If change month amount
            console.log('Start Month Calculate');
            var TotalAmt = 0;
            $j('#monthly_' + Id + '_input input').each(function() {
                // console.log($j(this).val());
                TotalAmt=(Number(TotalAmt)+Number($j(this).val())).toFixed(2);
            });
            
            $j('#carryForward_' + Id + '_input input').each(function() {
                TotalAmt=(Number(TotalAmt)+Number($j(this).val())).toFixed(2);
            });
            
            if(TotalAmt>0){
                $j('#TotalAmount_' + Id + '_input input').val(TotalAmt);
            }
        }
        
        function initCalx(){
            
            $j('.objectFormCls').attr('id','objectForm');//$j('#objectForm').each(function(){ this.reset(); }).calx('refresh');
            $j('#objectForm').calx({round: 7});
            calc = $j('#objectForm').calx('registerVariable', 'exchange_rate', exchangeRate, true);
            sheet = calc.calx('getSheet') ;
            $itemlist   = $j('#dt_LineItems');
            calc.calx();
        }
        
        
        function redirectBack(){
            //console.log('Sending you back to ' + returnURL);
            window.location.href = '/' + returnURL;
        }
        
        $j(document).ready(function() {
            initPlanItemPage({
                headerId: '{!header.Id}',
                FiscalYearFilter: '{!header.ASI_MFM_Fiscal_year__c}',
                exchangeRate : '{!header.ASI_MFM_Exchange_Rate__c}',
                RecordTypeName: '{!header.RecordType.DeveloperName}',
                CustomerTypeName:'{!Customer_RecordType_Developer_Name}',
                SBBrandTypeName:'{!Sub_brand_RecordType_Developer_Name}',
                ACCodeTypeName:'{!AC_Code_RecordType_Developer_Name}',
                APCodeTypeName:'{!AP_Code_RecordType_Developer_Name}',
                monthDiff:'{!monthDiff}',
                avamonth:'{!avamonth}'
            });
            
        });
        
        
        </script>
        
        
        
    </head>
    <apex:form id="objectForm" styleclass="objectFormCls"  >
        <div id="divForm" class="bs container-fluid">
            <div class="bs row" style="margin:0;">
                <div class="bs col-xs-12"> 
                    
                    
                    <apex:outputPanel styleclass="bs panel-primary" id="paymentDetailPanel">
                        <div class="bs panel-heading div-size">
                            <h3 class="bs panel-title">Plan Details</h3>
                        </div>
                        <div class="bs panel-body">                
                            <!--
                            <apex:repeat value="{!$ObjectType.ASI_MFM_Plan__c.FieldSets.ASI_MFM_VN_DF_Plan_Header}"  var="f">
                            <span  class="label" style="align:right"> {!f.label}  </span>
                            <apex:outputField value="{!header[f.fieldPath]}" />
                            </apex:repeat>
                            -->   
                            <div class="bs table-responsive" >          
                                <table class="bs table">
                                    <tbody>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.Name.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!Header.ID}" target="_blank">
                                                <apex:outputField value="{!Header.Name}"></apex:outputField>
                                                </apex:outputLink>
                                            </td>
                                            
                                            
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Plan_Raised_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Plan_Raised_Date__c}"></apex:outputField></td>                                                
                                                
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Start_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Start_Date__c}"></apex:outputField></td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_End_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_End_Date__c}" ></apex:outputField></td>                              
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Currency__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Currency__c}"></apex:outputField></td> 
                                            
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Exchange_Rate__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Exchange_Rate__c}"></apex:outputField></td>
                                            <!--<td><label>Total Plan Amount</label></td>
<td><span  data-cell="AZ100"  data-format=" 0,0.00"></span></td> --> 
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Plan_Amount__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Plan_Amount__c}"></apex:outputField></td> 
                                            
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Status__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Status__c}"></apex:outputField></td>                                          
                                            
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="Created By" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.CreatedById}"></apex:outputField></td> 
                                            
                                            <td><apex:outputLabel value="Owner" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ownerId}"></apex:outputField></td>                                          
                                            
                                        </tr>      
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Other_Remark__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Other_Remark__c}"></apex:outputField></td>       
                                              <td><!--<apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Cross_Fiscal_Year__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/>--></td>
                                            <td><!--<apex:outputField value="{!Header.ASI_MFM_Cross_Fiscal_Year__c}"></apex:outputField>--></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        
                    </apex:outputPanel> 
                    <apex:outputPanel styleclass="bs panel-primary" id="LinePanel">
                        <div class="bs panel-heading div-size" >
                            <h3 class="bs panel-title">Plan Line Items </h3>
                        </div>  
                        <div class="bs panel-body">
                            
                          <div class="alert alert-danger fade in" style="{!IF(UpsertPermission,'display:none;','')}"  id="SaveFailPart">
                              
                              <strong>Error,Can not Save!</strong><br/>
                                <apex:outputText escape="false" value="{!Msg}"/>
                            </div>  
                            
                            
                            <div class="alert alert-success fade in" style="{!IF(SaveSuccess,'','display:none;')}" id="SaveSuccessPart">
                                <strong>Quick Save Success!</strong>
                                <apex:outputText escape="false" value="{!Msg}"/>
                            </div>    
                            
                            
                            <div class='bs wrapper text-center' id='bs toolbar' >
                                <div class="bs btn-group " role="group" >
                                    
                                    <apex:commandLink styleClass="bs btn btn-default btn-size" 
                                                      value="Save"
                                                      style="font-weight: bold"
                                                      action="{!saveItems}"
                                                      status="ActionStatus"
                                                      onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                      oncomplete="console.log('Save Done');setTables(true);"
                                                      reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                      
                                                        >
                                    <apex:param name="IS_QUICK_SAVE" value="false"/>
                                    </apex:commandLink>
                                    </div>&nbsp;
                                    <div class="bs btn-group " role="group" >
                                        <apex:commandLink styleClass="bs btn btn-default btn-size"
                                                            style="font-weight: bold"
                                                            value="Quick Save"
                                                            action="{!saveItems}"
                                                            status="ActionStatus"
                                                            onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                            oncomplete="console.log('Quick Save Done');setTables(true);"
                                                            reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                            
                                                            html-data-loading-text="Loading..." >
                                        <apex:param name="IS_QUICK_SAVE" value="true"/>
                                        </apex:commandLink>
                                    </div>&nbsp;
                                
                                    <div class="bs btn-group " role="group" >
                                        
                                        <apex:commandButton styleClass="bs btn btn-default btn-size"
                                                            style="font-weight: bold"
                                                            value="Cancel"
                                                            action="{!cancel}" 
                                                            oncomplete="redirectBack()"
                                                            html-data-loading-text="Loading..."
                                                            html-formnovalidate="formnovalidate"/>
                                    </div>
                            </div>
                            <div class="bs table-responsive"> 
                                
                                <apex:commandButton styleClass="btn btn-success" value="Add New Plan Line" action="{!addLineItem}" onComplete="console.log('Add Row');  setTables(false);"
                                                    onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                    html-formnovalidate="formnovalidate" reRender="LinePanel"  rendered="{!IF(header.ASI_MFM_PH_Sub_brand_Allocation__c!=null || isFinal, false, true)}" status="ActionStatus" />
                                &nbsp;                                
                                <!--<button type="button" class="btn btn-info" onclick="Recalulate();">Recalculate</button>-->
                                <apex:commandButton styleClass="btn btn-info" onclick="Recalulate();" rendered="{!IF(header.ASI_MFM_PH_Sub_brand_Allocation__c!=null, false, true)}" value="Recalculate" />
                                 
                                <table id="dt_LineItems" class="hover responsive no-wrap compact" style="width: 100%;" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th> </th>
                                            <th> </th>
                                            <th>Customer Name<span class="thtitle" >*</span></th>
                                            <th>Sub Brand<span class="thtitle" >*</span></th>
                                            <th>Activity<span class="thtitle" >*</span></th>
                                            <th style="display:none;">AP Code</th><!--hidden this column by Andy Zhang-->
                                            <th>Description</th>
                                            <th>Amount</th>
                                            <th>Jul(P1)</th>
                                            <th>Aug(P2)</th>
                                            <th>Sep(P3)</th>
                                            <th>Oct(P4)</th>
                                            <th>Nov(P5)</th>
                                            <th>Dec(P6)</th>
                                            <th>Jan(P7)</th>
                                            <th>Feb(P8)</th>
                                            <th>Mar(P9)</th>
                                            <th>Apr(P10)</th>
                                            <th>May(P11)</th>
                                            <th>Jun(P12)</th>
                                            <th>Carry Forward</th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        <apex:variable value="{!0}" var="i"/>
                                        
                                        <apex:repeat value="{!allLineItemMap}" var="PId">
                                            
                                            <apex:variable var="i" value="{!i+1}"/>
                                            
                                            <tr style="{!IF(allLineItemMap[PId].isProcess == false, "color: #fff; background: #f2dede", "" )}">
                                                <td><apex:commandLink styleClass="bs btn btn-default btn-round pull-left btn-xs"
                                                                      style="border: none;background-color: transparent;"
                                                                      reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                                      action="{!cloneLine}"
                                                                      onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                                      status="ActionStatus"
                                                                      onComplete="console.log('Clone Row'); setTables(false);"                                                        
                                                                      html-formnovalidate="formnovalidate" 
                                                                      title="Clone line {!i}"
                                                                      html-data-loading-text="Loading..." >
                                                    <span class="bs glyphicon glyphicon-duplicate"  style="color:black;font-size: 20px;"></span>
                                                    <apex:param name="PARAM_clone_ID" value="{!PId}" />
                                                    </apex:commandLink>
                                                </td>
                                                <td>
                                                    <apex:commandLink styleClass="bs btn btn-default btn-round pull-left btn-xs "
                                                                      style="border: none;background-color: transparent;"
                                                                      reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                                      html-formnovalidate="formnovalidate" 
                                                                      action="{!removeLine}"
                                                                      onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                                      status="ActionStatus"
                                                                      title="Remove line {!i}"
                                                                      onComplete="console.log('Remove Row'); setTables(true);"                                                        
                                                                      html-data-loading-text="Loading..." >
                                                        <span class="bs glyphicon glyphicon-trash"  style="color:red;font-size: 20px;"></span>
                                                        <apex:param name="PARAM_Line_ID" value="{!PId}" />
                                                    </apex:commandLink>
                                                </td>
                                                
                                                
                                                <td class="lookupCen1">
                                                        <apex:inputText value="{!allLineItemMap[PId].Customer}" style="position: relative; vertical-align: top; background-color: transparent;" styleclass="{!if(isnull(VNDFCustomerDefault),'CustomerClass required','required')}" rendered="{!!isFinal}" />
                                                        <apex:outputText value="{!allLineItemMap[PId].Customer}" styleclass="value" rendered="{!isFinal}"/>
                                                    <div class="hid">
                                                        <apex:inputText value="{!allLineItemMap[PId].CustomerId}" styleclass="value"/>
                                                    </div>
                                                </td>
                                                
                                                
                                                <td class="lookupCen2">
                                                    <!--<apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Sub_brand_Code__c}"></apex:inputField>-->
                                                    <apex:input value="{!allLineItemMap[PId].SubBrand}" styleclass="SubBrandClass required" rendered="{!!isFinal}"/>
                                                    <apex:outputText value="{!allLineItemMap[PId].SubBrand}" styleclass="value" rendered="{!isFinal}"/>
                                                    <div class="hid">
                                                        <apex:inputText value="{!allLineItemMap[PId].SubBrandId}" styleclass="value"/>
                                                    </div>
                                                </td>
                                                
                                                
                                                <td class="lookupCen3">
                                                    <apex:input value="{!allLineItemMap[PId].ACCode}" styleclass="accCodeClass" rendered="{!!isFinal}" html-index="accountCode-{!i}"/>
                                                    <apex:outputText value="{!allLineItemMap[PId].ACCode}" styleclass="value" rendered="{!isFinal}"/>
                                                    <div class="hid" >
                                                        <apex:inputText value="{!allLineItemMap[PId].ACCodeId}" styleclass="value"/>
                                                    </div>
                                                    <!--     <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_A_C_Code__c}" styleclass="accCodeClass"></apex:inputField> --> 
                                                </td>

                                                <td class="lookupCen3" style="display:none;">
                                                    <apex:input value="{!allLineItemMap[PId].APCode}" styleclass="apCodeClass" rendered="{!!isFinal}" html-index="APCode-{!i}"/>
                                                    <apex:outputText value="{!allLineItemMap[PId].APCode}" styleclass="value" rendered="{!!isFinal}"/>
                                                    <div class="hid" >
                                                        <apex:inputText value="{!allLineItemMap[PId].APCodeId}" styleclass="value"/>
                                                    </div>
                                                    <!--     <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_A_C_Code__c}" styleclass="accCodeClass"></apex:inputField> -->
                                                </td>
                                                
                                                
                                                <!--  <td><apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Customer_Name__c}"></apex:inputField></td> --> 
                                                <td class="Description">
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_List_Item_Description__c}"></apex:inputField>
                                                </td>

                                                <td class="PlanAmount"   id="TotalAmount_{!PId}_input"  >
                                                     <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Total_Cost__c}" html-data-id="{!PId}"  styleClass="totalcost" style="white-space: pre-wrap; width: 5em; " onchange="AmountRender('{!PId}');" ></apex:inputField> 
                                                 
                                                </td>
                                                
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_1_Cost__c}" style="white-space: pre-wrap; width: 5em; "  rendered="{!if(AllowInputList[6]=true,false,true)}" html-readonly="fasle" ></apex:input>
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_1_Cost__c}" style="white-space: pre-wrap; width: 5em; "  onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[6]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                   <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_2_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[7]=true,false,true)}" html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_2_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[7]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input" id="monthly_{!PId}_input">
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_3_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[8]=true,false,true)}" html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_3_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[8]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                     <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_4_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[9]=true,false,true)}" html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_4_Cost__c}" style="white-space: pre-wrap; width: 5em; "  onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[9]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" > 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_5_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[10]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_5_Cost__c}" style="white-space: pre-wrap; width: 5em; "  onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[10]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_6_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[11]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_6_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[11]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_7_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[0]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_7_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[0]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_8_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[1]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_8_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[1]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_9_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[2]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_9_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[2]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_10_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[3]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_10_Cost__c}" style="white-space: pre-wrap; width: 5em; "  onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[3]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_11_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[4]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_11_Cost__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[4]=true,true,false)}"></apex:input> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_12_Cost__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(AllowInputList[5]=true,false,true)}"  html-readonly="fasle" ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_12_Cost__c}" style="white-space: pre-wrap; width: 5em; "  onchange="MonthRender('{!PId}');" rendered="{!if(AllowInputList[5]=true,true,false)}"></apex:input> 
                                                </td>
                                                 <td class="monthly_input"   id="carryForward_{!PId}_input" >
                                                     <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Carry_Forward__c}" style="white-space: pre-wrap; width: 5em; " rendered="{!if(Header.ASI_MFM_Cross_Fiscal_Year__c==true,false,true)}"  html-readonly="fasle"  ></apex:input> 
                                                    <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_Carry_Forward__c}" style="white-space: pre-wrap; width: 5em; " onchange="MonthRender('{!PId}');" rendered="{!if(Header.ASI_MFM_Cross_Fiscal_Year__c==true,true,false)}" ></apex:input> 
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </apex:outputPanel>                   
                    
                    
                    
                </div>
            </div>
        </div>
        
        <apex:actionstatus id="ActionStatus">
            <apex:facet name="start">
                <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb;
                                                                     height: 100%; width:100%; opacity:0.65;"> 
                    <div class="waitingHolder" id="loadtext" style="position: absolute;" align="left" valign="top">
                        &nbsp;&nbsp;&nbsp;
                        <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                        <span class="waitingDescription">Please Wait...</span>
                    </div>
                </div>
            </apex:facet>
        </apex:actionstatus> 
        
        
    </apex:form>
    
    
    
</apex:page>