<apex:page standardController="EUR_CRM_Pros_Segmentation__c" extensions="EUR_CRM_ProsSegmentationExtCombined" 
showChat="false" standardStylesheets="true" cache="false" showHeader="true" sidebar="true">

<head>
<apex:stylesheet value="/sCSS/21.0/sprites/1297816277000/Theme3/default/gc/versioning.css" />
<link rel="stylesheet"  href="{!URLFOR($Resource.EUR_CRM_JQuery_Parenthood, 'jquery-ui-1.9.2.custom/css/start/jquery-ui-1.9.2.custom.min.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_JQuery_Parenthood, 'jquery-ui-1.9.2.custom/js/jquery-1.8.3.js')}"/>    
<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_JQuery_Parenthood, 'jquery-ui-1.9.2.custom/js/jquery-ui-1.9.2.custom.min.js')}"/> 

<style type="text/css">
.customPopup {
    background-color: white;
    border-style: solid;
    border-width: 2px;
    padding: 5px;
    position: absolute;
    z-index: 9999;
    margin-left:auto;
    margin-right:auto;
    width:auto;
    top: 20%;
}

.overlay-bg {
    display:none;
    position: fixed;
    top: 0;
    left: 0;
    height:100%;
    width: 100%;
    background: #000; /* fallback */
    background: rgba(0,0,0,0.75);
}
.overlay-content {
    background: #fff;
    padding: 1%;
    width: 30%;
    position: absolute;
    top: 10%;
    left: 50%;
    margin: 0 0 0 -20%; /* add negative left margin for half the width to center the div */
    border-radius: 4px;
    box-shadow: 0 0 5px rgba(0,0,0,0.9);
    z-index: 9999;
}
 
.closeButton  {
    cursor: pointer;
    border: 1px solid #333;
    padding: 2% 5%;
    background: #a9e7f9; /* fallback */
    background: -moz-linear-gradient(top,  #a9e7f9 0%, #77d3ef 4%, #05abe0 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#a9e7f9), color-stop(4%,#77d3ef), color-stop(100%,#05abe0));
    background: -webkit-linear-gradient(top,  #a9e7f9 0%,#77d3ef 4%,#05abe0 100%);
    background: -o-linear-gradient(top,  #a9e7f9 0%,#77d3ef 4%,#05abe0 100%);
    background: -ms-linear-gradient(top,  #a9e7f9 0%,#77d3ef 4%,#05abe0 100%);
    background: linear-gradient(to bottom,  #a9e7f9 0%,#77d3ef 4%,#05abe0 100%);
    border-radius: 4px;
    box-shadow: 0 0 4px rgba(0,0,0,0.3);
}
.closeButton  :hover {
    background: #05abe0;
}

.close-Button {
    float: right;
}

.emphasizeText{
    font-weight:bold;
    font-size: 13px;
    line-height:17px
}

.matrixTable{
    width:100%;
    padding: 5px 5px;
    align:center;
    float:center;
    font-color: #cccccc;
    font-weight:bold;
    font-size:12px;
    text-align:center;
}
.matrixTable td{width:15%;}
.matrixTable tr:nth-child(even) {background: #EBF5F4;}
.matrixTable tr:nth-child(odd) {background: #CEECF5;}

.imgVolCheck{
    text-align:center;
}
.imgVolCheck:checked {
   font-weight: bold;
   font-size: 14px;
}
.imgVolCheck:disabled {
   font-weight: bold;
}

.blockSection{
    align:center;
    float:center;
}

.relatedList{
    width:70%;
    align:center;
}

.warnMsg{
    float:center; 
    align:center; 
    vertical-align:center; 
    padding:2px; 
    margin-left:auto; 
    margin-right:auto;
}

.warnMsg td{
    color:#B40404; 
    font-size:13px; 
    text-align:center;
}

    .tabelaVolumes{width:100%; background-color:white;border:solid 1px LightGray; margin-bottom:15px}
    .tabelaVolumes td{border-top:solid 1px LightGray;}
    .pergunta{font-weight:bold;}
    .ui-dialog .ui-dialog-content {font-size:100%;font-family: Arial,Helvetica,sans-serif}
    .inputText{padding:0; text-align:center; }
    .thhead{vertical-align:bottom; padding:5px; border-right: solid 1px LightGray; vertical-align:middle;font-weight:bold; border-top:none}
    .tabs{padding:8px 12px; background:#CFEEF8; margin:0; border-top-right-radius:6px; border-top-left-radius:6px; display:inline-block}
    .perguntaDiv{cursor:default; border: solid 1px LightGray; padding:5px; margin:15px; min-height:40px; border-radius:6px; background:rgb(243, 243, 243)}
    #btnsDiv .perguntaDiv:hover{background:LightGray}

    .sheet{
        width:100%;
    }
    .sheet .detailList{
        width:100%;
    }

    .sheet select{
        width:20%;
    }
    .sheet input{
        width:50%;
    }
    .sheet th{
        width:40%;
    }
    
    .sheet .freeText{
        width:50%;
    }

.activeTab {
    background-color: #EBF5F4; 
    color:black; 
    font-weight:bold;
    background-image:none;
}
.inactiveTab { 
    background-color: #CEECF5; color:black; 
    background-image:none}
.tabContent{
    background-color: #EBF5F4;
}   

.tabs{padding:8px 12px; background:#CFEEF8; margin:0; border-top-right-radius:6px; border-top-left-radius:6px; display:inline-block}

.volumeDialogStyle {
    max-height: 200px;
    overflow: auto;
}
</style>
<script type="text/javascript">

    var checkedItems = new Array();
    var toBeRemoved= new Array();

    $j = jQuery.noConflict();  

    $j(document).ready(function(){
        console.log("LOAD PAGE 1 - {!prosSegmentationId}");
        if("{!prosSegmentationId}" != "null" || "{!prosSegmentationId}" != null){
            initSummary();
    
            console.log("LOAD PAGE 2");
            changeTabStyle('{!tab}');
            $j( "#dialog" ).dialog({ autoOpen: false, draggable: false, modal: true, height: 'auto', resizable: false, width:400, minHeight: 200, title: "Dialog Title"  });
            initVolCard();
            
            console.log('Loaded Volume Card');
        }
        console.log('***: {!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Is_Image_Level_Modified__c}');
        console.log('***: {!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Is_Volume_Potential_Modified__c}');
    });
    
    function initDialog(){
        $j( "#dialog" ).dialog({ autoOpen: false, draggable: false, modal: true, height: 'auto', resizable: false, width:400, minHeight: 200, title: "Dialog Title"  });
        console.log('INIT DIALOG');
    }
        
    function openDialog(title) {
        console.log('Open Dialog');
        $j( "#dialog" ).dialog( "option", "title", title );
        $j( "#dialog" ).dialog( "open");
    };
    
    function changeTabStyle(tab){
        
        var tabClear = document.getElementsByClassName('tabs');
        for(var i = 0;i < tabClear.length; i++){
            tabClear[i].style.background = "none";
            tabClear[i].style.color = "black";
        }
        
        var t = 'tab' + tab;
    }
    
    function closeDial (){
        $j("#dialog").dialog("close");
    }
    
    function getMarcasP(cla){
        var str='';
        var str2='';
        var marcas = document.getElementsByClassName('marcasCheck');
        //var toBeRemoved= new Array();
        for (var i=0;i<marcas.length;i++){

            //alert('MARCAS: '+ marcas[i].checked + ' : '+marcas[i].id);
            
            if(marcas[i].checked){
                /*str += marcas[i].id+',';
                if(checkedItems.indexOf(marcas[i].id) < 0){
                    checkedItems.push(marcas[i].id);
                }*/
                str += marcas[i].id+',';
                //if(checkedItems.indexOf(marcas[i].id) < 0){
                    checkedItems.push(marcas[i].id);
                    //alert('ARRAY REMOVED: '+toBeRemoved);
                    for(var j=0;j<toBeRemoved.length;j++){
                        if(toBeRemoved[j] == marcas[i].id){
                            //alert(marcas[i].id);
                            //alert(toBeRemoved[j]);
                            toBeRemoved.splice(j,1);
                        }
                    }
                //}
                
            } else{
                //toBeRemoved.push(marcas[i].id);
                var isRemoveIncluded = true;
                for(var j=0;j<toBeRemoved.length;j++){
                    if(toBeRemoved[j] == marcas[i].id){
                        isRemoveIncluded = false;
                    }
                }
                if(isRemoveIncluded == true){
                    toBeRemoved.push(marcas[i].id);
                }
                //alert('ROMOVED');
                str2 += marcas[i].id+',';
                for(var x=0;x<checkedItems.length;x++){
                    /*var idx = checkedItems.indexOf(marcas[i].id);
                    if (idx != -1) {
                        checkedItems.splice(idx, 1);
                    }*/
                    if(checkedItems[x] == marcas[i].id){
                        checkedItems.splice(x,1);
                    }
                }
            }
        }
        //alert('UNCHECKED: '+toBeRemoved);
        for(var i=0;i<toBeRemoved.length;i++){
            var idx = checkedItems.indexOf(toBeRemoved[i]);
            if (idx != -1) {
                checkedItems.splice(idx, 1);
            }
        }
        //alert('CHECKED2: '+checkedItems);
        functionSaveMarcasPremium(str, cla, str2);
    }
    
    function showLoading(display) {
        document.getElementById('pnlLoading').style.display = display;
    }
    
    function saveVolumeCard(){
        saveVolumeContent();
        console.log('Volume Card Saved.');
    }
    
</script>
</head>

<apex:actionStatus id="idStatus" >
    <apex:facet name="start">
        <c:EUR_CRM_LoadingStatus BackColor="#ffffff"
                                borderColor="#6B6B6B"
                                borderSize="1"
                                height="50px"
                                width="150px"
                                margintop="-25px"
                                marginleft="-60px"
                                ImageUrl="{!$Resource.loadingStatus}"
                                Message=" Processing ..."/>
    </apex:facet>
</apex:actionStatus>
    
<apex:form >
    <apex:actionFunction name="initSummary" action="{!initSummary}" status="idStatus" rerender="imageVolSection, blockButtons"/>
    <apex:actionFunction name="resetProsSeg" action="{!initProsSegmentationObj}" status="idStatus" rerender="imageVolSection, blockButtons"/>
    <apex:actionFunction name="initVolCard" action="{!initVolCard}" status="idStatus" rerender="tudo"/>
    
    <apex:pageMessages id="idMessages" escape="false" />
    
    <apex:outputPanel rendered="{!IF(prosSegmentationId==null, false, true)}">
    <apex:pageBlock >
        <apex:inputHidden value="{!EUR_CRM_Pros_Segmentation__c.Id}" id="ProsID"/>
        <apex:inputHidden value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Account__c}" id="ProsAccount"/>

        <apex:pageBlockButtons >
              <div id="blockButtons">
                  <apex:commandButton action="{!processGroupOutletType}" value="1. {!$Label.EUR_CRM_SetGroupOutletType}" status="idStatus" 
                    disabled="{!isGroupDisabled}" rendered="{!hasEditAccess}"/>
                  <!--apex:commandButton action="{!showOutlet}" rerender="popup" value="Set Outlet Type" status="idStatus" disabled="{!isOutletDisabled}" rendered="false"/-->
                  <apex:commandButton action="{!processImageLevel}" value="2. {!$Label.EUR_CRM_SetIDCard}" status="idStatus" 
                    disabled="{!IF((isImageDisabled && !hasIdCard),true,false)}" rendered="{!IF(AND(isPRT,hasEditAccess), True, False)}"/>
                  <apex:commandButton action="{!processImageLevel}" value="2. {!$Label.EUR_CRM_SetIDCard}" status="idStatus" 
                    disabled="{!IF(isImageDisabled,true,false)}" rendered="{!IF(AND(hasEditAccess , isImageLevelRendered), True, False)}"/>
                  <apex:commandButton action="{!processImageLevel}" value="Set Image Level" status="idStatus" 
                    disabled="{!IF(isImageDisabled,true,false)}" rendered="{!IF(AND(hasEditAccess, isSetImageLevelRendered), True, False)}"/> <!--Baltics LT, LV, EE  -->
                 <!--  <apex:commandButton action="{!processVolumePotential}" value="3. {!$Label.EUR_CRM_SetVolPotential}" status="idStatus" 
                    disabled="{!isVolumeDisabled}" rendered="{!!isVolumeCardAvailable} && isPRT}"/> -->
                  <apex:commandButton action="{!processVolumePotential}" value="3. {!$Label.EUR_CRM_SetVolPotential}" status="idStatus" 
                    disabled="{!isVolumeDisabled2}" rendered="{!IF(AND(hasEditAccess, isVolumePotentialRendered), True, False)}"/>
                  <apex:commandButton action="{!processAccountPlan}" value="4. {!$Label.EUR_CRM_ShowAccountPlan}" status="idStatus" 
                    disabled="{!IF(servicePackId!=null,"false", "true")}" rendered="{!isNumberedAccountPlanRendered}" />
                  <apex:commandButton action="{!processAccountPlan}" value="{!$Label.EUR_CRM_ShowAccountPlan}" status="idStatus" 
                    disabled="{!IF(servicePackId!=null,"false", "true")}" rendered="{!isAccountPlanRendered || isPRT }"/>
                  <br/>
                  <div style="margin-left:auto;margin-right:auto;width:60%;">
                  <apex:commandButton action="{!cancel}" value="Cancel" rendered="false"/>
                  </div>
              </div> 
          </apex:pageBlockButtons>
        
        <apex:outputPanel styleClass="warnMsgPanel" rendered="{!IF(OR(EUR_CRM_Pros_Segmentation__c.EUR_CRM_Is_Image_Level_Modified__c, AND(EUR_CRM_Pros_Segmentation__c.EUR_CRM_Is_Volume_Potential_Modified__c, NOT(isPRT))),true,false)}">
            <div style="display:inline-block; width:100%; float:center; align:center;">
            <table class="warnMsg">
                <tr><td rowspan="2"><apex:image url="{!URLFOR($Resource.EUR_CRM_Icons,'warningIcon.png')}"/></td>
                <td><apex:outputText value="{!$Label.EUR_CRM_ImageLevelModified_Msg}" rendered="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Is_Image_Level_Modified__c}"/></td>
                </tr>
                <tr><td><apex:outputText value="{!$Label.EUR_CRM_VolPotentialModified_Msg}" rendered="{!IF(AND(EUR_CRM_Pros_Segmentation__c.EUR_CRM_Is_Volume_Potential_Modified__c, NOT(isPRT)), true, false)}"/></td>
                </tr>
            </table>
            </div>
        </apex:outputPanel>
    
        <apex:pageBlockSection columns="1">
            <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.Name}"/>
             <!-- <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Affiliate__r.Name}" rendered="false"/> -->
             <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Account__c}" rendered="{!(!isPRT)}"/>
             <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Standard_Account__c}" rendered="{!isPRT}"/>
        </apex:pageBlockSection>
        
        <apex:pageBlockSection title="{!$Label.EUR_CRM_GroupOutlet_OutletType_Title}" columns="1">
               <span class="emphasizeText">
                <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Group_Outlet_Type__c}"/>  
                <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Group_Outlet_Type__r.EUR_CRM_Group_Outlet_Name__c}"/>
                <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Outlet_Type__c}"/>
                <apex:outputField value="{!EUR_CRM_Pros_Segmentation__c.EUR_CRM_Outlet_Type__r.EUR_CRM_Name__c}"/>
              </span>
        </apex:pageBlockSection>
               
        <apex:pageBlockSection title="{!$Label.EUR_CRM_ImageLevel_VolPotential_Title}" columns="1" id="imageVolSection" rendered="{!IF((EUR_CRM_Pros_Segmentation__c.EUR_CRM_Group_Outlet_Type__c!=null && EUR_CRM_Pros_Segmentation__c.EUR_CRM_Outlet_Type__c!=null && EUR_CRM_Pros_Segmentation__c.EUR_CRM_Image_Level_Threshold__c!=null && EUR_CRM_Pros_Segmentation__c.EUR_CRM_Volume_Potential_Threshold__c!=null),true, false)}">
            
           <apex:outputPanel >
           
           <div style="margin-left:auto;margin-right:auto;width:80%;"> 
               <table class="matrixTable">
                 <tr>
                 <td></td>
                 <apex:repeat value="{!volumePotentialLabels}" id="volRepeat" var="vol">
                     <td>{!vol}</td>
                 </apex:repeat>
                 </tr>
                 <apex:repeat value="{!imageLevelLabels}" id="imageRepeat" var="image">
                 <tr>
                     <td>{!image}</td>  
                    
                     <apex:repeat value="{!volumePotentialLabels}" id="volRepeat2" var="vol1">
                     TEST: {!imageVolumeMap[image+vol1]}
                         <td>
                         <c:EUR_CRM_OutputCheckbox value="{!imageVolumeMap[image+vol1]}"></c:EUR_CRM_OutputCheckbox>
                         </td>
                     </apex:repeat>
                 </tr>
                 </apex:repeat>
            </table></div>
           </apex:outputPanel>
           
           
           <apex:outputPanel id="imageLevelPanel">
                <span class="emphasizeText">
                <apex:outputField value="{!prosSegmentation.EUR_CRM_Image_Level_Threshold__r.EUR_CRM_Image_Level_Name__c}" styleClass="emphasizeText"/>
                </span>
                <apex:pageBlockTable value="{!prosImageLevel}" var="imageRL" styleClass="relatedList">
                    <apex:column headerValue="{!$Label.EUR_CRM_Statement}" value="{!imageRL.EUR_CRM_Criteria_Threshold__r.EUR_CRM_Question__c}" style="width:50%"/>
                    <apex:column headerValue="{!$Label.EUR_CRM_Answer}" value="{!imageRL.EUR_CRM_Answer__c}"/>
                    <apex:column headerValue="{!$Label.EUR_CRM_Pros_Weight}" value="{!imageRL.EUR_CRM_Weight__c}" rendered="{!AND(isProsWeightRendered, (isProsAdmin || $Profile.Name =='System Administrator' || $Profile.Name =='EUR System Admin' || $Profile.Name =='EUR Nordic IT Admin'))}"/>
                   <!-- <apex:column headerValue="Weight" value="{!imageRL.EUR_CRM_Weight__c}" rendered="{!($Profile.Name !='EUR LV Standard Platform User' && $Profile.Name !='EUR LT Standard Platform User' && $Profile.Name !='EUR EE Standard Platform User')}"/>
                   -->
                </apex:pageBlockTable>
           </apex:outputPanel>
           <br/>
           <apex:outputPanel id="volumePotentialPanel">
                <span class="emphasizeText">
                <apex:outputField value="{!prosSegmentation.EUR_CRM_Volume_Potential_Threshold__r.EUR_CRM_Volume_Potential_Name__c}"/>
                </span>
                <apex:pageBlockTable value="{!prosVolumePotential}" var="volRL">
                    <apex:column headerValue="{!$Label.EUR_CRM_Statement}" value="{!volRL.EUR_CRM_Criteria_Threshold__r.EUR_CRM_Question__c}" style="width:50%"/>
                    <apex:column headerValue="{!$Label.EUR_CRM_Answer}" value="{!volRL.EUR_CRM_Answer__c}"/>
                    <apex:column headerValue="{!$Label.EUR_CRM_Pros_Weight}" value="{!volRL.EUR_CRM_Weight__c}" rendered="{!isProsAdmin || isProsWeightRendered || $Profile.Name =='System Administrator'  || $Profile.Name =='EUR System Admin' || $Profile.Name =='EUR Nordic IT Admin' }"/>
                </apex:pageBlockTable>
           </apex:outputPanel>
           
        </apex:pageBlockSection>

</apex:pageBlock>
</apex:outputPanel>

<div id="dialog" style="display:block">
<apex:outputpanel id="pageBlockDialog">
<apex:pageBlock >
    <apex:outputpanel layout="block" styleClass="volumeDialogStyle" id="pageBlockMarcas" > 
        <!--<apex:repeat value="{!mapMarcas}" var="item">
            <div style="margin: 5px;">
            <input type="checkbox" class="marcasCheck" id="{!mapMarcas[item].Id}" />
            <apex:outputField value="{!mapMarcas[item].Name}" style="margin-left:4px; text-decoration:none"/>
            </div>
        </apex:repeat>-->
        <apex:repeat value="{!productTrackerWrapList}" var="item">
            <div style="margin: 5px;"> 
            <input type="checkbox" class="marcasCheck" id="{!item.brandQuality.Id}" /> 
            <apex:outputField value="{!item.brandQuality.Name}" style="margin-left:4px; text-decoration:none"/>
            </div>
            <script>
                $j(document).ready(function(){
                    
                    if({!item.isChecked}){
                        //alert('TESTER: '+'{!item.brandQuality.Id}');
                        //alert('TESTERREMOVED: '+toBeRemoved);

                        console.log('TESTER: '+toBeRemoved);
                        checkedItems.push('{!item.brandQuality.Id}');
                        /*for(var i=0;i<toBeRemoved.length;i++){
                            var idx = toBeRemoved.indexOf('{!item.brandQuality.Id}');
                            if (idx != -1) {
                                checkedItems.splice(idx, 1);
                            }
                        }*/
                        for(var i=0;i<toBeRemoved.length;i++){
                            for(var j=0;j<checkedItems.length;j++){
                                //alert('TEST: '+toBeRemoved[i]+' : '+checkedItems[j]);
                                if(toBeRemoved[i] == checkedItems[j]){
                                    checkedItems.splice(j,1);
                                }
                            }
                        }
                    }
                    //alert('CHECKED: '+checkedItems);
                   //if(checkedItems.length > 0){
                        for(var i=0;i<checkedItems.length;i++){
                            var idx = checkedItems.indexOf('{!item.brandQuality.Id}');
                            if (idx != -1) {
                                document.getElementById('{!item.brandQuality.Id}').checked = true;
                            } else {
                                document.getElementById('{!item.brandQuality.Id}').checked = false;
                            }
                        }
                    /*} else{
                        if({!item.isChecked}){
                            document.getElementById('{!item.brandQuality.Id}').checked = true;
                            //var bqCheckbox = document.getElementById('{!item.brandQuality.Id}');
                            //alert({!item.isChecked}+ ' '+bqCheckbox);
                        }
                        //alert('test2');
                    }*/
                });
            </script>
        </apex:repeat>              
    </apex:outputpanel> 
    <br/>
    <apex:outputpanel id="dialogBtns" style="float:right; position:relative; bottom:0px; top:1px;text-size:65%">
        <br/>
        <apex:commandButton value="Confirm" status="idStatus" disabled="{!IF((mapMarcasSize>0),false, true)}"
            onclick="closeDial(); getMarcasP('{!cla}')" style="padding:3px"/>
    </apex:outputpanel>
 </apex:pageBlock>
</apex:outputpanel>
</div>


<div id="pnlLoading"
     style="background: none repeat scroll 0 0 #FFFFFF; height: 100%; width: 98%; opacity: 0.7; filter: alpha(opacity = 70); 
     position: absolute; text-align: center; z-index: 200; padding-top: 50px; top:0; left:0; display:none;">
     <div style="position:fixed; top: 50%; left: 50%; margin-top: -45px; margin-left: -45px;">
         <apex:image value="/img/loading.gif" rendered="true"/>
     </div>
 </div>
 
<apex:actionFunction action="{!saveP}" status="idStatus" name="saveVolumeContent">
</apex:actionFunction>
 
<!--<apex:actionFunction action="{!saveMarcasPremium}"  name="functionSaveMarcasPremium" rerender="contentTudo">-->
<apex:actionFunction action="{!saveMarcasPremium}"  name="functionSaveMarcasPremium" rerender="contentTudo" status="idStatus">
<apex:param name="Str" value="" />
<apex:param name="Classificacao"  value="" />
<apex:param name="Str2" value="" />
</apex:actionFunction>


<apex:actionFunction action="{!getMarcasPremium}" immediate="true" name="functionGetMarcasPremium" status="idStatus" rerender="pageBlockDialog" oncomplete="openDialog('{!dialogTitle}')">
<apex:param name="CategoriaId" value="" />
<apex:param name="Categoria" value="" />
<apex:param name="Classificacao"  value="" />
</apex:actionFunction>

</apex:form>

</apex:page>