<apex:page standardController="ASI_MFM_Plan__c"  tabstyle="ASI_MFM_Plan__c" sidebar="false"  docType="html-5.0" extensions="ASI_MFM_KR_PlanManageAllController" action="{!init}">
    <head>
        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_Bootstrap_V3_3_5, 'dist/css/bootstrap.min.css')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_Datatable_V1_10_7, 'DataTables-1.10.7/media/css/jquery.dataTables.min.css')}" />
        
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_JqueryUI_V1_11_4,'jquery-ui-1.11.4.custom/jquery-ui.css')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_AddOn_CSS_V3_3_2, 'build.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_AddOn_CSS_V3_3_2, '/bower_components/Font-Awesome/css/font-awesome.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_JS_AddOn_CSS_V3_3_2, '/bower_components/Font-Awesome/css/font-awesome.min.css')}" />
        
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_JQuery_V1_9_1, 'js/jquery.min.js')}" />  
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_JQuery_V1_9_1, 'js/jquery-ui.min.js')}" />  
        
       <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Bootstrap_V3_3_5, 'dist/js/bootstrap.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_DataTables_V1_10_11, 'DataTables-1.10.11/media/js/jquery.dataTables.min.js')}" />

        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Plug_in_for_JQuery_V1_0_0, 'ASI_JS_plug_in_for_jQuery/dist/js/numericInput.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_JS_Plug_in_for_JQuery_V1_0_0, 'ASI_JS_plug_in_for_jQuery/dist/js/CurrencyUtil.js')}" />
        
        <style type="text/css">
            div.hid {display: none;}
            
            /* highlight results */ 
            .ui-autocomplete span.hl_results {
            background-color: #ffff66;
            }
            
            /* loading - the AJAX indicator */
            .ui-autocomplete-loading {
            background: white url('/img/loading.gif') right center no-repeat;
            }
            
            
            .ui-autocomplete-input{ 
            //border-left: 3px solid darkred !important;    
            }
            
            .ui-autocomplete {
            height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            overflow:auto;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
            left: 0;
            }
            /* IE 6 doesn't support max-height
            * we use height instead, but this forces the menu to always be this tall
            */
            *html .ui-autocomplete {
            height: 200x;
            }
            
            .bs.panel-heading.div-size {
            border-radius: 10px;
            }
            
            body {
            font-family: Arial;
            font-size: 9pt;
            }
            
            th { 
            white-space: nowrap; 
            }  
            
            .required {
               border-left: 3px solid darkred !important;  
            }
            
            .ui-helper-hidden-accessible { display:none !important;} 
            
            .ui-helper-hidden-accessible { position: absolute; left:-999em !important;}
            input:-moz-read-only { /* For Firefox */
            background-color: Gainsboro;
            }
            
            input:read-only {
            background-color: Gainsboro;
            }
            
        </style>
        
        <script type="text/javascript">
        
        $j = jQuery.noConflict();
        
        var RecordTypeName = null;
        var headerId = null;
        var FiscalYearFilter = null;
        var exchangeRate = null;
        
        //List auto-complete display 
        var Budgets = [];
        var ACCodes = [];
        var Customers = [];
        var VenueWhere=[];
        var APType=[];
        var APCategory=[];
        var APCodes = [];
        var SubBrands = [];
        var subLedgers = [];
        
        //Record Type
        var CustomerTypeName = null;
        var SBBrandTypeName = null;
        var subLedgerTypeName = null;
        var ACCodeTypeName = null;
        var APCodeTypeName = null;
        var SQLstatement=null;
        var resultTable ;
        var sheet;
        var returnURL;
       
        var avamonth=null;
        var monthDiff = null; 
        var resultTable = null;
        var info = null;
        var datatableILength = 100;
        
        window.onload =  function(){
            returnURL = gup('retURL');
        };
        
        function readOnlyFunction(){
            //console.log('readOnlyFunction');
            $j('.ReadOnlyCls').each(function() {
                $j(this).attr('readonly','readonly');
            });
            
        }
        
        function gup( name ){  //this function just grabs HTTP params by name
            
            name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]"); 
            var regexS = "[\\?&]"+name+"=([^&#]*)"; 
            var regex = new RegExp( regexS ); 
            var results = regex.exec( window.location.href );
            if( results == null )    return ""; 
            else    return results[1];}
        
        
        function stopRKey(evt) {
            var evt = (evt) ? evt : ((event) ? event : null);
            var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
            if ((evt.keyCode == 13) && (node.type=="text")) {return false;}
        }
        
        document.onkeypress = stopRKey; 
        
        
        function htmlEncode( input ) {
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
        };
        
        
        $j(document).on('mousemove', function(e){
            $j('#loadtext').css({
                left:  e.pageX,
                top:   e.pageY
            });
        });
        

        function disableButton() {
            $j('#divForm .btn').button('loading');
        } 
        
        
        function initPlanItemPage(config) {
            if (config) {
                SQLstatement=config.SQLstatement;
                RecordTypeName=config.RecordTypeName;
                CustomerTypeName=config.CustomerTypeName;
                SBBrandTypeName=config.SBBrandTypeName;
                ACCodeTypeName=config.ACCodeTypeName;
                APCodeTypeName=config.APCodeTypeName;
                subLedgerTypeName=config.subLedgerTypeName;
                avamonth=config.avamonth;
                monthDiff=config.monthDiff;
                headerId = config.headerId;
                FiscalYearFilter = config.FiscalYearFilter;
                exchangeRate = config.exchangeRate;
                setResultTable(true);
               retrieveSubLedger();
                retrieveSBBrand();
               
                retrieveAPCode();
                retrieveCustomer();
                //retrieveAPACCode();  //retrieveACCode();
            }   
        }      
        
        
        function setResultTable(newTable){
            var templength = "{!$Setup.ASI_MFM_Setting__c.ASI_MFM_KRPlan_No_Of_Row__c}";
            $j('[data-toggle="tooltip"]').tooltip(); 
            if(templength){
                datatableILength=templength;//console.log('Eb ! '+datatableILength );
            }
            resultTable = $j('#dt_LineItems').on( 'init.dt', function () {
            }).DataTable({
                "bDestroy":true,
                "bSearch":false,
                "dom": '<"top">irt<"bottom"p><"clear">',
                "bSort": false, 
                "bFilter": false, 
                "iDisplayLength":datatableILength,
                "bPaginate": true,
                "sPaginationType": "full_numbers",
                "columnDefs": [{
                    "targets": [ 0 ],
                    "searchable": false,
                    "orderable": false
                }],
                "fnDrawCallback": function() { 
                    $j('.totalcost').numericInput({ allowNegative: false  ,allowFloat: true });
                    $j('.monthly_input').numericInput({ allowNegative: false  ,allowFloat: true });
                    $j('.lookupCen input').change();
                    $j('.lookupCen1 input').change();
                    initalizeAutoCompleteComponent();
                    readOnlyFunction();
                }
            });
            $j('#dt_LineItems').on( 'page.dt', function () {
                
                info = resultTable.page.info();
                
                $j('#dt_LineItems').on("change", ".monthly_input input", function(event) {});
                
                if(info){
                    
                    $j('.monthly_input input').change();
                    $j('.lookupCen input').change();
                    initalizeAutoCompleteComponent();
                }                    
            } );
            info = resultTable.page.info();
            if(newTable==false){
                addRow(); 
            } 
        }
        

            
        function setTables(newTable){
            setResultTable(newTable);

        }
        
        function addRow(){
            resultTable.page('last').draw(false);        
        }
        
        
        function retrieveCustomer() {
            
            var whereClause =  ' WHERE (RecordType.DeveloperName = \'ASI_CRM_KR_Wholesaler\'  or RecordType.DeveloperName = \'ASI_CRM_KR_Venue\' )  '+SQLstatement;
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_KR_PlanManageAllController.findCustomers}','ASI_CRM_AccountsAdditionalField__c', whereClause 
                , callbackCustomer
                , { buffer: false,escape: true}
            );       
        }
        
        function callbackCustomer(result, event){
            if (event.status) {
                if (result) {
                    VenueWhere=[];
                    Customers = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        
                        var cu = new Object();
                        cu.label =  htmlEncode(result[i]["Name"]);
                        cu.value =  htmlEncode(result[i]["Id"]);
                        if(result[i]["ASI_CRM_CN_Address__c"]){
                            cu.desc = htmlEncode(result[i]["ASI_CRM_CN_Address__c"]);
                        }else{
                            cu.desc='';
                        }
                        
                        if(result[i]["ASI_CRM_CN_Phone_Number__c"]) 
                            cu.phone =htmlEncode(result[i]["ASI_CRM_CN_Phone_Number__c"]);
                        else cu.phone ='';
                       
                        Customers.push(cu);
                        if(result[i].RecordType.DeveloperName=='ASI_CRM_KR_Venue'){
                            VenueWhere.push(cu);
                        }
                    }
                }
            } else {
            }   
            initalizeAutoCompleteComponent();
        }
        
        
        //Sub-Brand
        function retrieveSBBrand() {
            var whereClause =   ' WHERE RecordType.DeveloperName = \''+ SBBrandTypeName + '\'  and  ASI_MFM_Active_for_MFM__c =true '
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_KR_PlanManageAllController.findSObjects}','ASI_MFM_Sub_brand__c', whereClause 
                , callbackSBBrand
                , {escape: true}
            );       
        }
        
        
           function callbackSBBrand(result, event){
            if (event.status) {
                if (result) {
                    SubBrands = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var sb = new Object();
                        sb.label =  htmlEncode(result[i]["Name"]);
                        sb.value =  htmlEncode(result[i]["Id"]);
                        SubBrands.push(sb);
                    }
                }
            } else {
            }   
            initalizeAutoCompleteComponent();
        }
        
        //sub ledger
        function retrieveSubLedger() {
            var whereClause =   ' WHERE RecordType.DeveloperName = \''+ subLedgerTypeName + '\' ';
            var statement='Id,Name,ASI_TnE_Branch_Channel_Desc__c ';
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_KR_PlanManageAllController.findList}','ASI_TnE_Branch_Channel__c',statement, whereClause 
                , callbackSubLedger
                , {escape: true}
            );       
        }
        
        
           function callbackSubLedger(result, event){
            if (event.status) {
                if (result) {
                    subLedgers = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        var sb = new Object();
                        sb.label =  htmlEncode(result[i]["Name"]);
                        sb.value =  htmlEncode(result[i]["Id"]); //
                        sb.desc =  htmlEncode(result[i]["ASI_TnE_Branch_Channel_Desc__c"]);
                        subLedgers.push(sb);
                    }
                }
            } else {
            }   
            initalizeAutoCompleteComponent();
        }
        
         //AP Code   
        function retrieveAPCode() {
            
            var whereClause =   ' WHERE RecordType.DeveloperName = \''+ APCodeTypeName + '\' and ASI_MFM_Inactive__c = false';
            var statement='Id,Name,ASI_MFM_AP_Category__c,ASI_MFM_AP_Type__c,ASI_MFM_AP_Code__c,ASI_MFM_PRPO_Needed__c ';
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ASI_MFM_KR_PlanManageAllController.findList}','ASI_MFM_AP_Code__c', statement, whereClause 
                , callbackAPCode
                , {escape: true}
            );       
        }
        
        function callbackAPCode(result, event){
            if (event.status) {
                if (result) {
                    APCategory=[];
                    APType=[];
                    APCodes = [];
                    var TempAPTypeList = [];
                    var TempAPcateList = [];
                    var size = result.length;
                    for (var i = 0; i < size; i++) {
                        //Put AP Code
                        var ap = new Object();
                        ap.label =  htmlEncode(result[i]["Name"]);
                        ap.value =  htmlEncode(result[i]["Id"]);
                        ap.aptype=  htmlEncode(result[i]["ASI_MFM_AP_Type__c"]);
                        ap.APCate=htmlEncode(result[i]["ASI_MFM_AP_Category__c"]);
                        
                        ap.PRPO_Needed=result[i]["ASI_MFM_PRPO_Needed__c"];
                        APCodes.push(ap);
                        
                        //AP Type
                        var at = new Object();
                        at.value =  htmlEncode(result[i]["ASI_MFM_AP_Type__c"]);
                        if(TempAPTypeList.indexOf(at.value)== -1 && at.value !== 'undefined'){
                            TempAPTypeList.push(at.value);
                            APType.push(at);
                        }
                        
                        //AP Category
                        var apc = new Object();
                        apc.value =  htmlEncode(result[i]["ASI_MFM_AP_Category__c"]);
                        
                        if(TempAPcateList.indexOf(apc.value)== -1 && apc.value!== 'undefined'){
                            TempAPcateList.push(apc.value);
                            APCategory.push(apc);
                        }
                        //console.log('AP Type : '+APType);
                    }
                    
                }
            } else {
            }   
            initalizeAutoCompleteComponent();
        }
        
        
        function initalizeAutoCompleteComponent() {
            //Customer 
            $j(".CustomerClass").autocomplete
            (
                {
                    source:
                    Customers,
                    response: function(event, ui)
                    {
                        if(ui.content.length===0)
                        { 
                            console.log("No result found");
                        }
                    },
                    minLength: 1,
                    autoFocus: true,
                    scroll: true,
                    change: function (event, ui) {
                        if (!ui.item) {
                            this.value = '';
                        }
                    },
                    select: function(event, ui)
                    {
                        $j(this).val(ui.item.label);
                        $j(this).next().next().children().val(ui.item.value);
                        event.preventDefault();
                    },
                    focus: function(event, ui)
                    {
                      //  $j(this).val(ui.item.label);
                        $j(".ui-autocomplete > li").attr("title", ui.item.phoe);
                        event.preventDefault();
                    }
                }
            ).focus(function() {
                $j(this).autocomplete("search", "");
            }
                   )
            .each(function() {
                $j(this).data('ui-autocomplete')._renderItem = function( ul, item ) {
                    return $j("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><span style='margin-right: 2px; float:right;'>" + item.desc + "</span><a>")  
                    .appendTo(ul); 
                };                        
            });
            
            //VenueWhere 
            $j(".VenueWhereClass").autocomplete
            (
                {
                    source:
                    VenueWhere,
                    response: function(event, ui)
                    {
                        if(ui.content.length===0)
                        { 
                            console.log("No result found");
                        }
                    },
                    minLength: 1,
                    autoFocus: true,
                    scroll: true,
                    change: function (event, ui) {
                        if (!ui.item) {
                            this.value = '';
                        }
                    },
                    select: function(event, ui)
                    {
                        $j(this).val(ui.item.label);
                        $j(this).next().next().children().val(ui.item.value);
                        event.preventDefault();
                    },
                    focus: function(event, ui)
                    {
                      //  $j(this).val(ui.item.label);
                        $j(".ui-autocomplete > li").attr("title", ui.item.phoe);
                        event.preventDefault();
                    }
                }
            ).focus(function() {
                
                $j(this).autocomplete("search", "");
            }
                   )
            .each(function() {
                $j(this).data('ui-autocomplete')._renderItem = function( ul, item ) {
                    return $j("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><span style='margin-right: 2px; float:right;'>" + item.desc + "</span><a>")  
                    .appendTo(ul); 
                };                        
            });
            
            
            
            // SuB-Brand
            $j(".SubBrandClass").autocomplete({
                source: 
                SubBrands,
                response: function(event, ui) 
                {
                    if(ui.content.length===0){ 
                        console.log("No result found");
                    }
                }
                ,
                minLength: 0,
                autoFocus: true,
                scroll: true,
                change: function (event, ui) {
                    if (!ui.item) {
                        this.value = '';
                        console.log('remove!!!');
                    }
                },
                select: function(event, ui){
                    $j(this).val(ui.item.label);
                    $j(this).next().next().children().val(ui.item.value);                
                    event.preventDefault();
                },
                focus: function(event, ui){
                    //$j(this).val(ui.item.label);
                    event.preventDefault();
                }  
                
            })
            .focus(function () {
                $j(this).autocomplete("search", "");
            })
            
            
            
            
            // Sub Ledger
            $j(".SubLedgerClass").autocomplete({
                source: 
                subLedgers,
                response: function(event, ui) 
                {
                    if(ui.content.length===0){ 
                        console.log("No result found");
                    }
                }
                ,
                minLength: 0,
                autoFocus: true,
                scroll: true,
                change: function (event, ui) {
                    if (!ui.item) {
                        this.value = '';
                    }
                },
                select: function(event, ui){
                    $j(this).val(ui.item.label);
                    $j(this).next().next().children().val(ui.item.value);                
                    event.preventDefault();
                },
                focus: function(event, ui){
                    //$j(this).val(ui.item.label);
                    event.preventDefault();
                }  
                
            })
            .focus(function () {
                $j(this).autocomplete("search", "");
            }).each(function() {
                $j(this).data('ui-autocomplete')._renderItem = function( ul, item ) {
                    return $j("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><span style='margin-right: 2px; float:right;'>" + item.desc + "</span><a>")  
                    .appendTo(ul); 
                };                        
            });
            
                 
             
            //**************************AP Type **************************
            $j(".apTypeClass").autocomplete({
                source: 
                APType,
                response: function(event, ui) 
                {
                    if(ui.content.length===0){ 
                        console.log("No result found");
                    }
                }, minLength: 0,
                autoFocus: true,
                scroll: true,
                change: function (event, ui) {
                    if (!ui.item) {
                        this.value = '';
                    }
                    //Clear AP Category and AP Code Name and Id                            : console.log($j(this).parent().parent().next().next().children().next().children().next().children().val());  console.log($j(this).parent().parent().next().next().children().val());      
                     $j(this).parent().parent().next().children().children().val('');//AP Category  $j(this).parent().parent().next().children().val('');
                     $j(this).parent().parent().next().next().children().next().children().val('');//AP Code Name :   $j(this).parent().parent().next().next().children().val(''); 
                    $j(this).parent().parent().next().next().children().next().children().next().children().val('');// AP Code Id   :  $j(this).parent().parent().next().next().children().next().children().val('');
                $j(this).parent().parent().next().next().next().html('<div class="checkbox checkbox-primary"><input type="checkbox" disabled="disabled" /><label></label></div>');
                },
                focus: function(event, ui){
                    $j(this).val(ui.item.label);
                    event.preventDefault();
                }  
             }).focus(function () {
                $j(this).autocomplete("search", "");
            })
            
            // **************************  AP Category **************************
            $j(".apcategoryClass").autocomplete({
                source: 
                APCodes,
                search: function(event, ui) {
                    var currentid = $j(this).attr('data-id');
                    var sValue = $j('#APType_manageAll_' + currentid + '_input input').val();
                    var aSearch = [];
                     $j(APCodes).each(function(iIndex, sElement) {
                         if(sElement.aptype==sValue){
                             if(aSearch.indexOf(sElement.APCate)== -1){
                                 aSearch.push(sElement.APCate);
                             }
                         }
                        });    
                        $j(this).autocomplete('option', 'source', aSearch);
                    
                },
                response: function(event, ui) 
                {
                    if(ui.content.length===0){ 
                        console.log("No result found");
                    }
                }, minLength: 0,
                autoFocus: true,
                scroll: true,
                change: function (event, ui) {
                    if (!ui.item) {
                        this.label = '';
                    }
                    
                    //Clear AP Code Name and Id             console.log($j(this).parent().parent().next().children().next().children().val()+ 'AP Category :  '+$j(this).parent().parent().next().children().next().children().next().children().val());
                    $j(this).parent().parent().next().children().next().children().val(''); //Clear AP Code Name
                    $j(this).parent().parent().next().children().next().children().next().children().val(''); //Clear AP Code Id   $j(this).parent().parent().next().children().val(''); 
                    $j(this).parent().parent().next().next().html('<div class="checkbox checkbox-primary"><input type="checkbox" disabled="disabled" /><label></label></div>')
                },
                focus: function(event, ui){
                    $j(this).val(ui.item.label);
                    event.preventDefault();
                }  
             }).focus(function () {
                $j(this).autocomplete("search", "");
            })
            
            
            //**************************  AP Code  **************************
            $j(".apCodeClass").autocomplete
            (
                {
                    source:
                    APCodes,
                    search: function(event, ui) {
                        var currentid = $j(this).attr('data-id');
                        var APtype = $j('#APType_manageAll_' + currentid + '_input input').val();
                        var APcate = $j('#APCategory_manageAll_' + currentid + '_input input').val();
                        var aSearch = [];
                        var templist=[];
                        $j(APCodes).each(function(iIndex, sElement) {
                            if(sElement.aptype==APtype && sElement.APCate==APcate ){
                                if(templist.indexOf(sElement.label)== -1){
                                    templist.push(sElement.label);
                                    aSearch.push(sElement);
                                }
                            }
                        });    
                        $j(this).autocomplete('option', 'source', aSearch);
                        
                    },
                    response: function(event, ui)
                    {
                        if(ui.content.length===0)
                        { 
                            console.log("AP Code: No result found");
                        }
                    },
                    minLength: 0,
                    autoFocus: true,
                    scroll: true,
                    change: function (event, ui) {
                        if (!ui.item) {
                            this.value = '';
                            $j(this).parent().parent().next().html('<div class="checkbox checkbox-primary"><input type="checkbox" disabled="disabled" /><label></label></div>');
                        }
                        
                    },
                    select: function(event, ui)
                    {
                        $j(this).val(ui.item.label);
                        $j(this).next().next().children().val(ui.item.value);
                        var checkboxHTML='';
                        if(ui.item.PRPO_Needed){
                            checkboxHTML='<div class="checkbox checkbox-primary"><input type="checkbox" checked="checked" disabled="disabled" /><label></label></div>';//$j(this).parent().next().val(ui.item.value); children()//console.log($j(this).parent().next().children().val()+'change'+$j(this).parent().next().html());
                        }else{
                            checkboxHTML='<div class="checkbox checkbox-primary"><input type="checkbox" disabled="disabled" /><label></label></div>';
                        }
                        $j(this).parent().parent().next().html(checkboxHTML);
                        event.preventDefault();
                    },
                    focus: function(event, ui)
                    { 
                        event.preventDefault();
                    }
                }
            ).focus(function(){
                $j(this).autocomplete("search", "");
            }).each(function() {
                
                $j(this).data('ui-autocomplete')._renderItem = function( ul, item ) {
                    if(item.PRPO_Needed){
                        return $j("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><span style='margin-right: 0.5px; float:right;'>PR/PO Needed</span><a>").appendTo(ul); 
                    }else{
                        return $j("<li>").html("<a style='margin-left: 2px;'><span><strong>" + item.label + "</strong></span><a>").appendTo(ul); 
                    }
                };                        
            });            
        }
        
        
        //Re-calulate All line Amount
        function Recalulate(){
            //resultTable =  table.rows('.totalcost').data();
            resultTable.rows().every( function ( rowIdx, tableLoop, rowLoop ) {
                
                   /* $j('.totalcost').each(function() {
                        var currentid = $j(this).attr('data-id');
                        AmountRender(currentid);
                    });
                    */
                    
                   var rowNode = this.node();
 
                $j(rowNode).find("td.PlanAmount div[id^=TotalAmount_] input.totalcost").each(function (){
         
                          //var cellData = $j(this).val();
                          //console.log("test:" + cellData);
                          var currentid = $j(this).attr('data-id');
                          if(currentid!=null)
                            AmountRender(currentid);                          
                });
            
            });
        }
        
        function AmountRender(Id){// If change 'Amount'
        console.log('change Amount !'+Id);
            var count=0;
            console.log('change val !' + $j('#TotalAmount_' + Id + '_input input').val());
            if(!isNaN($j('#TotalAmount_' + Id + '_input input').val()) && parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$,]+/g,""))>=0){
                var monthAmt=(Math.floor(parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$,]+/g,""))/(monthDiff))).toFixed(2);
                console.log('monthAmt:   '+formatNumber(monthAmt));
                var count=0;
                // Add all remaining amount to last monthly amount
                var lastamount=(parseFloat($j('#TotalAmount_' + Id + '_input input').val().replace(/[$,]+/g,""))-(monthDiff-1)*monthAmt).toFixed(2); 
                $j('#monthly_' + Id + '_input input').each(function() {
                    if (!$j(this).is('[readonly]')) { 
                        count++;
                        if(count!==monthDiff){
                            $j(this).val(monthAmt);
                        }
                        //The last Amount
                        if(count==monthDiff){ 
                            $j(this).val(lastamount);
                        }
                    }else{
                        $j(this).val(0);
                    }
                    
                });
            
            }
        }
        
        function MonthRender(Id){ // If change month amount        console.log('enter MonthRender  ');
            var TotalAmt = 0;
            //Calculate total amount
            $j('#monthly_' + Id + '_input input').each(function() {

                TotalAmt=(Number(TotalAmt)+Number($j(this).val().replace(/[$,]+/g,""))).toFixed(2);
            });
            //Set readonly field to 0
            $j('#monthly_' + Id + '_input input').each(function() {
                if ($j(this).is('[readonly]')) { 
                    $j(this).val(0);
                }
            });
            //Set Total AMOUNT
            if(TotalAmt>0){
                console.log('MonthRender: '+TotalAmt);
                $j('#TotalAmount_' + Id + '_input input').val(TotalAmt);
            }
        }
        
    
        
        function redirectBack(){
            window.location.href = '/' + returnURL;
        }
        
        function formatNumber(n) {
                return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        $j(document).ready(function() {
            initPlanItemPage({
                headerId: '{!header.Id}',
                FiscalYearFilter: '{!header.ASI_MFM_Fiscal_year__c}',
                exchangeRate : '{!header.ASI_MFM_Exchange_Rate__c}',
                RecordTypeName: '{!header.RecordType.DeveloperName}',
                ACCodeTypeName:'{!AC_Code_RecordType_Developer_Name}',
                APCodeTypeName:'{!AP_Code_RecordType_Developer_Name}',
                SBBrandTypeName:'{!Sub_brand_RecordType_Developer_Name}',
                subLedgerTypeName:'{!subLedgerRecordType}',
                CustomerTypeName:'{!Customer_Developer_Name}',
                monthDiff:'{!monthDiff}',
                avamonth:'{!avamonth}',
                SQLstatement:'{!SQLstatement}'
            });
            
        });
        
        
        </script>
        
        
        
    </head>
    <apex:form id="objectForm" styleclass="objectFormCls"  >
        <div id="divForm" class="bs container-fluid">
            <div class="bs row" style="margin:0;">
                <div class="bs col-xs-5"> 
                    
                    
                    <apex:outputPanel styleclass="bs panel-primary" id="paymentDetailPanel">
                        <div class="bs panel-heading div-size">
                            <h3 class="bs panel-title">Plan Details</h3>
                        </div>
                        <div class="bs panel-body">
                            <div class="bs table-responsive" >          
                                <table class="bs table table-condensed">
                                    <tbody>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.Name.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputLink value="{!LEFT($Api.Partner_Server_URL_140, FIND('.com/',$Api.Partner_Server_URL_140)+3)}/{!Header.ID}" target="_blank">
                                                <apex:outputField value="{!Header.Name}"></apex:outputField>
                                                </apex:outputLink>
                                            </td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Plan_Raised_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Plan_Raised_Date__c}"></apex:outputField></td>                                                
                                                
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Start_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Start_Date__c}"></apex:outputField></td>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_End_Date__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_End_Date__c}" ></apex:outputField></td>                              
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Project_Code__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Project_Code__c}"></apex:outputField></td>
                                            
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Promotion_Code__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Promotion_Code__c}"></apex:outputField></td>
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Plan_Amount__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Plan_Amount__c}"></apex:outputField></td> 
                                            
                                            <td><apex:outputLabel value="{!$ObjectType.ASI_MFM_Plan__c.Fields.ASI_MFM_Status__c.Label}" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ASI_MFM_Status__c}"></apex:outputField></td>                                          
                                            
                                        </tr>
                                        <tr>
                                            <td><apex:outputLabel value="Created By" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.CreatedById}"></apex:outputField></td> 
                                            <td><apex:outputLabel value="Owner" styleclass="control-label" style="color: #4a4a56; font-size: 9pt; vertical-align: middle; padding-right: 10px;"/></td>
                                            <td><apex:outputField value="{!Header.ownerId}"></apex:outputField></td>                                          
                                        </tr>      
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        
                    </apex:outputPanel> 
                    </div>
                    
                    <div class="bs col-xs-12"> 
                    <apex:outputPanel styleclass="bs panel-primary" id="LinePanel">
                        <div class="bs panel-heading div-size" >
                            <h3 class="bs panel-title">Plan Line Items </h3>
                        </div>  
                        <div class="bs panel-body">
                            
                          <div class="alert alert-danger fade in" style="{!IF(UpsertPermission,'display:none;','')}"  id="SaveFailPart">
                              
                              <strong>Error,Can not Save!</strong><br/>
                                <apex:outputText escape="false" value="{!Msg}"/>
                            </div>  
                            
                            
                            <div class="alert alert-success fade in" style="{!IF(SaveSuccess,'','display:none;')}" id="SaveSuccessPart">
                                <strong>Quick Save Success!</strong>
                                <apex:outputText escape="false" value="{!Msg}"/>
                            </div>    
                            
                            
                            <div class='bs wrapper text-center' id='bs toolbar' >
                                <div class="bs btn-group " role="group" >
                                    
                                    <apex:commandLink styleClass="bs btn btn-default btn-size" 
                                                      value="Save"
                                                      style="font-weight: bold"
                                                      action="{!saveItems}"
                                                      status="ActionStatus"
                                                      onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                      oncomplete="console.log('Save Done');setTables(true);"
                                                      reRender="LinePanel,SaveFailPart,SaveSuccessPart">
                                    <apex:param name="IS_QUICK_SAVE" value="false"/>
                                    </apex:commandLink>
                                    </div>&nbsp;
                                    <div class="bs btn-group " role="group" >
                                        <apex:commandLink styleClass="bs btn btn-default btn-size"
                                                            style="font-weight: bold"
                                                            value="Quick Save"
                                                            action="{!saveItems}"
                                                            status="ActionStatus"
                                                            onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                            oncomplete="console.log('Quick Save Done');setTables(true);"
                                                            reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                            html-data-loading-text="Loading..." >
                                        <apex:param name="IS_QUICK_SAVE" value="true"/>
                                        </apex:commandLink>
                                    </div>&nbsp;
                                
                                    <div class="bs btn-group " role="group" >
                                        
                                        <apex:commandButton styleClass="bs btn btn-default btn-size"
                                                            style="font-weight: bold"
                                                            value="Cancel"
                                                            action="{!cancel}" 
                                                            oncomplete="redirectBack()"
                                                            html-data-loading-text="Loading..."
                                                            html-formnovalidate="formnovalidate"/>
                                    </div>
                            </div>
                            <div class="bs table-responsive"> 
                                <apex:commandButton styleClass="btn btn-success" value="Add New Plan Line" action="{!addLineItem}" onComplete="console.log('Add Row');  setTables(false);"
                                                    onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                    html-formnovalidate="formnovalidate" reRender="LinePanel" rendered="{!IF(header.ASI_MFM_Status__c=='Draft', true, false)}"  status="ActionStatus" ></apex:commandButton>
                                   &nbsp;                 
                                <apex:commandButton styleClass="btn btn-info" title="Recalculate Amount to Monthly Amount"  value="Recalculate" action="{!Recalculate}" onComplete=" setTables(false);"
                                                    onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                    html-formnovalidate="formnovalidate" reRender="LinePanel"  status="ActionStatus" ></apex:commandButton>
                                <!--
                                &nbsp;
                                <button type="button" data-toggle="tooltip"
                                        title="Recalculate Amount to monthly amount." style="{!if(OR(Header.ASI_MFM_Status__c='Approved',Header.ASI_MFM_Status__c='Closed'),'display:none','')}"
                                        class="btn btn-info" onclick="Recalulate();">Recalculate</button>
                          -->
                                
                                <table id="dt_LineItems" class="hover responsive no-wrap compact" style="width: 100%;" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th> </th>
                                            <th> </th>
                                           
                                            <th>Sub Brand<span class="thtitle" >*</span></th>
                                            <th>Sub Ledger<span class="thtitle" >*</span></th> <!--2015-12-21-->
                                            <th>AP Type<span class="thtitle" >*</span></th> 
                                            <th>AP Category<span class="thtitle" >*</span></th>
                                            <th>AP Code<span class="thtitle" >*</span></th> <!---<th>A/C Code<span class="thtitle" >*</span></th>--->
                                            <th>PR/PO <br/> Needed?</th>
                                             <th>Customer</th><!--<span class="thtitle" > (Beneficiary)*</span>--> 
                                            <th>Venue (Where)</th>
                                            <th>Description</th>
                                            <th>Amount</th>
                                            <th>Jul(P1)</th>
                                            <th>Aug(P2)</th>
                                            <th>Sep(P3)</th>
                                            <th>Oct(P4)</th>
                                            <th>Nov(P5)</th>
                                            <th>Dec(P6)</th>
                                            <th>Jan(P7)</th>
                                            <th>Feb(P8)</th>
                                            <th>Mar(P9)</th>
                                            <th>Apr(P10)</th>
                                            <th>May(P11)</th>
                                            <th>Jun(P12)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        
                                        <apex:variable value="{!0}" var="i"/>
                                        
                                        <apex:repeat value="{!allLineItemMap}" var="PId">
                                            
                                            <apex:variable var="i" value="{!i+1}"/>
                                            
                                            <tr style="{!IF(allLineItemMap[PId].isProcess == false, "color: #fff; background: #f2dede", "" )}">
                                                <td> <apex:commandLink styleClass="bs btn btn-default btn-round pull-left btn-xs"
                                                                      style="border: none;background-color: transparent;"
                                                                      reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                                      action="{!cloneLine}"
                                                                      onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                                      status="ActionStatus"
                                                                      onComplete="console.log('Clone Row'); setTables(false);"                                                        
                                                                      html-formnovalidate="formnovalidate" 
                                                                      
                                                                      title="Clone line {!i}"
                                                                      html-data-loading-text="Loading..." >
                                                    <span class="bs glyphicon glyphicon-duplicate"  style="color:black;font-size: 20px;"></span>
                                                    <apex:param name="PARAM_clone_ID" value="{!PId}" />
                                                    </apex:commandLink>
                                                    <!--rendered="{!if(allLineItemMap[PId].ReadOnly,false,true)}"
                                                    <apex:outputLabel style="border: none;background-color: transparent;"
                                                                      styleClass="bs btn btn-default btn-round pull-left btn-sm"
                                                                      rendered="{!if(allLineItemMap[PId].ReadOnly,true,false)}">
                                                        <span class="bs glyphicon glyphicon-duplicate"  style="color:black;font-size: 20px;" > </span>
                                                    </apex:outputLabel> 
                                                    -->
                                                    
                                                </td>
                                                <td>
                                                    <apex:commandLink styleClass="bs btn btn-default btn-round pull-left btn-xs "
                                                                      style="border: none;background-color: transparent;"
                                                                      reRender="LinePanel,SaveFailPart,SaveSuccessPart"
                                                                      html-formnovalidate="formnovalidate" 
                                                                      action="{!removeLine}"
                                                                      onclick="resultTable.page.len( -1 ).draw(false); disableButton();"
                                                                      status="ActionStatus"
                                                                      title="Remove line {!i}"
                                                                      rendered="{!if(allLineItemMap[PId].ReadOnly,false,true)}"
                                                                      onComplete="console.log('Remove Row'); setTables(true);"                                                        
                                                                      html-data-loading-text="Loading..." >
                                                        <span class="bs glyphicon glyphicon-trash"  style="color:red;font-size: 20px;"></span>
                                                        <apex:param name="PARAM_Line_ID" value="{!PId}" />
                                                    </apex:commandLink>
                                                     <apex:outputLabel style="border: none;background-color: transparent;"
                                                                      styleClass="bs btn btn-default btn-round pull-left btn-sm"
                                                                      rendered="{!if(allLineItemMap[PId].ReadOnly,true,false)}">
                                                        <span class="bs glyphicon glyphicon-trash"  style="color:red;font-size: 20px;" > </span>
                                                    </apex:outputLabel> 
                                                    
                                                </td>
                                                
                                              
                                                
                                                <td class="lookupCen2">
                                                    <!-- SH 2019-06-25 -->
                                                    <div style="{!if(allLineItemMap[PId].SBReadOnly,'display:none','')}">
                                                        <apex:input value="{!allLineItemMap[PId].SubBrand}"  styleclass="SubBrandClass required" style="width: 12em; "/>
                                                        <div class="hid">
                                                            <apex:inputText value="{!allLineItemMap[PId].SubBrandId}" styleclass="value"/>
                                                        </div>
                                                    </div>                                                    
                                                    <div style="{!if(allLineItemMap[PId].SBReadOnly,'','display:none')}">
                                                        {!allLineItemMap[PId].SubBrand}
                                                    </div>
                                                    
                                                </td>
                                                
                                                <td class="lookupCen2">
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'display:none','')}">
                                                        <apex:input value="{!allLineItemMap[PId].subLedger}" styleclass="SubLedgerClass required" style="width: 5em; "  />
                                                        <div class="hid">
                                                            <apex:inputText value="{!allLineItemMap[PId].subLedgerId}" styleclass="value"/>
                                                        </div>
                                                    </div>
                                                     <div style="{!if(allLineItemMap[PId].ReadOnly,'','display:none')}">
                                                        {!allLineItemMap[PId].subLedger}
                                                    </div>
                                                </td>
                                                
                                                <td  id="APType_manageAll_{!PId}_input">
                                                    <div style="{!if(allLineItemMap[PId].APReadOnly,'','display:none')}">
                                                        {!allLineItemMap[PId].linetems.ASI_MFM_AP_Type__c}
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].APReadOnly,'display:none','')}">
                                                        <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_AP_Type__c}" style="width: 8em; "  styleclass="apTypeClass required" html-data-id="{!PId}" />
                                                    </div>
                                                    
                                                </td>
                                                
                                                <td id="APCategory_manageAll_{!PId}_input" >
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'display:none','')}">
                                                        <apex:input value="{!allLineItemMap[PId].linetems.ASI_MFM_AP_Category__c}" style="width: 13em; " styleclass="apcategoryClass required " html-data-id="{!PId}" />
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'','display:none')}">
                                                       {!allLineItemMap[PId].linetems.ASI_MFM_AP_Category__c}
                                                    </div>
                                                </td>
                                                
                                                <td class="lookupCen" id="APCode_manageAll_{!PId}_input" >
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'','display:none')}">
                                                       {!allLineItemMap[PId].APCode}
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'display:none','')}">
                                                        <apex:input value="{!allLineItemMap[PId].APCode}" style="width: 15em; " styleclass="apCodeClass required" html-data-id="{!PId}" />
                                                        <div class="hid" >
                                                            <apex:inputText value="{!allLineItemMap[PId].APCodeId}" styleclass="value"/>
                                                        </div>
                                                    </div>
                                                    
                                                </td>
                                                <td  style="text-align: center;" >
                                                    <div style="{!IF(allLineItemMap[PId].PRPONeeded,'display:none;','')} ">
                                                        <div class="checkbox checkbox-primary">
                                                            <input type="checkbox" disabled="disabled"  />
                                                            <label></label>
                                                        </div>
                                                    </div>  
                                                    <div style="{!IF(allLineItemMap[PId].PRPONeeded,'','display:none;')}" >
                                                        <div class="checkbox checkbox-primary">
                                                            <input type="checkbox" checked="checked" disabled="disabled" />
                                                            <label></label>
                                                        </div>
                                                    </div>  
                                                </td>
                                                <td class="lookupCen1">
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'display:none','')}">
                                                        <apex:inputText value="{!allLineItemMap[PId].Customer}"  styleclass="CustomerClass" />
                                                        <div class="hid">
                                                            <apex:inputText value="{!allLineItemMap[PId].CustomerId}" styleclass="value"/>
                                                        </div>
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'','display:none')}">
                                                        {!allLineItemMap[PId].Customer}
                                                    </div>
                                                </td> 
                                                
                                                <td class="lookupCen1">
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'display:none','')}">
                                                        <apex:inputText value="{!allLineItemMap[PId].VenueWhere}"  styleclass="VenueWhereClass" style="width: 10em; "/>
                                                        <div class="hid">
                                                            <apex:inputText value="{!allLineItemMap[PId].VenueWhereId}" styleclass="value"/>
                                                        </div>
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'','display:none')}">
                                                        {!allLineItemMap[PId].VenueWhere}
                                                    </div>
                                                </td>
                                                
                                                <td class="Description">
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'display:none','')}">
                                                        <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_List_Item_Description__c}" style="width: 10em; " ></apex:inputField>
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].ReadOnly,'','display:none')}">
                                                        {!allLineItemMap[PId].linetems.ASI_MFM_List_Item_Description__c}
                                                    </div>
                                                </td>
                                                <!---
                                                <td class="PlanAmount"   id="TotalAmount_{!PId}_input"  >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Total_Cost__c}" html-data-id="{!PId}"  styleClass="totalcost required " style="white-space: pre-wrap; width: 10em; " onchange="AmountRender('{!PId}');" ></apex:inputField> 
                                                </td>
                                                --->
                                                
                                                 <td class="PlanAmount"    >
                                                      <div style="{!if(allLineItemMap[PId].AmountReadOnly,'','display:none')}">
                                                          <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Total_Cost__c}" html-data-id="{!PId}" style="white-space: pre-wrap; width: 10em; " styleClass="ReadOnlyCls"  ></apex:inputField> 
                                                    </div>
                                                    <div style="{!if(allLineItemMap[PId].AmountReadOnly,'display:none','')}"  id="TotalAmount_{!PId}_input" >
                                                        <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Total_Cost__c}" html-data-id="{!PId}"  styleClass="totalcost required " style="white-space: pre-wrap; width: 10em; " onchange="AmountRender('{!PId}');" ></apex:inputField> 
                                                    </div>
                                                   
                                                </td>
                                                
                                                
                                                 <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_1_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"   rendered="{!if(allLineItemMap[PId].AmountEditList[0],false,true)}" ></apex:inputField>
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_1_Cost__c}" style="white-space: pre-wrap; width: 6em; "  onchange="MonthRender('{!PId}');" rendered="{!if(allLineItemMap[PId].AmountEditList[0],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    
                                                   <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_2_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls"
                                                                    rendered="{!if(allLineItemMap[PId].AmountEditList[1],false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_2_Cost__c}" style="white-space: pre-wrap; width: 6em; "  onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[1],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input" id="monthly_{!PId}_input">
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_3_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[2],false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_3_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[2],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                     <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_4_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"  
                                                                      rendered="{!if(allLineItemMap[PId].AmountEditList[3],false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_4_Cost__c}" style="white-space: pre-wrap; width: 6em; "     onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[3],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" > 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_5_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[4],false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_5_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[4],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_6_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls" 
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[5],false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_6_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[5],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_7_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[6],false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_7_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[6],true,false)}"></apex:inputField> 
                                                </td> 
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_8_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls"  
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[7],false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_8_Cost__c}" style="white-space: pre-wrap; width: 6em; "    onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[7],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_9_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[8],false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_9_Cost__c}" style="white-space: pre-wrap; width: 6em; "    onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[8],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_10_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[9],false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_10_Cost__c}" style="white-space: pre-wrap; width: 6em; "  onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[9],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_11_Cost__c}" style="white-space: pre-wrap; width: 6em; "   styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[10],false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_11_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[10],true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_12_Cost__c}" style="white-space: pre-wrap; width: 6em; "   styleClass="ReadOnlyCls"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[11],false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_12_Cost__c}" style="white-space: pre-wrap; width: 6em; "    onchange="MonthRender('{!PId}');"
                                                                     rendered="{!if(allLineItemMap[PId].AmountEditList[11],true,false)}"></apex:inputField> 
                                                </td>
                                                
                                                <!---
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_1_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"   rendered="{!if(if(CrossYear,startMonth<=7,and(startMonth<=7,EndMonth>=7)),false,true)}" ></apex:inputField>
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_1_Cost__c}" style="white-space: pre-wrap; width: 6em; "  onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,startMonth<=7,and(startMonth<=7,EndMonth>=7)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    
                                                   <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_2_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls"  rendered="{!if(if(CrossYear,startMonth<=8,and(startMonth<=8,EndMonth>=8)),false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_2_Cost__c}" style="white-space: pre-wrap; width: 6em; "  onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,startMonth<=8,and(startMonth<=8,EndMonth>=8)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input" id="monthly_{!PId}_input">
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_3_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"   rendered="{!if(if(CrossYear,startMonth<=9,and(startMonth<=9,EndMonth>=9)),false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_3_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,startMonth<=9,and(startMonth<=9,EndMonth>=9)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                     <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_4_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"   rendered="{!if(if(CrossYear,startMonth<=10,and(startMonth<=10,EndMonth>=10)),false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_4_Cost__c}" style="white-space: pre-wrap; width: 6em; "     onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,startMonth<=10,and(startMonth<=10,EndMonth>=10)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" > 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_5_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"  rendered="{!if(if(CrossYear,startMonth<=11,and(startMonth<=11,EndMonth>=11)),false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_5_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,startMonth<=11,and(startMonth<=11,EndMonth>=11)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"   id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_6_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls"  rendered="{!if(if(CrossYear,startMonth<=12,and(startMonth<=12,EndMonth>=12)),false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_6_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,startMonth<=12,and(startMonth<=12,EndMonth>=12)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_7_Cost__c}" style="white-space: pre-wrap; width: 6em; " styleClass="ReadOnlyCls" rendered="{!if(if(CrossYear,EndMonth>=1,and(startMonth<=1,EndMonth>=1)),false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_7_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,EndMonth>=1,and(startMonth<=1,EndMonth>=1)),true,false)}"></apex:inputField> 
                                                </td> 
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_8_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls"   rendered="{!if(if(CrossYear,EndMonth>=2,and(startMonth<=2,EndMonth>=2)),false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_8_Cost__c}" style="white-space: pre-wrap; width: 6em; "    onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,EndMonth>=2,and(startMonth<=2,EndMonth>=2)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_9_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls" rendered="{!if(if(CrossYear,EndMonth>=3,and(startMonth<=3,EndMonth>=3)),false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_9_Cost__c}" style="white-space: pre-wrap; width: 6em; "    onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,EndMonth>=3,and(startMonth<=3,EndMonth>=3)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_10_Cost__c}" style="white-space: pre-wrap; width: 6em; "  styleClass="ReadOnlyCls" rendered="{!if(if(CrossYear,EndMonth>=4,and(startMonth<=4,EndMonth>=4)),false,true)}"   ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_10_Cost__c}" style="white-space: pre-wrap; width: 6em; "  onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,EndMonth>=4,and(startMonth<=4,EndMonth>=4)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_11_Cost__c}" style="white-space: pre-wrap; width: 6em; "   styleClass="ReadOnlyCls" rendered="{!if(if(CrossYear,EndMonth>=5,and(startMonth<=5,EndMonth>=5)),false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_11_Cost__c}" style="white-space: pre-wrap; width: 6em; "   onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,EndMonth>=5,and(startMonth<=5,EndMonth>=5)),true,false)}"></apex:inputField> 
                                                </td>
                                                <td class="monthly_input"  id="monthly_{!PId}_input" >
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_12_Cost__c}" style="white-space: pre-wrap; width: 6em; "   styleClass="ReadOnlyCls" rendered="{!if(if(CrossYear,EndMonth>=6,and(startMonth<=6,EndMonth>=6)),false,true)}"  ></apex:inputField> 
                                                    <apex:inputField value="{!allLineItemMap[PId].linetems.ASI_MFM_Month_12_Cost__c}" style="white-space: pre-wrap; width: 6em; "    onchange="MonthRender('{!PId}');" rendered="{!if(if(CrossYear,EndMonth>=6,and(startMonth<=6,EndMonth>=6)),true,false)}"></apex:inputField> 
                                                </td>
                                                --->

                                            </tr>
                                        </apex:repeat>
                                    </tbody> 
                                </table>
                            </div>
                        </div>
                    </apex:outputPanel>
                </div>
            </div>
        </div>
        
        <apex:actionstatus id="ActionStatus">
            <apex:facet name="start">
                <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb;
                                                                     height: 100%; width:100%; opacity:0.65;"> 
                    <div class="waitingHolder" id="loadtext" style="position: absolute;" align="left" valign="top">
                        &nbsp;&nbsp;&nbsp;
                        <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                        <span class="waitingDescription">Please Wait...</span>
                    </div>
                </div>
            </apex:facet>
        </apex:actionstatus>
    </apex:form>
</apex:page>