<!--
*********************************************************************************
* Name: ASI_TnE_TW_ManageClaimDetailPage
* Description: Controller class for managing all the related Claim Details.
*
* Version History
* Date             Developer               Comments
* ---------------  --------------------    --------------------------------------------------------------------------------
* 11/11/2015       Laputa                  Created
* 21/06/2016       Laputa : Hugo Cheung    Update. Add four fields
* 18/07/2016       Laputa : Hugo Cheung    Update. Add G&H Type field
* 25/07/2016       Laputa : Hugo Cheung    Update. Change ASI_TnE_Payment_Amount__c to ASI_TnE_TW_Payment_Amount__c
*********************************************************************************
-->
<apex:page standardController="ASI_TnE_ClaimHeader__c" extensions="ASI_TnE_TW_ManageClaimDetailController" sidebar="false">
    <head>
        <!-- ******************* SCRIPTS BLOCK ******************* -->
        <!-- ******************* SCRIPTS BLOCK ******************* -->
        <apex:stylesheet value="/sCSS/21.0/sprites/1297816277000/Theme3/default/gc/versioning.css" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_jQuery_Lib, '/libs/jquery/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_jQuery_Lib, '/styles/common.css')}" />

        <link href="{!URLFOR($Resource.ASI_CRM_jQuery_DataTables, 'css/jquery.dataTables.css')}" media="screen" rel="stylesheet" type="text/css" />

        <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_jQuery_Lib, '/libs/jquery/js/jquery-1.9.1.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_jQuery_Lib, '/libs/jquery/js/jquery-ui-1.10.3.custom.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_jQuery_DataTables, 'js/jquery.dataTables.js')}"/>

        <!-- this script first -->
        <script type="text/javascript">__sfdcSessionId = '{!$Api.Session_Id}';</script>
        <!-- this script second -->
        <script src="/soap/ajax/29.0/connection.js" type="text/javascript"></script>

        <script>
        //$ = jQuery.noConflict();

        var basicDataTableProperties = {
            "bDestroy":true,
            "bStateSave":true,
            "bSearch":false,
            "bFilter" : false,
            "iDisplayLength":1000,
            "bSort" : false,
            "bPaginate": false,
            "bScrollCollapse": true,
            "bJQueryUI": true
        };

        $(document).ready(
            function(){
                console.log("##INIT - Contract Builder Page");
                setTables();
                defaultDisabledFields();
            }
        );

        function setFocusOnLoad(){ }

        function defaultDisabledFields(){

        }

        function setMainTabTable(){
            var claimDetail_dataTableProperties = basicDataTableProperties;
            //debugger;
            // Normal View
            if({!isFinanceType==false} && {!isEmployeeView} != true){
                if('{!headerRecType}' == 'TW' && '{!claimHeader.ASI_TnE_Type__c}' != 'Corp Card'){
                    claimDetail_dataTableProperties["aoColumns"] = [
                        {"sTitle": "{!$Label.ASI_TnE_TW_Action}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Category__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Classification__c.Label}"},
                        {"sTitle": "{!$Label.ASI_TnE_TW_RC}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Date__c.Label}"},   
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Amount__c.Label}"}, 
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Currency__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_FX_Rate__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Total_Number_Pax__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Outlet__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Name_Company__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_JP_TnE_Expense_Classification__c.fields.ASI_TnE_GnH_Type__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Recipient_Type__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Details_of_Expense__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_GnH_Request__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_CAP_Plan__c.Label}"},
                        {"sTitle": "{!$Label.ASI_TnE_TW_CrossChargeTo}"}
                    ];
                } else if('{!headerRecType}' == 'TW') {
                    claimDetail_dataTableProperties["aoColumns"] = [
                        {"sTitle": "{!$Label.ASI_TnE_TW_Action}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Category__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Classification__c.Label}"},
                        {"sTitle": "{!$Label.ASI_TnE_TW_RC}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Date__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Amount__c.Label}"}, 
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Currency__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_FX_Rate__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Total_Number_Pax__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Outlet__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Name_Company__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_JP_TnE_Expense_Classification__c.fields.ASI_TnE_GnH_Type__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Recipient_Type__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Details_of_Expense__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_GnH_Request__c.Label}"},
                        {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_CAP_Plan__c.Label}"},
                        {"sTitle": "{!$Label.ASI_TnE_TW_CrossChargeTo}"}
                    ];
                }
                if('{!headerRecType}' == 'TW') {
                    console.log(claimDetail_dataTableProperties["aoColumns"]);
                    $("#claimdetail_Table_TW").dataTable(claimDetail_dataTableProperties);
                }
            }

            // Finance View
            if({!isFinanceType==true}){
                if({!isFinanceView==true}){
                        if ('{!headerRecType}' == 'TW'){
                            claimDetail_dataTableProperties["aoColumns"] = [
                                {"sTitle": "{!$Label.ASI_TnE_TW_Action}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Account_Number__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Category__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Classification__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_BU__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_A_C_Code__c.Label}"},
                                {"sTitle": "{!$Label.ASI_TnE_TW_CrossChargeTo}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_SG_Sub_Ledger__c.Label}"},
                                {"sTitle": "{!$Label.ASI_TnE_TW_RC}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Date__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Amount__c.Label}"}, 
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Currency__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_FX_Rate__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_TW_Payment_Amount__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Tax_Inclusive__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Tax_Rate__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Tax_Amount__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Taxable_Amount__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Total_Number_Pax__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Outlet__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Name_Company__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_JP_TnE_Expense_Classification__c.fields.ASI_TnE_GnH_Type__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Recipient_Type__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Details_of_Expense__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_GnH_Request__c.Label}"},
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_AP_Remarks__c.Label}"}, 
                                {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_CAP_Plan__c.Label}"}
                            ];
                    }
                    console.log(claimDetail_dataTableProperties["aoColumns"]);
                    $("#claimdetail_Finance_Table_TW").dataTable(claimDetail_dataTableProperties);
                }
            }
            //Employee View
            if({!isEmployeeView} == true){
                if('{!headerRecType}' == 'TW'){
                    if('{!claimHeader.ASI_TnE_Type__c}' != 'Corp Card') {
                        claimDetail_dataTableProperties["aoColumns"] = [
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Category__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Classification__c.Label}"},
                            {"sTitle": "{!$Label.ASI_TnE_TW_RC}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Date__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Amount__c.Label}"}, 
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Currency__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_FX_Rate__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_TW_Payment_Amount__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Total_Number_Pax__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Outlet__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Name_Company__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_JP_TnE_Expense_Classification__c.fields.ASI_TnE_GnH_Type__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Recipient_Type__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Details_of_Expense__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_GnH_Request__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_CAP_Plan__c.Label}"},
                            {"sTitle": "{!$Label.ASI_TnE_TW_CrossChargeTo}"}
                        ];
                    } else {
                        claimDetail_dataTableProperties["aoColumns"] = [
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Category__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Expense_Classification__c.Label}"},
                            {"sTitle": "{!$Label.ASI_TnE_TW_RC}"},                           
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Date__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Receipt_Amount__c.Label}"}, 
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Currency__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_FX_Rate__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_TW_Payment_Amount__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Total_Number_Pax__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Outlet__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Name_Company__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_JP_TnE_Expense_Classification__c.fields.ASI_TnE_GnH_Type__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Recipient_Type__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_Details_of_Expense__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_GnH_Request__c.Label}"},
                            {"sTitle": "{!$ObjectType.ASI_TnE_ClaimDetail__c.fields.ASI_TnE_CAP_Plan__c.Label}"},
                            {"sTitle": "{!$Label.ASI_TnE_TW_CrossChargeTo}"}
                        ];
                    }
                }
                console.log(claimDetail_dataTableProperties["aoColumns"]);
                $("#claimdetail_Table_EMP_VIEW").dataTable(claimDetail_dataTableProperties);
            }
        }

        function setTables(){
            //Set line item
            setMainTabTable();
            if({!isFinanceType && isFinanceView}) {
                $('#claimdetail_Finance_Table_TW > tbody  > tr').each(function() {
                    setCellReadOnly($(this).find("input.taxRate"));
                    setCellReadOnly($(this).find("span.taxableAmount"));
                    setCellReadOnly($(this).find("input.taxableAmount"));
                    var taxAmount = $(this).find("input.taxAmount").val();
                    taxAmount = normalizeFloat(taxAmount, [",",""]);
                    taxAmount = Math.round( taxAmount * 100) / 100
                    $(this).find("input.taxAmount").val(taxAmount);
                    //$(this).find("select.classification").trigger('change');
                });
            }
        }

        function setCellReadOnly(cpiRowCell) {

            cpiRowCell.prop("disabled",true);
            //cpiRowCell.val("");
            cpiRowCell.css("background", "LightGray");

        }
        // set Classifications Map for Picklist and readonly
        var fClassificationMap = {};
        var rOnlyClassificationMap = {};
        // Set the WHT % default value for TH only
        var fClassificationWHTMap = {};

        // Set Cross Charging Value for TW only
        var fClassificationCCMap = {};

        <apex:repeat value="{!fClassification}" var="catfKey">
            var temp_ClsList = [];
        <apex:repeat value="{!fClassification[catfKey]}" var="clsfKey">

            fClassificationWHTMap["{!clsfKey.id}"] = "{!clsfKey.ASI_TnE_WHT_Rate__c}";
            console.log(fClassificationWHTMap["{!clsfKey.id}"]);
            temp_ClsList.push("{!clsfKey.Id}~{!clsfKey.Name}");

            var temp_roList = [];
            if("{!clsfKey.ASI_TnE_Read_Only_Fields__c}" != '' && "{!clsfKey.ASI_TnE_Read_Only_Fields__c}" != null){
                var roFields = "{!clsfKey.ASI_TnE_Read_Only_Fields__c}";
                temp_roList = roFields.split(";").map(Function.prototype.call, String.prototype.trim);
            }

            rOnlyClassificationMap["{!clsfKey.Id}"] = temp_roList;

        </apex:repeat>

        fClassificationMap["{!catfKey}"] = temp_ClsList;
        </apex:repeat>

        // set Exchange Rate based on Country
        var exchangeRate = {};
        var exchangeRateTW = {};
        var dateRateMap = {};
        <apex:repeat value="{!exchangeRates}" var="exKey">
            <apex:repeat value="{!exchangeRates[exKey]}" var="exR">
                exchangeRate["{!exKey}"] = "{!exR.ASI_MFM_Exchange_Rate__c}";
            </apex:repeat>
        </apex:repeat>

        <apex:repeat value="{!exchangeRatesTW}" var="exKey">
            var dateRateMap = {};
            <apex:repeat value="{!exchangeRatesTW[exKey]}" var="exR">
                dateRateMap[new Date("{!exR.ASI_MFM_Effective_Date__c}")] = "{!exR.ASI_MFM_Exchange_Rate__c}"
            </apex:repeat>
            exchangeRateTW["{!exKey}"] = dateRateMap;
        </apex:repeat>

        var recentRowId;
        var selectedCat;
        var selectedClass;

        function updateDependentList(rowId, rowIndex, isOnChange){

            var catIdValue = $('#category_'+rowIndex).val();
            var classificationList = fClassificationMap[catIdValue];

            if(classificationList != undefined){
                $('#classification_'+rowIndex).find('option').remove();
                for(var i = 0; i < classificationList.length; i++){
                    var clsId = classificationList[i].split('~')[0];
                    var clsVal = classificationList[i].split('~')[1];
                    $('#classification_'+rowIndex).append('<option value=' + clsId + '>' + clsVal + '</option>');
                }
                if(isOnChange) {
                    readOnlyFields_Classification(rowId ,rowIndex, isOnChange);
                }
            }
        }

        function detectSameCurrency(rowId) {
            if(rowId != undefined){
                if(rowId.find("select.currCode").val() != '{!currencyStr}'){
                    rowId.find("input.fxRate").prop("readonly",false);
                    rowId.find("input.fxRate").css("background", "White");
                }else{
                    rowId.find("input.fxRate").prop("readonly",true);
                    //rowId.find("input.fxRate").val("");
                    rowId.find("input.fxRate").css("background", "LightGray");
                }
            }
        }

        function updateExchangeRate(rowId){
            if(rowId != undefined){
                var curr = rowId.find("select.currCode").val();
                var currNewVal = exchangeRate[curr];
                if('{!headerRecType}' == 'TW' && curr != 'TWD'){
                    var receiptDt = rowId.find("input.receiptDate").val();
                    var dtArray = receiptDt.split("/");
                    var dt = new Date(dtArray[2],dtArray[0]-1,dtArray[1]);
                    var selectedDt = new Date();
                    var isFirstRec = true;
                    var currMap = exchangeRateTW[curr];
                    for(var key in currMap){
                        var tempDt = new Date(key);
                        if(isFirstRec == true && (dt-tempDt) >= 0){
                            selectedDt = tempDt;
                            isFirstRec = false;
                        }else if((tempDt - selectedDt) >= 0 && (dt-tempDt) >= 0){
                            selectedDt = tempDt;
                        }
                    }
                    if(isFirstRec == true){
                        for(var key in currMap){
                            var tempDt = new Date(key);
                            if(isFirstRec == true){
                                selectedDt = tempDt;
                            }else if(selectedDt > tempDt){
                                selectedDt = tempDt;
                            }
                        }
                    }
                    if(currMap != null){
                        currNewVal = currMap[selectedDt];
                    }
                }

                if('{!currencyStr}' == curr) {
                    currNewVal = 1.000000;
                    currNewVal = currNewVal.toFixed(6);
                }

                rowId.find("input.fxRate").val(currNewVal);

                //Special Case for Cash Advance
                if('{!claimHeader.ASI_TnE_Type__c}' == 'Cash Advance' && curr == '{!claimHeader.ASI_TnE_Currency__c}') {
                    currNewVal = '{!claimHeader.ASI_TnE_FX_Rate__c}';
                    currNewVal = currNewVal.toFixed(6);
                }
                if(rowId.find("select.currCode").val() != '{!currencyStr}'){
                    rowId.find("input.fxRate").prop("readonly",false);
                    rowId.find("input.fxRate").css("background", "White");
                }else{
                    rowId.find("input.fxRate").prop("readonly",true);
                    //rowId.find("input.fxRate").val("");
                    rowId.find("input.fxRate").css("background", "LightGray");
                }
            }
        }

        var prevVal;
        function getPreviousValue(rowId){
            if(rowId != undefined){
                prevVal = rowId.find("input.fxRate").val();
            }
        }

        function rateMessage(rowId){
            if(rowId != undefined && (prevVal != '' && prevVal != null)){
                var newVal = rowId.find("input.fxRate").val();
                var tenOfpVal = (parseFloat(prevVal) * 0.100000) + parseFloat(prevVal);
                var minusTenOfpVal = parseFloat(prevVal) - (parseFloat(prevVal) * 0.100000);

                if(parseFloat(newVal) > parseFloat(tenOfpVal.toFixed(6))){
                    alert('{!$Label.ASI_TnE_TW_FXRatesWarn}');
                }
                if(parseFloat(newVal) < parseFloat(minusTenOfpVal.toFixed(6))){
                    alert('{!$Label.ASI_TnE_TW_FXRatesWarn}');
                }
            }
        }

        function readOnlyFields_Classification(rowId, rowIndex, isOnChange){
            if(rowId != undefined){
                detectSameCurrency(rowId);
                var fieldsAPI = [];
                var clsfVal = $("#classification_"+rowIndex).val();
                fieldsAPI = rOnlyClassificationMap[clsfVal];
                var isTaxReadOnly = false;
                if(fieldsAPI != undefined){
                    console.log("readonly test" + fieldsAPI.length);
                    // remove the readonly and background first
                    rowId.find(":input").not("input.fxRate, input.taxAmt").prop("readonly",false);
                    rowId.find(":input").not("select.marketCharged").prop("disabled","");
                    rowId.find(":input").not("input.fxRate, input.taxAmt, select.marketCharged").css("background", "White");

                    rowId.find("a.ASI_TnE_A_C_Code").show();
                    rowId.find("a.ASI_TnE_SubBrand").show();
                    rowId.find("a.ASI_TnE_BU").show();
                    rowId.find("a.ASI_TnE_CAP_Plan").show();
                    rowId.find("a.ASI_TnE_Charge_To_Acc").show();
                    rowId.find("a.ASI_TnE_Outlet").show();
                    rowId.find("a.ASI_TnE_Payment_Request").show();
                    rowId.find("a.ASI_TnE_Supplier").show();
                    rowId.find("a.ASI_TnE_Tax_ID").show();
                    rowId.find("a.ASI_TnE_Receipt_Date").show();

                    rowId.find("select.ASI_TnE_SubBrand").prop("disabled","");
                    rowId.find("select.ASI_TnE_SubBrand").css("background", "White");
                    
                    for(var i=0; i < fieldsAPI.length; i++){
                        console.log("readonly test" + fieldsAPI[i]);
                        // Text Field
                        rowId.find("input."+fieldsAPI[i]).prop("readonly",true);
                        rowId.find("input."+fieldsAPI[i]).css("background", "LightGray");
                        rowId.find("a."+fieldsAPI[i]).hide();
                        if(fieldsAPI[i] != 'fxRate' && fieldsAPI[i] != 'taxAmt') {
                            rowId.find("input."+fieldsAPI[i]).not("input.fxRate, input.taxAmt").val("");
                        }

                        // TextArea Field
                        rowId.find("textarea."+fieldsAPI[i]).prop("readonly",true);
                        rowId.find("textarea."+fieldsAPI[i]).css("background", "LightGray");
                        rowId.find("textarea."+fieldsAPI[i]).val("");
                        // Select field
                        rowId.find("select."+fieldsAPI[i]).prop("disabled","disabled");
                        rowId.find("select."+fieldsAPI[i]).css("background", "LightGray");
                        rowId.find("select."+fieldsAPI[i]).val("");
                        // Checkbox
                        if(rowId.find("input."+fieldsAPI[i]).is(':checkbox')) {
                            rowId.find("input."+fieldsAPI[i]).prop('checked', false);
                            rowId.find("input."+fieldsAPI[i]).prop('disabled', true);
                            rowId.find("input."+fieldsAPI[i]).css("background", "LightGray");
                            isTaxReadOnly = true;
                        }
                    }
                }else{
                    // Inputs Field
                    rowId.find(":input").not("input.fxRate, input.taxAmt").prop("readonly",false);
                    rowId.find(":input").not("input.fxRate, input.taxAmt").css("background", "White");
                }

                if(!isTaxReadOnly && isOnChange) {
                    rowId.find("input.ASI_TnE_Tax_Inclusive").prop('disabled', false);
                    rowId.find("input.ASI_TnE_Tax_Inclusive").css("background", "White");
                    rowId.find("input.ASI_TnE_Tax_Inclusive").trigger("change");
                }
            }
            getDependentPicklistMapping();
        }

        function enableTaxAmt(rowId){
            if(rowId != undefined){
                if(rowId.find("input.taxInc").is(":checked")){
                    rowId.find("input.taxAmt").prop("readonly",false);
                    rowId.find("input.taxAmt").css("background", "White");
                }else{
                    rowId.find("input.taxAmt").prop("readonly",true);
                    rowId.find("input.taxAmt").val("");
                    rowId.find("input.taxAmt").css("background", "LightGray");
                }
            }
        }

        function marketChargedEnabled(rowId){
            if(rowId != undefined){
                if({!marketChargedEnabled} == false){
                    rowId.find("select.marketCharged").prop("disabled","disabled");
                    rowId.find("select.marketCharged").css("background", "LightGray");
                }
            }
        }

        var categoriesMap = '';
        var classificationsMap = '';

        function saveClaims(){
            getDependentPicklistMapping();
            console.log('***categoriesMap: ' + categoriesMap);
            console.log('***categoriesMap: ' + classificationsMap);
            saveClaim_Details(categoriesMap, classificationsMap);
            return false;
        }
        function quickSaveClaims(){
            getDependentPicklistMapping();
            console.log('***categoriesMap: ' + categoriesMap);
            console.log('***categoriesMap: ' + classificationsMap);
            quickSaveClaim_Details(categoriesMap, classificationsMap);
        }
        function addNewClaims(){
            getDependentPicklistMapping();
            console.log('***categoriesMap: ' + categoriesMap);
            console.log('***categoriesMap: ' + classificationsMap);
            addNewDetail(categoriesMap, classificationsMap);
            //addNewDetail();
        }
        function onCompleteAddNew(){
            getDependentPicklistMapping();
            console.log('***categoriesMap: ' + categoriesMap);
            console.log('***categoriesMap: ' + classificationsMap);
            updateWrapperValues(categoriesMap, classificationsMap);
        }

        function cloneClaims(rowId){
            getDependentPicklistMapping();
            console.log('***categoriesMap: ' + categoriesMap);
            console.log('***categoriesMap: ' + classificationsMap);
            cloneClaimDetail(rowId, categoriesMap, classificationsMap);
        }

        function deleteClaims(rowId) {
            getDependentPicklistMapping();
            console.log('***categoriesMap: ' + categoriesMap);
            console.log('***categoriesMap: ' + classificationsMap);
            deleteClaimDetail(rowId, categoriesMap, classificationsMap);
        }

        function validateClassification(rowId, rowIndex,obj) {
            getDependentPicklistMapping();
            var catIdValue = $('#category_'+rowIndex).val();
            var classification = rowId.find("select.classification").val();
            if(classification == '{!greetingId}'){
                alert('{!$Label.ASI_TnE_TW_NoClsfWarn}');
                rowId.find("select.classification").val(obj.oldValue);
            }else{
                console.log('rowIndex ' + rowIndex + ' catIdValue ' + catIdValue + ' classification ' + classification);
                console.log(categoriesMap);
                console.log(classificationsMap);
                assignClassificationAction(rowIndex, catIdValue, classification, categoriesMap, classificationsMap);
            }
        }

        function getDependentPicklistMapping(){
            var tableId;
            categoriesMap = '';
            classificationsMap = '';

            if({!isFinanceType} == false && {!isEmployeeView} == false){
                tableId = 'claimdetail_Table_' + '{!headerRecType}';
            }
            if({!isFinanceType} == true && {!isFinanceView} == true){
                tableId = 'claimdetail_Finance_Table_TW';
            }

            $('#'+tableId + ' tbody tr').each(function() {
                var tIndex = $(this).index() + 1;
                var catId = 'category_' + tIndex;
                var clsId = 'classification_' + tIndex;

                var SelCat_Val = $('#'+catId).val();
                var SelCls_Val = $('#'+clsId).val();

                categoriesMap += tIndex + '-' + SelCat_Val + '_';
                classificationsMap += tIndex + '-' + SelCls_Val + '_';

            });
            categoriesMap = categoriesMap.slice(0, - 1);
            classificationsMap = classificationsMap.slice(0, - 1);
        }

        function autoCalculatePaymentAmount(rowId) {
            var receiptAmount = rowId.find("input.receiptAmount").val();
            receiptAmount = normalizeFloat(receiptAmount, [",",""]);

            var fxRate = rowId.find("input.fxRate").val();
            fxRate = normalizeFloat(fxRate, [",",""]);

            var result = fxRate * receiptAmount;
            result = result.toFixed(2);
            rowId.find("span.ASI_TnE_TW_Payment_Amount").text(result);

        }

        function autoCalculateTaxableAmount(rowId) {
            var paymentAmount = rowId.find("span.paymentAmount").text();
            paymentAmount = normalizeFloat(paymentAmount, [",",""]);

            var taxRate = rowId.find("input.taxRate").val();
            taxRate = normalizeFloat(taxRate, [",",""]);
            taxRate = taxRate/100;

            //var taxableAmount = paymentAmount - paymentAmount * taxRate;
            var taxableAmount = (paymentAmount / (1 + taxRate));
            var taxAmount = paymentAmount - (paymentAmount/(1+(taxRate/100)));

            taxableAmount = taxableAmount.toFixed(0);
            //taxAmount = taxAmount.toFixed(0);
            //rowId.find("input.taxAmount").val(taxAmount);
            rowId.find("span.taxableAmount").val(taxableAmount);

        }

        function autoCalculateTaxAmountOnly(rowId) {
            var paymentAmount = rowId.find("span.paymentAmount").text();
            paymentAmount = normalizeFloat(paymentAmount, [",",""]);

            var taxableAmount = rowId.find("span.taxableAmount").val();
            taxableAmount = normalizeFloat(taxableAmount, [",",""]);

            var taxAmount = paymentAmount - taxableAmount;

            //taxAmount = taxAmount.toFixed(0);
            //rowId.find("input.taxAmount").val(taxAmount);

        }
        
        function taxInclusiveChanged(rowId) {
        
            if(!rowId.find("input.ASI_TnE_Tax_Inclusive").is(":checked")) {
                rowId.find("input.taxAmount").val('');
                rowId.find("input.taxAmount").trigger("change");
            } else {
                rowId.find("input.receiptAmount").trigger("change");
            }
        }


        function autoCalculateTaxableAmountOnly(rowId) {
            var paymentAmount = rowId.find("span.paymentAmount").text();
            paymentAmount = normalizeFloat(paymentAmount, [",",""]);

            var taxAmount = rowId.find("input.taxAmount").val();
            taxAmount = normalizeFloat(taxAmount, [",",""]);

            var taxableAmount = paymentAmount - taxAmount;

            taxableAmount = taxableAmount.toFixed(2);

            rowId.find("span.taxableAmount").val(taxableAmount);

        }

        function normalizeFloat(number, chars) {
            var lastIndex = -1;
            if(typeof number === 'undefined'){
                return number;
            }
            for(i=0; i < chars.length; i++) {
                t = number.lastIndexOf(chars[i]);

                if (t > lastIndex) {
                    lastIndex = t;
                }
            }

            if (lastIndex == -1) {
                lastIndex = number.length;
            }

            var whole = number.substring(0, lastIndex);
            var precision = number.substring(lastIndex);
            for (i=0; i < chars.length; i++) {
                whole = whole.replace(chars[i], '');
                precision = precision.replace(chars[i],'.');
            }
            number = whole + precision;
            f = parseFloat(number.replace(/,/g, '')) ;
            //f = parseFloat(number);
            f = (f!=null&&f!=undefined&&!isNaN(f))?f:0;
            return f;
        }
        </script>

        <!-- ******************* STYLE BLOCK ******************* -->
        <style>
            body {
            margin-top: 40px;
            font-size: 12px;
            font-family: Helvetica,Arial,Verdana,sans-serif;
            width:100%;
            }

            .loadingOverlay{
            opacity: 0.4;
            postion: absolute;
            top:0px;
            left:0px;
            background-color:#001100;
            width:100%;
            z-index: 5000
            }

            #container1{
            width:100%;
            }

            #tabLink{
            font-size: 10px;
            }

            .overlay {
            display: none;
            height: 100%;
            left: 0;
            position: fixed;
            top: 0;
            opacity: 0.3;
            -moz-opacity: 0.3;
            width: 100%;
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
            filter: alpha(opacity=30);
            background: #000;
            -khtml-opacity: 0.3;
            z-index: 1000;
            }

            .loader {
            width: 32px;
            height: 32px;
            position: absolute;
            left: 50%;
            }

            input.error-input {
            border-color: red;
            }

            .ASI_TnE_Outlet, .ASI_TnE_Invoice_Issuer {
            width: 115px
            }

            .ASI_TnE_MFM_PO, .ASI_TnE_Payment_Request {
            width: 115px
            }

            .ASI_TnE_CAP_Plan {
            width: 115px
            }

            .ASI_TnE_Charge_To_Acc {
            width: 115px
            }
            
            .ASI_TnE_MFM_PO_Line_Item {
            width: 115px
            }

            .taxRate{
            width: 60px
            }

            .ASI_TnE_Client_Type {
            width:  130px
            }

            .marketCharged {
            width: 120px
            }

            .ASI_TnE_SubBrand {
            width: 120px
            }
        </style>
    </head>

    <body>
    <!-- ******************* PAGE LOADING BLOCK ******************* -->
    <apex:actionStatus id="loadingStatus" >
        <apex:facet name="start">
            <c:ASI_TnE_LoadingStatus BackColor="#ffffff"
                                     borderColor="#6B6B6B"
                                     borderSize="1"
                                     height="50px"
                                     width="160px"
                                     margintop="-25px"
                                     marginleft="-60px"
                                     ImageUrl="{!$Resource.loadingStatus}"
                                     Message="Loading..."/>
        </apex:facet>
    </apex:actionStatus>

    <apex:form >
        <apex:pageMessages id="pageMsg" escape="false"></apex:pageMessages>

        <!-- ******************* ACTIONFUNCTIONS ******************* -->
        <apex:actionFunction name="updateWrapperValues" action="{!updateWrapperValues}" rerender="detail_pageBlock, pageMsg" status="loadingStatus" oncomplete="setTables();">
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
        </apex:actionFunction>

        <apex:actionFunction name="redirectClaimHeaderPage" action="{!redirectClaimHeaderPage}" rerender="pageMsg"/>

        <apex:actionFunction name="saveClaim_Details" action="{!saveClaimDetails}" status="loadingStatus" rerender="detail_pageBlock, pageMsg" oncomplete="setTables(); redirectClaimHeaderPage(); return false;">
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
        </apex:actionFunction>

        <apex:actionFunction name="quickSaveClaim_Details" action="{!saveClaimDetails}" status="loadingStatus" rerender="detail_pageBlock, pageMsg" oncomplete="setTables();">
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
            <apex:param name="IS_QUICK_SAVE" value="true" />
        </apex:actionFunction>

        <apex:actionFunction name="addNewDetail" action="{!addNewDetail}" rerender="detail_pageBlock, pageMsg" status="loadingStatus" onComplete="onCompleteAddNew();">
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
        </apex:actionFunction>

        <apex:actionFunction name="cloneClaimDetail" action="{!cloneClaimDetail}" rerender="detail_pageBlock, pageMsg" onComplete="setTables();" status="loadingStatus">
            <apex:param name="PARAM_CLONE_CLAIM_DETAIL_ID" value=""/>
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
        </apex:actionFunction>

        <apex:actionFunction name="deleteClaimDetail" action="{!removeClaimDetail}" rerender="detail_pageBlock, pageMsg" onComplete="setTables();" status="loadingStatus">
            <apex:param name="PARAM_DELETE_CLAIM_DETAIL_ID" value=""/>
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
        </apex:actionFunction>

        <apex:actionFunction name="assignClassificationAction" action="{!assignClassification}" rerender="detail_pageBlock, pageMsg" onComplete="setTables();" status="loadingStatus">
            <apex:param name="ROWID" value="" />
            <apex:param name="CATEGORY" value="" />
            <apex:param name="CLASSIFICATION" value="" />
            <apex:param name="PARAM_CATEGORIES_IDS" value="" assignTo="{!PARAM_CATEGORIES_IDS}"/>
            <apex:param name="PARAM_CLASSIFICATIONS_IDS" value="" assignTo="{!PARAM_CLASSIFICATIONS_IDS}"/>
        </apex:actionFunction>

        <!-- ******************* HEADER BLOCK - T&E CLAIMS ******************* -->
        <apex:pageBlock id="header_pageBlock">
            <apex:panelGrid columns="1" width="1100px">
                <apex:pageBlockSection title="{!$Label.ASI_TnE_TW_ClaimTitle}">
                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.Owner.Name}"/>
                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.Name}"/>

                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Payee_Employee__c}"/>
                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Status__c}"/>

                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Company__c}"/>
                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Start_Date__c}"/>

                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Department_Division__c}"/>
                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_End_Date__c}"/>

                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_Currency__c}"/>
                    <apex:outputField value="{!ASI_TnE_ClaimHeader__c.ASI_TnE_TW_Total_Amount__c}"/>
                </apex:pageBlockSection>
            </apex:panelGrid>
        </apex:pageBlock>

        <!-- ******************* DETAIL BLOCK - T&E CLAIM DETAILS ******************* -->
        <apex:pageBlock id="detail_pageBlock">
            <!-- ******************* BUTTONS ******************* -->
            <apex:pageblockButtons >
                <apex:commandButton value=" {!$Label.ASI_TnE_TW_Save} " rendered="{!IF(isEmployeeView == false || (isFinanceType && isFinanceView), true, false)}" onclick="setTables();" action="{!saveClaimDetails}" status="loadingStatus" rerender="pageMsg">
                    <apex:param name="IS_QUICK_SAVE" value="false"/>
                </apex:commandButton>

                <apex:commandButton value=" {!$Label.ASI_TnE_TW_QuickSave} " rendered="{!IF(isEmployeeView == false || (isFinanceType && isFinanceView), true, false)}" onclick="quickSaveClaims(); return false;"/>

                <apex:commandButton value=" {!$Label.ASI_TnE_TW_Cancel} "
                                    action="{!cancel}"
                                    immediate="true"/>
            </apex:pageblockButtons>

            <div id="detailTabs" class="tabLink" style="display:table;">
                <ul>
                    <li><apex:outputPanel rendered="true"><a href="#tab_ClaimDetail">{!recTypeName}</a></apex:outputPanel></li>
                </ul>

                <div id="tab_ClaimDetail">
                    <apex:pageBlock id="pageBlock_claimDetail">
                        <apex:outputPanel layout="block">
                            <apex:outputPanel rendered="{!IF(AND(isEmployeeView == false,!AND(headerRecType == 'TW', claimHeader.ASI_TnE_Type__c == 'Corp Card')), true, false)}">
                                <apex:commandButton value="{!$Label.ASI_TnE_TW_AddNew}" onclick="addNewClaims(); return false;" styleClass="addNewBtn"/>
                                <br/>
                                <br/>
                            </apex:outputPanel>

                            <!-- ************************
                            T&E TW
                            ************************* -->
                            <!-- ******************* NORMAL VIEW TW ******************* -->
                            <apex:outputPanel rendered="{!IF(headerRecType == 'TW' && isFinanceType == false && isEmployeeView == false, true, false)}">
                                <table id="claimdetail_Table_TW">
                                    <apex:repeat value="{!detailWrapper}" var="eCls" >
                                        <tr Id="row_TW_{!eCls.rowIndex}" class="cldContent">
                                            <td>
                                                &nbsp;
                                                <apex:commandLink value="{!$Label.ASI_TnE_TW_Clone}" onclick="cloneClaims('{!eCls.rowIndex}'); return false;"/>
                                                &nbsp;
                                                <!-- <apex:commandLink value="Delete"
                                                                      immediate="true"
                                                                      action="{!removeClaimDetail}"
                                                                      rerender="detail_pageBlock, pageMsg"
                                                                      onComplete="setTables();"
                                                                      status="loadingStatus">
                                                        <apex:param name="PARAM_DELETE_CLAIM_DETAIL_ID" value="{!eCls.rowIndex}"/>
                                                    </apex:commandLink> -->
                                                <apex:commandLink value="{!$Label.ASI_TnE_TW_Delete}" onclick="deleteClaims('{!eCls.rowIndex}'); return false;"/>
                                            </td>
                                            <td>
                                                <div class='requiredInput'>
                                                    <div class='requiredBlock'></div>
                                                    <select Id="category_{!eCls.rowIndex}" size="1" style="width: 140px;" onchange="updateDependentList($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}', true); " class="category">
                                                        <apex:repeat value="{!categories}" var="cat">
                                                            <option value="{!cat.Id}">{!cat.Name}</option>
                                                        </apex:repeat>
                                                    </select>
                                                    <script>
                                                        $('#category_{!eCls.rowIndex}').val('{!eCls.expCategory}');
                                                        //updateDependentList($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}');
                                                        </script>
                                                </div>
                                            </td>
                                            <td>
                                                <div class='requiredInput'>
                                                    <div class='requiredBlock'></div>
                                                    <select Id="classification_{!eCls.rowIndex}" size="1" style="width: 160px;" onclick="this.oldValue = this.value;"
                                                            onchange="readOnlyFields_Classification($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}', true); validateClassification($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}',this);" class="classification">

                                                        <apex:repeat value="{!classifications}" var="cla">
                                                            <option value="{!cla.Id}">{!cla.Name}</option>
                                                        </apex:repeat>
                                                    </select>
                                                </div>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_With_Receipt__c}" styleclass="ASI_TnE_With_Receipt" /></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Receipt_Date__c}" styleclass="receiptDate" required="true"/></td>
                                            <td style="width: 120px;"><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Receipt_Amount__c}" required="true"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Currency__c}" required="true"
                                                                 styleclass="currCode"
                                                                 onchange="updateExchangeRate($('#row_TW_{!eCls.rowIndex}'));"/>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_FX_Rate__c}" style="width: 80px;"
                                                                 styleclass="fxRate"
                                                                 onfocus="getPreviousValue($('#row_TW_{!eCls.rowIndex}'));"
                                                                 onchange="rateMessage($('#row_TW_{!eCls.rowIndex}'));"/>
                                            </td>
                                            <!--<td style="text-align: center;">
                                                    <apex:inputField value="{!eCls.detailRecord.ASI_TnE_Tax_Inclusive__c}"
                                                                     styleClass="ASI_TnE_Tax_Inclusive"
                                                                     onChange="taxInclusiveChanged($('#row_TW_{!eCls.rowIndex}'));"/>
                                            </td>-->
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Total_Number_Pax__c}" style="width: 35px;"
                                                                 styleClass="ASI_TnE_Total_Number_Pax"/>
                                            </td>
                                            <td>
                                                <apex:inputField value="{!eCls.detailRecord.ASI_TnE_Outlet__c}" styleClass="ASI_TnE_Outlet"/>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Name_Company__c}"
                                                                 styleClass="ASI_TnE_Name_Company"/>
                                            </td>
                                            <td><apex:outputText value="{!eCls.gnhType}" styleClass="ASI_TnE_GnH_Type__c"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Recipient_Type__c}" styleClass="ASI_TnE_Recipient_Type"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Details_of_Expense__c}" styleClass="ASI_TnE_Details_of_Expense"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_GnH_Request__c}" styleClass="ASI_TnE_GnH_Request"/></td>
                                            <td>
                                                <apex:inputField value="{!eCls.detailRecord.ASI_TnE_CAP_Plan__c}" styleClass="ASI_TnE_CAP_Plan"/>
                                            </td>
                                            <td><!--<apex:inputField value="{!eCls.detailRecord.ASI_TnE_BU__c}"/> <br/>
                                                    <apex:inputField value="{!eCls.detailRecord.ASI_TnE_Employee__c}"
                                                                     styleClass="ASI_TnE_Employee"/> -->
                                                <apex:inputField styleClass="ASI_TnE_Charge_To_Acc" value="{!eCls.detailRecord.ASI_TnE_Charge_To_Acc__c}"/>
                                            </td>
                                        </tr>
                                    </apex:repeat>
                                </table>
                            </apex:outputPanel>


                            <!-- ************************
                                    T&E FINANCE VIEW General View
                            ************************* -->
                            <apex:outputPanel rendered="{!IF(isFinanceType == true && isFinanceView == true, true, false)}">
                                <table id="claimdetail_Finance_Table_TW">
                                    <apex:repeat value="{!detailWrapper}" var="eCls" >
                                        <tr Id="row_TW_{!eCls.rowIndex}" class="cldContent">
                                            <td>
                                                &nbsp;
                                                <apex:commandLink value="{!$Label.ASI_TnE_TW_Clone}" onclick="cloneClaims('{!eCls.rowIndex}'); return false;"/>
                                                &nbsp;
                                                <!-- <apex:commandLink value="Delete"
                                                              immediate="true"
                                                              action="{!removeClaimDetail}"
                                                              rerender="detail_pageBlock, pageMsg"
                                                              onComplete="setTables();"
                                                              status="loadingStatus">
                                                <apex:param name="PARAM_DELETE_CLAIM_DETAIL_ID" value="{!eCls.rowIndex}"/>
                                            </apex:commandLink> -->
                                                <apex:commandLink value="{!$Label.ASI_TnE_TW_Delete}" onclick="deleteClaims('{!eCls.rowIndex}'); return false;"/>
                                            </td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Account_Number__c}"/></td>
                                            <td>
                                                <div class='requiredInput'>
                                                    <div class='requiredBlock'></div>
                                                    <select Id="category_{!eCls.rowIndex}" size="1" style="width: 140px;" onchange="updateDependentList($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}', true);" class="category">
                                                        <apex:repeat value="{!categories}" var="cat">
                                                            <option value="{!cat.Id}">{!cat.Name}</option>
                                                        </apex:repeat>
                                                    </select>
                                                    <script>
                                                        $('#category_{!eCls.rowIndex}').val('{!eCls.expCategory}');
                                                        //pdateDependentList($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}', false);
                                                        </script>
                                                </div>
                                            </td>
                                            <td>
                                                <div class='requiredInput'>
                                                    <div class='requiredBlock'></div>
                                                    <select Id="classification_{!eCls.rowIndex}" size="1" style="width: 160px;" onclick="this.oldValue = this.value;"
                                                            onchange="readOnlyFields_Classification($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}', true);validateClassification($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}',this);" class="classification">

                                                        <apex:repeat value="{!classifications}" var="cla">
                                                            <option value="{!cla.Id}">{!cla.Name}</option>
                                                        </apex:repeat>
                                                    </select>
                                                </div>
                                            </td>
                                            <td>
                                                <apex:inputField value="{!eCls.detailRecord.ASI_TnE_BU__c}"/>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_A_C_Code__c}"
                                                                 styleClass="ASI_TnE_A_C_Code"/>
                                            </td>
                                            <td>
                                                <apex:inputField styleClass="ASI_TnE_Charge_To_Acc" value="{!eCls.detailRecord.ASI_TnE_Charge_To_Acc__c}"/>
                                            </td>
                                            <td><span> {!eCls.detailRecord.ASI_TnE_SG_Sub_Ledger__c} </span></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_With_Receipt__c}" styleclass="ASI_TnE_With_Receipt" /></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Receipt_Date__c}" styleclass="receiptDate" required="true"/>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Receipt_Amount__c}" required="true"
                                                                 styleClass="receiptAmount"
                                                                 onChange="autoCalculatePaymentAmount($('#row_TW_{!eCls.rowIndex}'));
                                                            autoCalculateTaxableAmount($('#row_TW_{!eCls.rowIndex}'));
                                                            autoCalculateTaxAmountOnly($('#row_TW_{!eCls.rowIndex}'));"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Currency__c}" required="true"
                                                                 styleclass="currCode"
                                                                 onchange="updateExchangeRate($('#row_TW_{!eCls.rowIndex}'));
                                                            autoCalculatePaymentAmount($('#row_TW_{!eCls.rowIndex}'));
                                                                autoCalculateTaxableAmount($('#row_TW_{!eCls.rowIndex}'));
                                                                autoCalculateTaxAmountOnly($('#row_TW_{!eCls.rowIndex}'));"/>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_FX_Rate__c}" style="width: 80px;"
                                                                 styleclass="fxRate"
                                                                 onfocus="getPreviousValue($('#row_TW_{!eCls.rowIndex}'));"
                                                                 onchange="rateMessage($('#row_TW_{!eCls.rowIndex}'));
                                                            autoCalculatePaymentAmount($('#row_TW_{!eCls.rowIndex}'));
                                                            autoCalculateTaxableAmount($('#row_TW_{!eCls.rowIndex}'));
                                                            autoCalculateTaxAmountOnly($('#row_TW_{!eCls.rowIndex}'));"/>
                                            </td>
                                            <td><apex:outputText value="{!eCls.detailRecord.ASI_TnE_TW_Payment_Amount__c}"
                                                                  styleclass="ASI_TnE_TW_Payment_Amount"/>
                                            </td>
                                            <td style="text-align: center;">
                                                    <apex:inputField value="{!eCls.detailRecord.ASI_TnE_Tax_Inclusive__c}"
                                                                     styleClass="ASI_TnE_Tax_Inclusive"
                                                                     onChange="taxInclusiveChanged($('#row_TW_{!eCls.rowIndex}'));"/>
                                            </td>
                                            <td><span class="taxRate"> {!eCls.detailRecord.ASI_TnE_Tax_Rate__c}</span></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Tax_Amount__c}" styleClass="taxAmount"/> <!--<span class="taxAmount"> {!eCls.detailRecord.ASI_TnE_Tax_Amount__c}</span>--></td>
                                            <td><span> {!eCls.detailRecord.ASI_TnE_Taxable_Amount_Display__c}</span></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Total_Number_Pax__c}" style="width: 35px;"
                                                                 styleClass="ASI_TnE_Total_Number_Pax"/>
                                            </td>
                                            <td>
                                                <apex:inputField value="{!eCls.detailRecord.ASI_TnE_Outlet__c}" styleClass="ASI_TnE_Outlet"/>
                                            </td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Name_Company__c}"
                                                                 styleClass="ASI_TnE_Name_Company"/>
                                            </td>
                                            <td><apex:outputText value="{!eCls.gnhType}" styleClass="ASI_TnE_GnH_Type__c"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Recipient_Type__c}" styleClass="ASI_TnE_Recipient_Type"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Details_of_Expense__c}" styleClass="ASI_TnE_Details_of_Expense"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_GnH_Request__c}" styleClass="ASI_TnE_GnH_Request"/></td>
                                            
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_AP_Remarks__c}" styleClass="ASI_TnE_AP_Remarks"/></td>
                                            <apex:outputtext >
                                                <td>
                                                    <apex:outputtext > 
                                                        <apex:inputField value="{!eCls.detailRecord.ASI_TnE_CAP_Plan__c}" styleClass="ASI_TnE_CAP_Plan"/>
                                                    </apex:outputtext>
                                                </td>
                                            </apex:outputtext>
                                        </tr>
                                    </apex:repeat>
                                </table>
                            </apex:outputPanel>
                            <!-- ************************
                            T&E EMPLOYEE VIEW
                            ************************* -->
                            <apex:outputPanel rendered="{!IF(isEmployeeView && !(isFinanceType && isFinanceView),true,false)}">
                                <table id="claimdetail_Table_EMP_VIEW">
                                    <apex:repeat value="{!detailWrapper}" var="eCls" >
                                        <tr Id="row_{!eCls.rowIndex}" class="cldContent">
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Expense_Category__r.Name}"/></td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Expense_Classification__r.Name}"/></td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_With_Receipt__c}" styleclass="ASI_TnE_With_Receipt" /></td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Receipt_Date__c}" styleclass="receiptDate"/></td>
                                            <td style="width: 120px;"><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Receipt_Amount__c}"/></td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Currency__c}"
                                                                  styleclass="currCode"/>
                                            </td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_FX_Rate__c}" style="width: 80px;"
                                                                  styleclass="fxRate"/>
                                            </td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_TW_Payment_Amount__c}"
                                                                  styleclass="ASI_TnE_TW_Payment_Amount"/>
                                            </td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Total_Number_Pax__c}" style="width: 35px;"
                                                                  styleClass="ASI_TnE_Total_Number_Pax"/>
                                            </td>
                                            <td>
                                                <apex:outputField value="{!eCls.detailRecord.ASI_TnE_Outlet__c}" styleClass="ASI_TnE_Outlet"/>
                                            </td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Name_Company__c}"
                                                                  styleClass="ASI_TnE_Name_Company"/>
                                            </td>
                                            <td><apex:outputText value="{!eCls.gnhType}" styleClass="ASI_TnE_GnH_Type__c"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_Recipient_Type__c}" styleClass="ASI_TnE_Recipient_Type"/></td>
                                            <td><apex:outputField value="{!eCls.detailRecord.ASI_TnE_Details_of_Expense__c}" styleClass="ASI_TnE_Details_of_Expense"/></td>
                                            <td><apex:inputField value="{!eCls.detailRecord.ASI_TnE_GnH_Request__c}" styleClass="ASI_TnE_GnH_Request"/></td>
                                            <apex:outputtext >
                                                <td>
                                                    <apex:outputtext rendered="{!headerRecType == 'TW'}">
                                                        <apex:outputField value="{!eCls.detailRecord.ASI_TnE_CAP_Plan__c}" styleClass="ASI_TnE_CAP_Plan"/>
                                                    </apex:outputtext>
                                                </td>
                                            </apex:outputtext>
                                            <td>
                                                <apex:outputField styleClass="ASI_TnE_Charge_To_Acc" value="{!eCls.detailRecord.ASI_TnE_Charge_To_Acc__c}"/>
                                            </td>
                                        </tr>
                                    </apex:repeat>
                                </table>
                            </apex:outputPanel>

                        </apex:outputPanel>
                        <script>
                                <apex:repeat value="{!detailWrapper}" var="eCls">
                                    $('#category_{!eCls.rowIndex}').val('{!eCls.expCategory}');
                                    updateDependentList($('#row_{!eCls.countryCode}_{!eCls.rowIndex}'), '{!eCls.rowIndex}', false);
                                    //updateExchangeRate($('#row_{!eCls.countryCode}_{!eCls.rowIndex}'));
                                    $('#classification_{!eCls.rowIndex}').val('{!eCls.expClassification}');
                                    readOnlyFields_Classification($('#row_{!eCls.countryCode}_{!eCls.rowIndex}'), '{!eCls.rowIndex}', false);
                                    readOnlyFields_Classification($('#row_TW_{!eCls.rowIndex}'), '{!eCls.rowIndex}', true);
                                    marketChargedEnabled($('#row_{!eCls.countryCode}_{!eCls.rowIndex}'));
                                    //enableTaxAmt($('#row_{!eCls.countryCode}_{!eCls.rowIndex}'));
                                </apex:repeat>
                        </script>
                    </apex:pageBlock>
                </div>
            </div>

            <script>
                $ = jQuery.noConflict();
                $("#detailTabs").tabs();
                
                var addnlFldname = [];
                $(function(){                   

                    ASI_TnE_TW_ManageClaimDetailController.findSObjects('ASI_CRM_AccountsAdditionalField__c', '','', function(result, event){                   
                        if(event.type == 'exception') {
                            alert(event.message);
                        } else {
                            addnlFldname = result;
                            for(var i = 0, len = addnlFldname.length;i<len;i++ )
                            {
                                addnlFldname[i] =  htmlEncode(addnlFldname[i]);
                            }
                            //$( ".lookupInput " ).each(function(){
                            $(".ASI_TnE_Outlet").each(function(){

                                $(this).autocomplete({
                                    source: addnlFldname
                                });
//                                $(this).find('input').autocomplete({
//                                    source: addnlFldname
//                                });
                            })
                        }
                    });
                });

                function createBindingAction() {
                    for(var i = 0, len = addnlFldname.length;i<len;i++ )
                    {
                        addnlFldname[i] =  htmlEncode(addnlFldname[i]);
                    }

                    $(".lookupInput").each(function(){
                        $(this).find('input').autocomplete({
                            source: addnlFldname
                        });
                    });
                }

                function htmlEncode( input ) {
                    var e = document.createElement('div');
                    e.innerHTML = input;
                    return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
                    //return String(input).replace(/\&amp;/g,'&').replace(/\&lt;/g,'<').replace(/\&rt;/g,'>');
                };
    
            </script>
        </apex:pageBlock>
    </apex:form>
    </body>
</apex:page>