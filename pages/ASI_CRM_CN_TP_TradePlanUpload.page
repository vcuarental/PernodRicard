<!-- Name:ASI_CRM_CN_TP_TradePlanUpload -->
<apex:page doctype="HTML-5.0" showHeader="false" sidebar="false" controller="ASI_CRM_CN_TP_TradePlanUpload" standardStylesheets="false" cache="false">
	<apex:slds />
    <html dir="ltr" lang="en-US">
        <head>
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
            <title>CN Trade Plan Upload</title>
            <meta name="description" content=""/>
            <meta name="viewport" content="width=device-width, initial-scale=1"/>
            <meta name="google" content="notranslate"/>
            
            <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/papaparse.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/angular.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/jquery-3.4.1.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/jquery-ui.min.js')}" />
            <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/css/jquery-ui.min.css')}" />
            <apex:stylesheet value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/css/all.min.css')}" />

            <apex:includeScript value="{!URLFOR($Resource.ASI_CRM_CN_TP_UploadCSV, '/JSPackage/xlsx.core.min.js')}" />
           
        </head>
        <body ng-app="TradePlanApp">
	        <div ng-controller="uploadCtrl" id="wrap">
	        	<div class="slds-scope">
                    <div ng-show='showSpinner' class="demo-only">
                      <div class="slds-spinner_container">
                        <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand">
                          <span class="slds-assistive-text">Loading</span>
                          <div class="slds-spinner__dot-a"></div>
                          <div class="slds-spinner__dot-b"></div>
                        </div>
                      </div>
                    </div>
                </div>
	            <div class="content">

	                <div style="padding: 40px;background-color: white;max-width: 980px; margin: auto;">
                        <div style="max-width: 980px; height: 100px;width: 1000px;">
                            <p style="width: 35%;float: left;font-size: 24px;margin-bottom: 8px;font-weight: 900;">批量上传 Trade Plan</p>
                                <div style="float:left;">
                                    <a href="" onclick="window.open('{!outletMappingUrl}')" style="width:150px;background-color: rgb(02, 52, 102);cursor: pointer;display: inline-block;text-align: center;color: white;line-height: 40px;font-size: larger;text-decoration:none;">Outlet KA Mapping</a>
                                	<a href="" ng-click="downloadProducts()" style="width:150px;background-color: rgb(02, 52, 102);cursor: pointer;display: inline-block;text-align: center;color: white;line-height: 40px;font-size: larger;text-decoration:none;">基础信息列表</a>
                                    <a href="{!URLFOR($Resource.ASI_CRM_CN_TP_Trade_Plan_Template)}" onclick="alert('模板上传时请转为UTF-8 CSV格式!')" style="width:150px;background-color: rgb(02, 52, 102);cursor: pointer;display: inline-block;text-align: center;color: white;line-height: 40px;font-size: larger;text-decoration:none;">下载模板</a>
                                    <input style="display: none;" id="csv-file" type="file" accept=".csv"></input>
                                    <label tabindex="0" id='csv-select' for="csv-file" style="background-color:rgb(02, 52, 102);text-align: center;display: inline-block;color: white;line-height: 40px;width: 180px;cursor: pointer;font-size: larger;"><i class="fa fa-file" aria-hidden="true"></i> 上传文件...</label>
                                    <!-- <a href="" ng-click="uploadCSV()" ng-show="showReload" style="width:150px;background-color: rgb(02, 52, 102);cursor: pointer;display: inline-block;text-align: center;color: white;line-height: 40px;font-size: larger;text-decoration:none;">重新加载</a> -->
                                    <a href="" ng-click="submitAll()" style="width:150px;background-color: rgb(02, 52, 102);cursor: pointer;display: inline-block;text-align: center;color: white;line-height: 40px;font-size: larger;text-decoration:none;">保存</a>
                                    <a href="" ng-click="downloadFailReport()" class="btn btn-style01 transit-02" style="width: 150px;background-color: rgb(02, 52, 102);cursor: pointer;display: inline-block;text-align: center;color: white;line-height: 40px; margin-top: 10px;font-size: larger;text-decoration:none;" ng-show="flag.reportBtnShow" >导出记录</a>
                                </div>
                        </div>
                    </div>

	                <div style="padding: 0 30px;" class="my-order-conts" ng-show="upload.show">
                         <div style="margin: 0;background-color: white;border-bottom: 1px solid #cccccc;">
                                <p style="font-weight: 900;font-size: 24px;float: left;">整体上载</p>
                                <div style="margin: 5px auto;padding-top: 5px;">
                                    <p style="font-size: 14px;margin-left: 17px;margin-top: 3px;display: inline-block;">总数: {{batchCount}} 个记录</p>
                                    <p style="font-size: 14px;margin-left: 17px;margin-top: 3px;display: inline-block;">成功: {{successCount}} 个记录</p>
                                    <p style="font-size: 14px;margin-left: 17px;margin-top: 3px;display: inline-block;">失败: {{errorCount}} 个记录</p>
                                </div>
                            </div>
                            <br/>


                        <div class="" style="overflow: auto; width: 100%; height: 450px; border: 1px solid lightgrey" >
                            <table > <!--class="fixed_header"-->
                                <thead>
                                	<!-- <tr style="background-color: lightgrey;">
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">#</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Activity_NO}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Region}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Account_Type}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Channel}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Account}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Fiscal_Year}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_StartDate}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_EndDate}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_CRM}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_DM}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Second_Display}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Second_Display_Stores}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Poster_Fee}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Display_Fee}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Sub_Brand_Code}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Bottle_Size}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Promotion_Mode}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Promotion_Content}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Unit_Price}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Promotion_Price}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Normal_Purchase}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Promotion_Purchase}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Subsidies}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Estimated_Qty}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Remark}</th>
	                                    <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!$Label.ASI_CRM_CN_TP_Note}</th>
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;" class="validation" ><a href="" style="color:blue;"><u>{!$Label.ASI_CRM_CN_TP_Status}</u></a> </th>
                                    </tr> -->
                                    <tr style="background-color: lightgrey;">
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">#</th>
                                        <apex:repeat value="{!tpHeaderList}" var="header">
                                        <th nowrap="nowrap" style="padding: 10px; text-align: center;">{!header}</th>
                                        </apex:repeat>
                                        <th nowrap="nowrap" style="padding: 10px;  text-align: center; color:blue;">状态</th>
                                    </tr>
                                </thead>
                                        
                                <tbody id="fixed_header_tbody" >
                                  	<tr ng-repeat="order in uploadBatchs track by $index" ng-click="selectHeader($index)" class="{{order.selected}}">
                                        <td style="text-align:center; padding: 10px;">{{order.index}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.planNO}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.region}}</td>
                                        <!-- <td style="text-align:center; padding: 10px;">{{order.accType}}</td> -->
                                       <!--  <td style="text-align:center; padding: 10px;">{{order.channel}}</td>
										<td style="text-align:center; padding: 10px;">{{order.kaAccount}}</td> -->
                                        <td style="text-align:center; padding: 10px;">{{order.fiscalYear}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.startDate}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.endDate}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.CRM}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.planCity}}</td>
                                        <td style="text-align:center; padding: 10px;">{{order.DM}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.secondDisplay}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.secondDisplayStoreNO}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.posterFee | number: 2}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.displayFee | number: 2}}</td>
	                                    <!-- <td style="text-align:center; padding: 10px;">{{order.subBrandName}}</td> -->
	                                    <td style="text-align:center; padding: 10px;">{{order.subBrandCode}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.bottleSize}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.itemGroupCode}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.promotionMode}}</td>
	                                    <!-- <td style="text-align:center; padding: 10px;">{{order.promotionModeDetail}}</td> -->
	                                    <td style="text-align:center; padding: 10px;">{{order.promotionContent}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.unitPrice | number: 2}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.promotionPrice | number: 2}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.purchasePrice | number: 2}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.promotionPurchasePrice | number: 2}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.subsidies | number: 2}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.planQty | number: 0}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.remark}}</td>
	                                    <td style="text-align:center; padding: 10px;">{{order.note}}</td>
                                        <td class="validation" style="text-align:center; padding: 10px;" >
                                            <i class="fa fa-spinner fa-pulse fa-1x fa-fw" ng-show="order.status=='loading'"></i>
                                            <i class="fa fa-times " aria-hidden="true" style="color: red;" ng-show="order.status=='error'" title="{{order.errorStr}}"></i>
                                            <i class="fa fa-check" aria-hidden="true" style="color: green;" ng-show="order.status=='ready'"></i>
                                             <i class="fa fa-exclamation-triangle" aria-hidden="true" style="color: orange;" title="{{order.errorStr}}" ng-show="order.status=='caution'"></i>
                                            
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <br/><br/><br/>
                    
                     
                    </div>
	            </div>
	        </div>
	        <script>

		    	class UploadedOrder {

				    constructor(data,index,$scope){
				        var startIndex = 0;
	                    this.index         = index;
	                    this.show          = true;
	                    this.errors      = [];
	                    this.errorStr = '';
	                    this.selected      = '';
	                    this.loading       = true;
	                    this.status        = 'loading';
				        this.planNO     = data[startIndex][0];
				        this.region     = data[startIndex][1];
                        this.regionId     = '';
                        this.regionName = '';
				        this.ownerId     = '';
				        // this.accType     = data[startIndex][2];
				        // this.channel    = data[startIndex][3];
				        this.channelId    = '';
				        this.kaBanner = '';
				        // this.kaAccId = '';
				        this.customerId = '';
				        this.fiscalYear    = data[startIndex][2];
				        this.startDate     = data[startIndex][3];
				        this.endDate       = data[startIndex][4]; 
				        this.CRM   = data[startIndex][5];
				        this.planCity = data[startIndex][6];
				        this.DM         = data[startIndex][7];
				        this.secondDisplay         = data[startIndex][8];
				        this.secondDisplayStoreNO           = data[startIndex][9];
				        this.posterFee         = data[startIndex][10];
				        this.displayFee        = data[startIndex][11];
				        // this.subBrandName     = data[startIndex][14];
				        this.subBrandCode     = data[startIndex][12];
				        this.subBrandId = '';
				        this.bottleSize     = data[startIndex][13];
                        this.itemGroupCode     = data[startIndex][14];
				        this.itemGroupId     = '';
				        this.promotionMode     = data[startIndex][15];
				        // this.promotionModeDetail     = data[startIndex][18];
				        this.promotionContent     = data[startIndex][16];
				        this.unitPrice       = data[startIndex][17]; 
				        this.promotionPrice    = data[startIndex][18];
				        this.purchasePrice         = data[startIndex][19];
				        this.promotionPurchasePrice   = data[startIndex][20];
				        this.subsidies = data[startIndex][21];
				        this.planQty         = data[startIndex][22];
				        this.remark         = data[startIndex][23];
				        this.note           = data[startIndex][24];

				        this.orgData = JSON.parse(JSON.stringify(this));

				    }

				    checkUploadData($scope){
				        // console.log(JSON.stringify(this));

	                    // call the apex method of apex
	                    ASI_CRM_CN_TP_TradePlanUpload.checkUploadData(JSON.stringify(this),(result, event) => 
	                        {   
	                            // show the check results on page
	                            this.checkDbResult(result, $scope);
	                            // alignPreviewTable();
	                            $('td').tooltip();
	                            $scope.$apply();
	                        }
	                        ,{buffer: false,escape: true, timeout: 120000}
	                    );
				    }
				    
				    outputCSV() {
				        var rows = [];
	                    var firstRow = [this.orgData.planNO, this.orgData.region,this.orgData.fiscalYear, this.orgData.startDate,this.orgData.endDate, this.orgData.CRM,this.orgData.planCity, this.orgData.DM,this.orgData.secondDisplay, this.orgData.secondDisplayStoreNO,this.orgData.posterFee, this.orgData.displayFee,this.orgData.subBrandCode,this.orgData.bottleSize, this.orgData.itemGroupCode, this.orgData.promotionMode,this.orgData.promotionContent, this.orgData.unitPrice, this.orgData.promotionPrice,this.orgData.purchasePrice, this.orgData.promotionPurchasePrice,this.orgData.subsidies,this.orgData.planQty, this.orgData.remark, this.orgData.note,this.errorStr];
	                    rows.push(firstRow);
	                    
	                    return rows;
				    }

				    checkDbResult(result, $scope){
	                    // console.log(result);
	                    // console.log('check');

	                    var error = false;
                        var caution = false;

	                    if(result.dateValid == 'errorDate') {
                            this.errors.push('日期格式错误, 正确时间格式为: 2020/03/13');
                            error = true;
                        } else if (result.dateValid == 'invalidDate') {
                            this.errors.push('开始日期不能大于结束日期');
                            error = true;
                        } else if (result.dateValid == 'invalidFYDate') {
                            this.errors.push('开始日期或结束日期不在该财年内');
                            error = true;
                        }
	                    if(result.planCity == 'Unknown' && this.planCity != '' && this.planCity != undefined) {
	                        this.errors.push('城市不存在');
	                        error = true;
	                    }
                        if(result.itemGroupId == undefined && this.itemGroupCode != '' && this.itemGroupCode != undefined) {
                            this.errors.push('产品Code 不存在');
                            error = true;
                        }
                        if(result.promotionMode == 'invalid') {
                            this.errors.push('促销方式不存在');
                            error = true;
                        } else {
                            this.promotionMode = result.promotionMode;
                        }
                        if(result.remark == 'invalid') {
                            this.errors.push('Remark 不存在');
                            error = true;
                        }
                        
                        if ((this.region != 'Non-Central' && this.region != 'Non-Central Region')
                            && (result.regionId == null || result.regionId == '')) {
                            this.errors.push('区域不存在');
                            error = true;
                        } else if (this.region != 'Non-Central' && this.region != 'Non-Central Region'){
                            this.regionId = result.regionId;
                        }
                        if ((result.regionName == '' || result.regionName == null)) {
                            this.errors.push('区域不存在');
                            error = true;
                        }

	                    if(result.kaBanner == '' || result.kaBanner == null) {
	                        this.errors.push('客户不存在');
	                        error = true;
	                    } else {
                            let kaBanerStr = result.kaBanner.replace(/amp;/g, '');
                            kaBanerStr = result.kaBanner.replace(/&#39;/g, '\'');
	                        this.kaBanner = kaBanerStr;
	                    }
	                    if(result.CRM == '' || result.CRM == null) {
	                        this.errors.push('CRM Code 不存在');
	                        error = true;
	                    } else {
	                        this.CRM = result.CRM;
	                    }
	                    if (result.fiscalYear == 'errorYear') {
	                        this.errors.push('财年错误');
	                        error = true;
	                    }
                        if (this.DM != 'Y' && this.DM != 'N' && this.DM != '' && this.DM != undefined) {
                            this.errors.push('DM 错误');
                            error = true;
                        }
                        this.secondDisplayStoreNO = this.secondDisplayStoreNO.replace(/,/g, '');
                        if ((isNaN(this.secondDisplayStoreNO) || this.secondDisplayStoreNO == '')&& this.DM == 'N') {
                           this.secondDisplayStoreNO = 0;
                        } else if ((isNaN(this.secondDisplayStoreNO) || this.secondDisplayStoreNO == '' || this.secondDisplayStoreNO <= 0)&& this.DM == 'Y') {
                            this.errors.push('二次陈列门店数错误');
                            error = true;
                        }else if (this.secondDisplayStoreNO < 0) {
                            this.errors.push('二次陈列门店数错误');
                            error = true;
                        }
                        this.posterFee = this.posterFee.replace(/,/g, '');
                        if (isNaN(this.posterFee) || this.posterFee == '') {
                            this.posterFee = 0;
                        } else if (this.posterFee < 0) {
                            this.errors.push('海报费错误');
                            error = true;
                        }
                        this.displayFee = this.displayFee.replace(/,/g, '');
                        if (isNaN(this.displayFee) || this.displayFee == '' ) {
                            this.displayFee = 0;
                        } else if (this.displayFee < 0) {
                            this.errors.push('陈列费错误');
                            error = true;
                        }
                        this.unitPrice = this.unitPrice.replace(/,/g, '');
	                    if (isNaN(this.unitPrice) || this.unitPrice == '' || this.unitPrice < 0) {
	                        this.errors.push('产品零售价错误');
	                        error = true;
	                    }
                        this.promotionPrice = this.promotionPrice.replace(/,/g, '');
	                    if (isNaN(this.promotionPrice) || this.promotionPrice == '' || this.promotionPrice < 0) {
	                        this.errors.push('促销单价错误');
	                        error = true;
	                    }
                        
                        this.purchasePrice = this.purchasePrice.replace(/,/g, '');
	                    if (isNaN(this.purchasePrice) || this.purchasePrice == '' || this.purchasePrice < 0) {
	                        this.errors.push('正常进价错误');
	                        error = true;
	                    }
                        this.promotionPurchasePrice = this.promotionPurchasePrice.replace(/,/g, '');
	                    if (isNaN(this.promotionPurchasePrice) || this.promotionPurchasePrice == '' || this.promotionPurchasePrice < 0) {
	                        this.errors.push('促销进价错误');
	                        error = true;
	                    }
                        this.planQty = this.planQty.replace(/,/g, '');
	                    if (isNaN(this.planQty) || this.planQty == '' || this.planQty < 0) {
	                        this.errors.push('预计销量错误');
	                        error = true;
	                    }

	                    if (!isNaN(this.purchasePrice) && !isNaN(this.unitPrice) && parseFloat(this.purchasePrice) > parseFloat(this.unitPrice)) {
	                    	this.errors.push('正常进价需小于等于产品零售价');
	                        error = true;
	                    }
                        this.subsidies = this.subsidies.replace(/,/g, '');
	                    if (this.promotionMode == 'scan data' && this.subsidies - (this.unitPrice - this.promotionPrice) > 0.000001) {
	                    	this.errors.push('单瓶补贴需小于等于产品零售价-促销单价');
	                        error = true;
	                    }
	                    // var startDateValidation = this.startDate.match(/^(\d{4})(-)(\d{2})(-)(\d{2})$/);
	                    // var endDateValidation = this.endDate.match(/^(\d{4})(-)(\d{2})(-)(\d{2})$/);
 
						// if(startDateValidation == null){
						// 	this.errors.push('开始时间格式错误，正确时间格式为: 2020/03/13');
	     //                    error = true;
						//  }
						// if(endDateValidation == null){
						// 	this.errors.push('结束时间格式错误，正确时间格式为: 2020/06/13');
	     //                    error = true;
						// }
						if (result.itemGroupId == undefined &&  (result.subBrandId == null || result.subBrandId == '')) {
							this.errors.push('不存在该 子品牌Code 与 Bottle Size 的产品');
	                        error = true;
						}
						if (result.exsitPlan != null && result.exsitPlan != '') {
							this.errors.push('该 Trade Plan 在系统中存在已审批记录，记录为:' + result.exsitPlan);
	                        error = true;
						}
						if (result.budgetPlan == 'noBP') {
							this.errors.push('未找到与此Trade Plan 匹配的 Budget Plan记录');
	                        error = true;
						}
                        if (result.LPPPrice == 'invalid') {
                            this.errors.push('未找到该 子品牌Code 与 Bottle Size 的最低价格');
                            error = true;
                        }
                        if (result.cityRegion != undefined && result.cityRegion == 'unfit') {
                            this.errors.push('城市与所填区域不匹配');
                            error = true;
                        }
                        if (this.DM == 'Y' && (this.secondDisplayStoreNO == '' || this.secondDisplayStoreNO == undefined || this.secondDisplay == '' || this.secondDisplay == undefined )) {
                            this.errors.push('当DM为Y时，二次门店和二次门店数需填写');
                            error = true;
                        }
                        if (!error && !isNaN(this.promotionPrice) && this.promotionPrice != '' && this.promotionPrice < result.LPPPrice) {
                            this.errors.push('促销单价低于最低价格,最低价为:' + result.LPPPrice);
                            caution = true;
                        }


                        this.customerId = result.customerId;
                        this.subBrandId = result.subBrandId;
                        this.itemGroupId = result.itemGroupId;
                        this.channelId = result.channelId;
                        this.ownerId = result.ownerId;
                        this.regionName = result.regionName;
						
						this.errors.forEach((err) =>{
							this.errorStr += err + ';';
						});
						if (this.errorStr.length > 0) {
					        this.errorStr = this.errorStr.substr(0, this.errorStr.length - 1);
					    }

	                    this.loading = false;
                        if (error) {
                            this.status = 'error';
                        } else if (caution) {
                            this.status = 'caution';
                        } else {
                            this.status = 'ready';
                        }

	                    if (error) {
	                        $scope.flag.reportBtnShow = true;
	                        $scope.errorCount++;
	                        $scope.errorBatchs.push(this);
	                    } else {
	                        $scope.successCount++;
	                        $scope.successBatchs.push(this);
	                    }
	                    
	                }

				}

		        function downloadCsv(rows, csvName) {
				    let csvContent = rows.map(e => e.join(",")).join("\n");
				    var encodedUri = encodeURI(csvContent);
				    var universalBOM = "\uFEFF";
				    var link = document.createElement("a");
				    link.setAttribute('href', 'data:text/csv; charset=utf-8,' + encodeURIComponent(universalBOM+csvContent));
				    link.setAttribute("download", csvName);
				    document.body.appendChild(link);

				    link.click();
				}

                function workbook2blob(workbook) {
                    var wopts = {
                        bookType: "xlsx",
                        bookSST: false,
                        type: "binary"
                    };
                    var wbout = XLSX.write(workbook, wopts);
                    function s2ab(s) {
                        var buf = new ArrayBuffer(s.length);
                        var view = new Uint8Array(buf);
                        for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;
                        return buf;
                    }
                    var blob = new Blob([s2ab(wbout)], {
                        type: "application/octet-stream"
                    });
                    return blob;
                }

                function openDownloadDialog(blob, fileName) {
                    if (typeof blob == "object" && blob instanceof Blob) {
                        blob = URL.createObjectURL(blob);
                    }
                    var aLink = document.createElement("a");
                    aLink.href = blob;
                    aLink.download = fileName || "";
                    var event;
                    if (window.MouseEvent) event = new MouseEvent("click");
                    else {
                        event = document.createEvent("MouseEvents");
                        event.initMouseEvent( "click", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null );
                    }
                    aLink.dispatchEvent(event);
                }


				function setupUploadCtrl(myApp){
				    myApp.controller('uploadCtrl', function($scope, $window, $location){
				        console.log('uploadCtrl');
				        $('.tabContent').hide();
				        $('.tabSpace').hide();
				        $('td').tooltip();
                        var uploadCmtStr = '{!uploadComments}';
                        var uploadComments = uploadCmtStr.split(';');
				        $scope.upload = {show:false};
				        $scope.showReload = false;
                        $scope.xlsxSheet2 = [];
                        $scope.xlsxSheet3 = [];
                        $scope.xlsxSheet4 = [['导入说明'],[uploadComments[0]],[uploadComments[1]],[uploadComments[2]],[uploadComments[3]],[uploadComments[4]]];

				        $scope.flag = {batchSubmitReady:false,reportBtnShow:false,pendingSubmit:0};
				        $('#csv-file').change(function(){
				            if(this.files[0]!=null) {
                                console.log((this.files[0].name));
                                let fileName = this.files[0].name;
                                if (fileName.length > 10) {
                                    $('#csv-select').html('<i class="fa fa-file" aria-hidden="true"></i> '+ fileName.substring(0,10));
                                    // $('#csv-select').html('<i class="fa fa-file" aria-hidden="true"></i> '+ '');
                                } else {
                                    $('#csv-select').html('<i class="fa fa-file" aria-hidden="true"></i> '+fileName);
                                    // $('#csv-select').html('<i class="fa fa-file" aria-hidden="true"></i> '+ '');
                                }
                                $scope.uploadCSV();
                            } else {
                                $('#csv-select').html('<i class="fa fa-file" aria-hidden="true"></i> 选择文件...');
                            }
				        });

				        $scope.downloadProducts = () => {
				        	$scope.showSpinner = true;
				        	ASI_CRM_CN_TP_TradePlanUpload.downloadProducts((result, event) => 
		                        {
		                            // console.log(event);
		                            if (event.status) {
		                                $scope.showSpinner = false;
                                        $scope.xlsxSheet2 = result;
                                        ASI_CRM_CN_TP_TradePlanUpload.downloadCitys((result1, event1) => 
                                        {
                                            // console.log(event1);
                                            if (event1.status) {
                                                $scope.showSpinner = false;
                                                $scope.xlsxSheet3 = result1;
                                                if ($scope.xlsxSheet2.length > 0 && $scope.xlsxSheet3.length > 0) {
                                                    var sheet2 = XLSX.utils.aoa_to_sheet($scope.xlsxSheet2);
                                                    var sheet3 = XLSX.utils.aoa_to_sheet($scope.xlsxSheet3);
                                                    var sheet4 = XLSX.utils.aoa_to_sheet($scope.xlsxSheet4);
                                                    var wb = XLSX.utils.book_new();
                                                    XLSX.utils.book_append_sheet(wb, sheet3, "城市列表");
                                                    XLSX.utils.book_append_sheet(wb, sheet2, "品牌 产品列表");
                                                    XLSX.utils.book_append_sheet(wb, sheet4, "导入说明");
                                                    const workbookBlob = workbook2blob(wb);
                                                    openDownloadDialog(workbookBlob, '基础信息.xlsx');
                                                }
                                                $scope.showSpinner = false;
                                                $scope.$apply();
                                                //downloadCsv(result,'城市列表.csv');
                                            } else {
                                                $scope.showSpinner = false;
                                                alert('下载城市列表出错：' + event.message);
                                            }
                                        }
                                        ,{buffer: false,escape: true, timeout: 120000}
                                        );
		                                //downloadCsv(result,'产品列表.csv');
		                            } else {
		                                $scope.showSpinner = false;
		                                alert('下载产品信息出错：' + event.message);
		                            }
		                        }
		                        ,{buffer: false,escape: true, timeout: 120000}
		                    );

		                    
                            
				        }

				        $scope.downloadFailReport = () => {
				            //console.log($scope.uploadBatchs);
				            var errorStr = '{!errorHeader}';
		                    var errorHeader = errorStr.split(',');
		                    var rows = [[errorHeader]];
		                    $scope.uploadBatchs.forEach((item,index)=>{
		                        console.log(item.outputCSV());
		                        rows = rows.concat(item.outputCSV());
		                    });
				            downloadCsv(rows, "促销计划模板Error.csv");
				        }
				         $scope.submitAll = () =>{
		                    var tmpList = [];
                            let hasLPPError = false;
		                    for(var index = 0; index < $scope.uploadBatchs.length; index++) {
		                        if ($scope.uploadBatchs[index].status == 'error' || $scope.uploadBatchs[index].status == 'loading') {
		                            alert('存在不合格导入数据或数据未检视完成，请检查后再导入');
		                            return;
		                        }
                                if ($scope.uploadBatchs[index].status == 'caution') {
                                    hasLPPError = true;
                                }
		                        tmpList.push($scope.uploadBatchs[index]);		                        
		                    }
                            if (hasLPPError) {
                                if (!confirm('当前有数据促销价格小于LPP，请确认是否继续保存?')) return;
                            }
		                    $scope.showSpinner = true;
		                    ASI_CRM_CN_TP_TradePlanUpload.saveData(JSON.stringify(tmpList),(result, event) => 
		                        {
		                            // console.log(event);
		                            if (event.status) {
		                                alert('Trade Plan 保存成功！');
                                		window.location = "/apex/ASI_CRM_CN_TP_MOTTradePlanList";
		                                $scope.$apply();
		                            } else {
		                                $scope.showSpinner = false;
		                                $scope.$apply();
		                                alert('导入报错：' + event.message);
		                            }
		                        }
		                        ,{buffer: false,escape: true, timeout: 120000}
		                    );
		                }

				        $scope.submitOrder = (index) => {
				            if($scope.flag.pendingSubmit==null) $scope.flag.pendingSubmit=0;
				            $scope.flag.reportBtnShow = !(++$scope.flag.pendingSubmit > 0);
				            var order = $scope.uploadBatchs[index];
				            order.submitOrder(() => {
				                if(--$scope.flag.pendingSubmit <=0) $scope.flag.reportBtnShow = true;
				                $scope.$apply();
				            });
				        }

				        $scope.uploadCSV = () => {
				        	console.log('进' + new Date().getTime());
				            let fileinput = $('#csv-file').prop('files')[0];
				            if(fileinput==null) {
				                alert('Please upload CSV');
				                return;
				            }
                            var csvFile = document.getElementById('csv-file');
                            csvFile.value = '';
				            $scope.flag.reportBtnShow = false;
				            $scope.flag.batchSubmitReady = false;
				            $scope.showReload = true;
				            $scope.batchCount = 0;
				            $scope.errorCount = 0;
				            $scope.successCount = 0;
				            $scope.uploadBatchs = [];
				            $scope.successBatchs = [];
				            $scope.errorBatchs = [];
				            Papa.parse(fileinput, {
				               
				                complete: (results, file) => {
				                    var order = [];
				                    
				                    for(var rowId = 0; rowId < results.data.length; rowId++){
				                        var row = results.data[rowId];
				                        if(rowId >= 1 && row != undefined && row[2] != null && row[2] != '') {
                                            order = [];
                                            order.push(row);
				                            $scope.uploadBatchs.push(new UploadedOrder(JSON.parse(JSON.stringify(order)),$scope.uploadBatchs.length+1,$scope));
				                            
				                        }
                                        
				                        
				                    }
				                    console.log(new Date().getTime());
				                    // $scope.uploadBatchs.push(new UploadedOrder(JSON.parse(JSON.stringify(order)),$scope.uploadBatchs.length+1,$scope));

				                    $scope.uploadBatchs.forEach((order,index)=>{

				                        order.checkUploadData($scope);
				                    });
				                    // $scope.selectHeader(0);
				                    $scope.upload.show = true;
				                    // console.log('show' + $scope.uploadBatchs);
				                    $scope.batchCount = $scope.uploadBatchs.length;
				                    $scope.$apply();
				                    // alignPreviewTable();
				                }

				            });
				        };

				    });
				}
	            var myApp = angular.module("TradePlanApp", []);
	            setupUploadCtrl(myApp);
	        </script>
       	</body>
    </html>
</apex:page>