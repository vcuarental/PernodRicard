<apex:page standardStylesheets="true" sidebar="{!isSFSidebarEnabled}" tabStyle="RemedyforceConsole__tab" showHeader="true" showChat="true" controller="BMCServiceDesk.RemedyforceConsole" extensions="BMCServiceDesk.ChatService" title="{!JSENCODE($Label.bmcservicedesk__remedyforce_console)}">
	<c:ConsoleComponent ConsoleObjectName="{!objectName}" isForRFConsoleRequest="true" rendered="{!IF((isRFConsoleEnabled && showViewMenu),true, false)}"/>
<head>
	<link rel="stylesheet" href="{!$Resource.SDEFStyles}/RemedyForceConsole.css" type="text/css" />
</head>
	<apex:form styleclass="rf-console-main">
	<apex:actionFunction action="{!deleteQuery}" name="deleteQuery" rerender="qvListPanel" onComplete="updateMenuItems();">
        <apex:param assignTo="{!nodeId}" name="nodeId" value=""/>
    </apex:actionFunction>
    <apex:actionFunction action="{!updateMyQVList}" name="updateMyQVList" rerender="qvListPanel" onComplete="updateMenuItems();">
    </apex:actionFunction>
    <apex:actionFunction action="{!copyQuery}" name="copyQuery" rerender="qvListPanel" onComplete="updateMenuItems('copy');">
        <apex:param assignTo="{!nodeId}" name="nodeId" value=""/>
        <apex:param assignTo="{!queryName}" name="queryName" value=""/>
    </apex:actionFunction>
 <apex:pageMessages id="pageMessage" escape="false" />
 <apex:outputPanel rendered="{!isRFConsoleEnabled}"> 
<style>
	 /* To avoid image url corruption due to css minification. */
    .switch input:checked ~ .switch__slider {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 24 24'%3E%3Cpath d='M1,12.3l1.9-2l5.8,5.9L21.1,3.8l1.9,2L8.8,20.2L1,12.3z'/%3E%3C/svg%3E");
    }
 </style>  
<table  id="rf-table-main" >
<tr>  
    <td>
         <a href="#" onclick="toggleSFHeader();">
        <div class="ShowSFheader" id="divToggleView" title="{!JSENCODE($Label.TooltipMaximize)}">
        </div>
         </a>
     </td>
</tr>

    <tr>
        <td>
         <div id="rf-ticker"  class="rf-ticker-div">
		   <table width="100%" border="0" cellpadding="0" cellspacing="0" height="100%">
           	<tr>
           		
           		<td>
           		
                 <div id="viewOptions"     title="{!JSENCODE($Label.SwitchModule)}" class="rf-view-div" >{!JSENCODE($Label.mspAdminView)}
           		 
                 <span class="rf-view-arrow d-icon-angle_down dpl-icon"></span>
               </div> 
                 
                </td>
                <td id="broadcast-ticker-parentd" width="94%">
                    
                </td>
                <td id="messageScrollContainer" width="94%" style="display:none;" >
                    <table width="100%;"> 
                        <tr>
                            <td class="d-icon-left-speaker broadcastLeftIconCls broadcast_message_left_icon" onclick="showBroadcast();"></td>
                            <td id="BroadcastPageNumber" class="broadcast_ticker" onclick="showBroadcast();">
                                <div id="BRCurrentPage"></div>
                                <div>{!JSENCODE($Label.Of)}</div>
                                <div id="BRTotalPages"></div>
                            </td>
                            <td class="broadcast_message_scroll fadein" >
                                <div onclick="showBroadcast();" class="broadcastContent" id ="BroadcastMessage"></div>
                            </td>
                        </tr>
                    </table>
                </td>
                <td id="textScrollContainer" width="1%" style="display:none;min-width:30px !important;" class="broadcastIconTdCls" onclick="showBroadcast();" >
                    <span id="view-brd-msg" class="d-icon-speaker broadcastIconCls" title="{!$Label.viewBroadcast}" />
                </td>
                <td width="1%" style="{!IF(isCustomerExperienceEnabled,'display:table-cell;min-width:30px !important;','display:none')}">
                    <span id="cust-survey-link" class="d-icon-file_chart_o rateExperienceIconCls" title="{!$Label.PSATRateYourExperience}" onclick="popupSurveyWindow();"/>
                </td>
                <td style="{!IF(isConsoleMetricBarEnabled,'','display:none')}" onclick="showMetrics();" >
                    <div id="metricIcon" class="open-metric-icon" title="{!JSENCODE($Label.ConsoleMetricBar)}" />
                </td>
            </tr>
           </table>
		   </div>
        </td>
   </tr>
    <tr>
        <td style="vertical-align:top;" >
            <apex:outputPanel rendered="{!showViewMenu}">
                <c:ConsoleMetricBar rendered="{!isConsoleMetricBarEnabled}"/>

            	<div id="tabs" class="rf-tab-div" ></div>
           </apex:outputPanel> 
        </td>
       
    </tr>
</table>
  </apex:outputPanel>
  <!-- Use below div popupContainer for displaying popup image from RTF field when clicked. -->
  <div id="popupContainer" class="popupContainerCls">
	<span id="closeImage" class="closeImageCls">&times;</span>
	<img id="popupImage" class="popupImageCls"/>
  </div>
 </apex:form> 
<script>
var broadcastConsole = '{!$Page.BroadcastConsole}';
var incidentConsole = '{!$Page.IncidentConsole}';
var taskConsole = '{!$Page.TaskConsole}';
var changeConsole = '{!$Page.ChangeConsole}';
var releaseConsole = '{!$Page.ReleaseConsole}';
var problemConsole = '{!$Page.ProblemConsole}';
var consoleDashboardPageURL = '{!$Page.ConsoleDashboard}';
var enableWalkthroughFlow = '{!enableWalkthroughFlow }';
var userLanguage = '{!userLanguage}';
var isLightningExperience = '{!isLightningExperience }';
var userLastName = '{!JSENCODE($User.LastName)}';
var wikiUrl = '{!wikiUrl}';
var calledFromConsoleListViewPage = false;
var isRFConsoleEnabled = {!isRFConsoleEnabled},
isConsoleDashboardEnabled = {!isConsoleDashboardEnabled};
var showViewMenu = {!showViewMenu},
isOnlyConsoleDashboardEnabled = {!isOnlyConsoleDashboardEnabled};
var searchAndLinkPage = '{!$Page.SearchAndLink}';
var isRFHotkeysDisabled ={!isRFHotkeysDisabled};

var isSmartViewEnabled = {!IF(isSmartViewEnabled,"true","false")};
var isActivityFeedEnabled = {!IF(isActivityFeedEnabled,true,false)};
var isSFSidebarEnabled = {!IF(isSFSidebarEnabled,true,false)};
var isShowManagePermissionIcon = {!isShowManagePermissionIcon};
var broadcastIntervalId;
var NONPRINT = 'Â¬';
var currentWindowContext = this;//this is main parent page. Thus the variable points to itself.
if({!IF((isRFConsoleEnabled && showViewMenu),true, false)})
{
   
   <apex:outputText value="CRUDFLSCHECK# Both CRUD & FLS check are not required ( Urgency__c,Impact__c is a metadata object)" rendered="false"/> 
	var _RFServerValues = <apex:outputText value="{!RFServerValues}" escape="false"></apex:outputText> 
	var ActionItemIndexValues;
	var broadcastIcon = '{!$Resource.SSThemes}/SSDefaultTheme/SDEFicons/ViewBroadcasts24.png';
	var broadcastPage = '{!$Page.BroadcastWidgetPage}';
	var isRfConsole = true;
    var isRFChatEnabled = {!isRFChatEnabled};
    var isConsoleMetricBarEnabled = {!isConsoleMetricBarEnabled};
	var objectName = '{!JSENCODE(objectName)}';
	var MaxRecordTabCount = {!MaxRecordTabCount}; 
	var myQVlist='';
	var sharedQVlist='';
	var myQVFolderId = '';
    var layoutStatusMap = {};    
	Ext.ns("SingleConsolePage");
   	SingleConsolePage.Labels = {
   		viewIncidentConsole : '{!JSENCODE($Label.IncidentAndServiceRequests)}', 
		ServiceRequestPrefix : '{!JSENCODE($Label.ServiceRequestPrefix)}', 
        viewTaskConsole : '{!JSENCODE($Label.Navigator_Tasks)}',
        viewChangeConsole : '{!JSENCODE($Label.ChangeRequests)}',
        viewProblemConsole : '{!JSENCODE($Label.Navigator_Problems)}',
        viewReleseConsole : '{!JSENCODE($Label.Releases)}',
        viewBroadcastConsole : '{!JSENCODE($Label.Navigator_Broadcasts)}',
        viewIncidentsOnly : '{!JSENCODE($Label.Navigator_Incidents)}',
        viewServiceRequestsOnly : '{!JSENCODE($Label.SSMyHelpRequests)}',
		ProjectedServiceOutage : '{!JSENCODE($Label.Navigator_ProjectedServiceOutage)}',
		viewChangeScheduleConsole : '{!JSENCODE($Label.Navigator_ChangeSchedule)}',
		newServiceRequest : '{!JSENCODE($Label.New)}'+' '+'{!JSENCODE($Label.SSHelpRequest)}',
        IncidentRecordPrefix : '{!JSENCODE($Label.IncidentRecordPrefix)}',
        TaskRecordPrefix : '{!JSENCODE($Label.TaskRecordPrefix)}',
        ProblemRecordPrefix : '{!JSENCODE($Label.ProblemRecordPrefix)}',
        ReleaseRecordPrefix : '{!JSENCODE($Label.ReleaseRecordPrefix)}',
        ChangeRecordPrefix : '{!JSENCODE($Label.ChangeRecordPrefix)}',
        BroadcastRecordPrefix : '{!JSENCODE($Label.BroadcastRecordPrefix)}',
		ServiceOutageRecordPrefix : '{!JSENCODE($Label.ServiceOutageRecordPrefix)}',
		RR_FeatureOutages : '{!JSENCODE($Label.RR_FeatureOutages)}',
        Loading : '{!JSENCODE($Label.SSLoading)}',
        Task : '{!JSENCODE($Label.Task)}',
        Problem : '{!JSENCODE($Label.Problem)}',
        ChangeRequest : '{!JSENCODE($Label.Change_Request)}',
        Release : '{!JSENCODE($Label.Release)}',
        Incident : '{!JSENCODE($Label.Incident)}',
        Broadcast : '{!JSENCODE($Label.Broadcast1)}',
        New : '{!JSENCODE($Label.New)}',
        New_Release : '{!JSENCODE($Label.New_Release)}',
        New_Task : '{!JSENCODE($Label.New_Task)}',
        New_Problem : '{!JSENCODE($Label.New_Problem)}',
        New_ChangeRequest : '{!JSENCODE($Label.New_ChangeRequest)}',
        New_Incident : '{!JSENCODE($Label.New_Incident)}',
        New_Broadcast : '{!JSENCODE($Label.New_Broadcast)}',
		New_ServiceOutage : '{!JSENCODE($Label.New_ServiceOutage)}',
		labelcloseWindow : '{!JSENCODE($Label.closeWindow)}',
		labelcloseWindowLabel : '{!JSENCODE($Label.closeWindowLabel)}',
		RFTabLimitExceedMsg : '{!JSENCODE($Label.RFTabLimitExceedMsg)}',
		ConfirmAction: '{!JSENCODE($Label.Confirm_Action)}',
		Yes: '{!JSENCODE($Label.ExtjsMessageYes)}',
		No: '{!JSENCODE($Label.ExtjsMessageNo)}',
		MyDashboard: '{!JSENCODE($Label.MyDashboardTitle)}',
		MyQuickViews: '{!JSENCODE($Label.Navigator_MyQuickViews)}',
		CreateNewQV : '{!JSENCODE($Label.CreateNewQV)}',
		labelDelete : '{!JSENCODE($Label.Delete)}',
		DeleteQV : '{!JSENCODE($Label.DeleteSelectedQuerySkyWalkerPage)}',
		labelAddQuery : '{!JSENCODE($Label.AddQuery)}',
		labelEnterQVname : '{!JSENCODE($Label.ValidateQueryNameSkyWalkerPage)}',
		labelReenterQVName : '{!JSENCODE($Label.ReenterQVName)}',
		labelWarning : '{!JSENCODE($Label.Warning)}',
		labelQueryNameExisting : '{!JSENCODE($Label.ConsoleUniqueQVValidationErrorMsg)}',
		labelError : '{!JSENCODE($Label.Error)}',
		labelQVEditor : '{!JSENCODE($Label.QuickViewEditor)}',
        SharedQuickViews:'{!JSENCODE($Label.SharedQuickViews)}',
        DeleteQuery:'{!JSENCODE($Label.DeleteQuery)}',
        CopyQuery:'{!JSENCODE($Label.CopyQuery)}',
        EditQVQuery:'{!JSENCODE($Label.EditQVQuery+ ' '+$Label.andForChatter+' '+$Label.ManagePermissions)}',
        defaultForSystemQV:'{!JSENCODE($Label.Default)}',
        managePermissions:'{!JSENCODE($Label.ManagePermissions)}', 
        MultiPageLayoutAccessCloneConfirm: '{!JSENCODE($Label.MultiPageLayoutAccessCloneConfirm)}',
        LayoutInsufficientAccess: '{!JSENCODE($Label.LayoutInsufficientAccess)}',
		LayoutInsufficientAccessGeneric : '{!JSENCODE($Label.LayoutInsufficientAccessGeneric)}',
		Cancel : '{!JSENCODE($Label.Cancel)}',
		DisplayMultipleViews : '{!JSENCODE($Label.DisplayMultipleViews)}',
		DisplayMultipleViewsToolTip: '{!JSENCODE($Label.DisplayMultipleViewsToolTip)}',
		PinUnPinConsoleListToolTip: '{!JSENCODE($Label.PinUnPinConsoleListToolTip)}'
    }  
   } 
        _RFRemotingActions={}
        _RFRemotingActions.ChatAction = "{!$RemoteAction.ChatService.chatAction}";
        _RFRemotingActions.CheckForChatInitialisation = "{!$RemoteAction.ChatService.checkForChatInitialisation}";
        _RFRemotingActions.setAgentAvailability = "{!$RemoteAction.ChatService.setAgentAvailability}";
        _RFRemotingActions.makeAgentAvailable = "{!$RemoteAction.ChatService.makeAgentAvailable}";
        _RFRemotingActions.ChatActionLink = "{!$RemoteAction.ChatService.chatActions}";
        _RFRemotingActions.unlockRecord = "{!$RemoteAction.ChatService.unlockRecord}";
        _RFRemotingActions.unlockRecordWithName = "{!$RemoteAction.ChatService.unlockRecordWithName}"; 
		_RFRemotingActions.insertKeyPrefixData = "{!$RemoteAction.RemedyforceConsole.insertKeyPrefixData}";
        /*Chat related changes*/
       
       
        /*Chat related changes*/
</script>
<c:ChatComponent />
<script id="detailPageJs" src="{!IF(isRFConsoleEnabled, $Resource.SDEFCommonJS, '')}{!IF(isRFConsoleEnabled, '/RemedyForceConsole.js', '')}">
 </script>
 <script id="htmlEncodejs" src="{!IF(isRFConsoleEnabled, $Resource.SDEFCommonJS, '')}{!IF(isRFConsoleEnabled, '/HTML_ENCODE_DECODE.js', '')}">
 </script>
 <apex:outputPanel id="qvListPanel">
 <script>
 
 var tempQVList = new Array();
 var jsonArray=new Object();
 	var i=0; 
    <apex:repeat value="{!myQVList}" var="thing">
            var myqvName='{!JSENCODE(thing.name__c)}';         
            myqvName=myqvName.length > 30?myqvName.substring(0, 30)+'...' : myqvName;
			myqvName=Ext.util.Format.htmlEncode(myqvName);
            var x=new Array();
            x.push({"id":'{!JSENCODE(thing.id)}'});
            x.push({"name":myqvName});
            x.push({"system":'{!thing.System__c}'});
            x.push({"optimized":'{!thing.isQVOptimized__c}'});
 			x.push({"tooltip":'{!JSENCODE(thing.name__c)}'});
 			x.push({"tooltipType":'title'});
 			tempQVList.push(x);
    	i++;
    </apex:repeat>
    
    var j=0;
    var tempSharedQVList=new Array();
    <apex:repeat value="{!sharedQVList}" var="thing">
            var sharedqvName='{!JSENCODE(thing.name__c)}';
			sharedqvName=sharedqvName.length > 30?sharedqvName.substring(0, 30)+'...' : sharedqvName;
			sharedqvName=Ext.util.Format.htmlEncode(sharedqvName);
     
            var ownerName='{!JSENCODE(thing.Owner.Name)}';
			ownerName=Ext.util.Format.htmlEncode(ownerName);
 			var x=new Array();
 			x.push({"id":'{!JSENCODE(thing.id)}'});
			if({!thing.System__c} == true)
				x.push({"name":sharedqvName+' ('+SingleConsolePage.Labels.defaultForSystemQV+')'});
			else
				x.push({"name":sharedqvName+' ('+ownerName+')'});
            x.push({"system":'{!thing.System__c}'});
            x.push({"optimized":'{!thing.isQVOptimized__c}'});
            if({!thing.System__c} == true)
				x.push({"tooltip":'{!JSENCODE(thing.name__c)}'+' ('+SingleConsolePage.Labels.defaultForSystemQV+')'});
			else
				x.push({"tooltip":'{!JSENCODE(thing.name__c)}'+'{!JSENCODE(thing.Owner.Name)}'});
 			x.push({"tooltipType":'title'});
 			tempSharedQVList.push(x);
    	j++;
    </apex:repeat>
 var isAdmin={!IF(isAdmin, "true", "false")};
 myQVFolderId = "{!myQVFolderId}";
 var isToShowMsg="{!isQueryInFolder}";
 var copiedQVId = "{!copiedQVId}";
 var copiedQVName = "{!copiedQVName}";
  var recordLock = "{!JSENCODE(recordLock)}";
 </script>
 </apex:outputPanel>
<script type="text/javascript" src="{!IF(enableWalkthroughFlow, $Resource.SDEFCommonJS, '')}{!IF(enableWalkthroughFlow, '/RFWhatFixFlow.js', '')}"/>
<script type="text/javascript" src="{!IF(enableWalkthroughFlow, $Resource.SDEFCommonJS, '')}{!IF(enableWalkthroughFlow, '/WhatFixScript.js', '')}"/>
<script>
	if(enableWalkthroughFlow=='true') {
		handleLocalizationForRFConsole();
	}
</script>
<script src="{!$Resource.CustomerExperience}/js/CustExpPopupWindow.js"></script>

<apex:outputpanel id="filterpanel">
	<c:FilterComponent FilterObjectName="{!objectName}" FilterAdditionalInfo="console"/> 
</apex:outputpanel>
</apex:page>