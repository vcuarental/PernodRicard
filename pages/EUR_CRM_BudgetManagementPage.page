<!--EUR_CRM_BudgetManagementPage-->
<apex:page standardController="EUR_CRM_Budget__c" extensions="EUR_CRM_BudgetManagementPageController">
    <apex:includeScript value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/libs/jquery/js/jquery-1.9.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/libs/jquery/js/jquery-ui-1.10.3.custom.min.js')}" />
    <script>
        var currentBudget = 0;
        var currentRow;
        $j = jQuery.noConflict();
        
        function preventReturnKeyPress(){
            $j("input,select").keypress(function(e){
                return e.keyCode!==13;
            });
        }

        
        function validate(theInput){
            return /^\d{1,3}(?:(,?)\d{3}(?:\1\d{3})*)?(?:\.\d{1,10})?$/.test(theInput);
        }
        function numToCurrency(num) {
            if (num !== undefined && num !== null && /^-?\d+\.?\d?\d?\d?$/.test('' + num)) {
                return ('' + num).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
            }
            return null;
        }
        function updateCurrentBudget(){
            var x = $j.find('.currentTotalBudget');
            var total = 0;
            var totalCredit = 0;
            var totalDebit = 0;
            $j.each($j.find('.newBudgetCredit'), function(){ //$j.each($j.find('.resultingBudget'), function(){
                console.log('val'+ $j(this).val());
                totalCredit = totalCredit + Number($j(this).val().replace(/,/g, '').replace(' ', ''));
            })
            
            $j.each($j.find('.newBudgetDebit'), function(){ //$j.each($j.find('.resultingBudget'), function(){
                console.log('val'+ $j(this).val());
                totalDebit = totalDebit + Number($j(this).val().replace(/,/g, '').replace(' ', ''));
            })
            
            total = totalCredit - totalDebit;
            
            console.log('Flag - Update Current Budget:'+currentBudget+'||'+totalCredit+'-'+totalDebit+'='+total);
            $j(x).text(numToCurrency(currentBudget - total));
            console.log('++updateCurrentBudget:' + numToCurrency(currentBudget - total));
            
        }
        function updateResultBudget(x){
            
            var row = $j(x).closest('tr');
            var rowId = row.attr("id");
            currentRow = row;
            var parentRow;
            var childRow;
            console.log("Flag - Row Id:" + rowId);
            if (rowId!=undefined && rowId.indexOf("row2")!=-1){
                var parentRowId = rowId.replace("row2", "row1");
                parentRow = $j("#"+parentRowId);
                console.log("Flag - Parent Row:" +parentRowId+"-"+parentRow);
            }else{
                var childRowId = rowId.replace("row1", "row2");
                childRow = $j("#"+childRowId);
                console.log("Flag - Child Row:" +childRowId+"-"+childRow);
            }
            
            var currentBudget = (parentRow!=undefined)?$j(parentRow).find('.currentBudget').text():$j(row).find('.currentBudget').text();                    
            //console.log('FLAG _ TEST:' + currentBudget +'||'+(currentBudget<0)+'||'+ typeof currenyBudget +'||'+parseFloat(currentBudget.toString().replace(' ','')) +'||'+ parseFloat(String(currentBudget)));
            currentBudget = (currentBudget!=undefined)?parseFloat(currentBudget.replace(/,/g, '').replace(' ','')):0.00;
            var newBudget = $j(row).find('.newBudget').val().replace(/,/g, ''); 
            var transactionType = $j(row).find('span.budgetTxn').text();
            newBudget = newBudget?newBudget:'0';
            
            console.log ("Flag - Update Result Budget:"+currentBudget+"-"+newBudget+"-"+transactionType);
            
            if(newBudget.charAt(0) == 0 && newBudget.charAt(1) != '.')
                newBudget = Number(newBudget);
            if(validate(newBudget) && transactionType!=undefined){
                $j(x).removeClass('error-input');
                var resultingBudget;
                //if (parentRow != undefined){
                //  resultingBudget = $j(parentRow).find('.resultingBudget').text();
                //}
                //else{
                //  resultingBudget = $j(row).find('.resultingBudget').text();
                //}
                //resultingBudget = Number(resultingBudget);
                //console.log('Flag - Update Resukt Budget - Check Init Resulting Budget:' + resultingBudget);
                //resultingBudget = (transactionType.toUpperCase().indexOf("CREDIT")!=-1)?(Number(currentBudget) + Number(newBudget)):(Number(currentBudget) - Number(newBudget));
                console.log('Flag - Update Result Budget - Check Params:' + transactionType + '-'+ childRow);
                
                if (transactionType.toUpperCase().indexOf("CREDIT")!=-1 && childRow!=undefined){
                    resultingBudget = currentBudget + Number(newBudget);//Number(currentBudget) + Number(newBudget);
                    var debitBudget = $j(childRow).find('.newBudget').val().replace(/,/g, ''); 
                    resultingBudget -= Number(debitBudget);
                    console.log('Flag - Update Result Budget - Check Params 1:' + currentBudget + '+'+ Number(newBudget)+'-'+Number(debitBudget)+'='+resultingBudget+'--'+(-31+1-0));
                }else if (transactionType.toUpperCase().indexOf("CREDIT")!=-1 && childRow==undefined){
                    resultingBudget = Number(currentBudget) + Number(newBudget);
                    console.log('Flag - Update Result Budget - Check Params 2:' + Number(currentBudget) + '+'+ Number(newBudget) + '='+resultingBudget);
                }
                else{
                    var creditBudget = $j(parentRow).find('.newBudget').val().replace(/,/g, ''); 
                    resultingBudget = Number(currentBudget) + Number(creditBudget);
                    resultingBudget -= Number(newBudget);
                    console.log('Flag - Update Result Budget - Check Params 3:' + Number(currentBudget) + '+'+ Number(creditBudget)+'-'+Number(newBudget)+'='+resultingBudget);
                }
                //Update Resulting Budget
                if (parentRow != undefined){
                    $j(parentRow).find('.resultingBudget').text(numToCurrency(resultingBudget));
                }
                else{
                    $j(row).find('.resultingBudget').text(numToCurrency(resultingBudget));
                }
                $j(row).find('.newBudget').val(numToCurrency(newBudget));
                console.log('Flag - Update Result Budget - Resulting Budget:'+resultingBudget);
                updateCurrentBudget();
            }else{
                $j(x).addClass('error-input');
                console.log('bad');
            }
        }
        function updateNewBudget(x){
            var row = $j(x).closest('tr');
            var cBudget = $j(row).find('.newBudget').val().replace(/,/g, '');
            var inc = $j(row).find('.inc').val(); 
            var resultingBudget = 0;
            
            if($j(x).val() == '+')
                resultingBudget = Number(cBudget) + Number(inc);
            else
                resultingBudget = Number(cBudget) - Number(inc);
            $j(row).find('.newBudget').val(numToCurrency(resultingBudget));

            console.log('updateNewBudget - change:'+resultingBudget);
            updateCurrentBudget();
            updateResultBudget(x);
        }
        function clearNewBudget(x){
            var row = $j(x).closest('tr');
            $j(row).find('.newBudget').val(0);
            
            console.log('changed!');
            updateCurrentBudget();
            updateResultBudget(x);
        }

        $j(document).ready(function() {
            console.log('hello world!');
            preventReturnKeyPress();
            
            var x = $j($j.find('.currentTotalBudget')).text();
            currentBudget = Number(x);
            updateCurrentBudget();
        });
        
    function startLoading(){
        $j('#load_scrl').css('top', $j(document).scrollTop() + 200);
        $j('.loadingBox').show();
    }
    
    function endLoading(){
        $j('.loadingBox').hide();
    }

    </script>
    <style>
        input[name='clone']{
            display:none;
        } 
        input[name='del']{
            display:none;
        } 
        input[name='edit']{
            display:none;
        } 
        input[name='eur_crm_transfer_budget_btn']{
            display:none;
        }
        input[name='eur_crm_transfer_generic_btn']{
            display:none;
        }
        input.error-input {
            border-color: red;
        }input[name='eur_crm_manage_budget']{
            display:none;
        } 
    </style>
    
    <apex:actionStatus id="loading" onstart="startLoading();" onstop="endLoading();" />
    <div id="contentLoading" style="display:none;">
        <div style="text-align: center;">
            <p>Loading...
            <img src="/img/loading.gif" alt="Loading graphic" /></p>
        </div>
    </div>
    
    <div id="load_scrl" class="loadingBox loader" style="display:none"><div style="text-align: center;">
            <p>Loading...
            <img src="/img/loading.gif" alt="Loading graphic" /></p>
        </div>
    </div>
    <div class="loadingBox overlay"> </div>

    <apex:sectionHeader subtitle="{!$Label.EUR_CRM_Budget_Mgt}" title="{!$ObjectType.EUR_CRM_Budget__c.Label}"/>
    <apex:form id="mainForm">
    <apex:pageBlock id="budgetDisplay">
    <apex:pageMessages id="pageMsg"></apex:pageMessages>
    <apex:detail subject="{!EUR_CRM_Budget__c.id}" inlineEdit="false" title="false" relatedList="false"/>
    
        <apex:inputHidden id="pageMarkIH" value="{!pageMark}"/>
        <apex:inputHidden value="{!EUR_CRM_Budget__c.ownerid}"/>
        <apex:inputHidden value="{!EUR_CRM_Budget__c.EUR_CRM_Fiscal_Year__c}"/>
        <apex:actionFunction name="goToPageAF" action="{!goToPage}" reRender="budgetDisplay,currentPage" oncomplete="preventReturnKeyPress();"/>
        <apex:actionFunction name="removeManageIte" action="{!removeManageItem}" reRender="budgetDisplay,currentPage" oncomplete="preventReturnKeyPress();"/>
        
            <apex:pageBlockButtons >
                <apex:commandButton value="{!$Label.EUR_CRM_Save}" action="{!save}"/>
                <apex:commandButton value="{!$Label.EUR_CRM_Quick_Save}" action="{!quickSave}" oncomplete="console.log('Done with Quick Save'); preventReturnKeyPress();"/>
                <apex:commandButton value="{!$Label.EUR_CRM_Exit}" action="{!exit}"/>
            </apex:pageBlockButtons>
            <apex:pageBlockSection columns="1">
            <apex:outputText value="{!EUR_CRM_Budget__c.EUR_CRM_Current_Balance__c}" styleClass="currentTotalBudget"></apex:outputText>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1">
                <apex:outputPanel >
                <table border="0" class="list" cellspacing="0" cellpadding="0">
                    <tr class="headerRow">
                        <td>{!$ObjectType.EUR_CRM_Budget__c.fields.Name.label}</td>
                        <td>{!$Label.EUR_CRM_Owner_Name}</td>
                        <td>{!$ObjectType.EUR_CRM_Budget__c.fields.EUR_CRM_Current_Balance__c.label}</td>
                        <td>{!$ObjectType.EUR_CRM_Budget_Transaction__c.fields.EUR_CRM_Transaction_Type__c.label}</td>
                        <td>{!$ObjectType.EUR_CRM_Budget_Transaction__c.fields.EUR_CRM_Amount__c.label}</td>
                        <td>{!$Label.EUR_C_RM_Resulting_Balance}</td>
                    </tr>
                    <apex:repeat value="{!displayList}" var="item">
                        <tr id="{!item.budget}_row1" class="dataRow" onmouseover="if (window.hiOn){hiOn(this);}" onmouseout="if (window.hiOff){hiOff(this);}">
                            <td rowspan="2"><apex:outputtext value="{!item.budgetName}"></apex:outputtext></td>
                            <td rowspan="2"><apex:outputtext value="{!item.ownerName}"></apex:outputtext></td>
                            <td rowspan="2"><apex:outputText value="{0, number, ###,###,###,##0}" styleClass="currentBudget"> 
                                <apex:param value="{!item.currentBudget}"/>
                                </apex:outputText>
                            </td>
                            <td><apex:outputtext value="Credit (+)" styleclass="budgetTxn"/></td>
                            <td>
                                <apex:inputText value="{!item.budgetTransactions[CREDIT]}" styleClass="newBudget newBudgetCredit" onkeyup="updateResultBudget(this)" onchange="updateResultBudget(this)" style="text-align:right"/> 
                                &nbsp;&nbsp;
                                <input type = 'Button' value="+" class ='btn' style="width:20px" onclick="updateNewBudget(this)"/>
                                <input type = 'Button' value="-" class ='btn' style="width:20px" onclick="updateNewBudget(this)"/>
                                &nbsp;&nbsp;
                                <select class="inc" style="width:60px;text-align:right">
                                    <option value="1" style="text-align:right">1</option>
                                    <option value="10" style="text-align:right">10</option>
                                    <option value="100" style="text-align:right">100</option>
                                    <option value="1000" style="text-align:right">1,000</option>
                                </select>
                                &nbsp;&nbsp;
                                <input type = 'Button' value="Clear" class ='btn' onclick="clearNewBudget(this)"/>  
                            </td>
                            <td rowspan="2">
                                <apex:outputText value="{0, number, ###,###,###,##0}"  styleClass="resultingBudget">
                                    <apex:param value="{!item.resultingBudget}"/>
                                </apex:outputText>
                            </td>
                        </tr>
                        <tr id="{!item.budget}_row2" class="dataRow" onmouseover="if (window.hiOn){hiOn(this);}" onmouseout="if (window.hiOff){hiOff(this);}">
                            <td><apex:outputtext value="Debit (-)" styleclass="budgetTxn"/></td>
                            <td>
                                <apex:inputText value="{!item.budgetTransactions[DEBIT]}" styleClass="newBudget newBudgetDebit" onkeyup="updateResultBudget(this)" onchange="updateResultBudget(this)" style="text-align:right"/> 
                                &nbsp;&nbsp;
                                <input type = 'Button' value="+" class ='btn' style="width:20px" onclick="updateNewBudget(this)"/>
                                <input type = 'Button' value="-" class ='btn' style="width:20px" onclick="updateNewBudget(this)"/>
                                &nbsp;&nbsp;
                                <select class="inc" style="width:60px;text-align:right">
                                    <option value="1" style="text-align:right">1</option>
                                    <option value="10" style="text-align:right">10</option>
                                    <option value="100" style="text-align:right">100</option>
                                    <option value="1000" style="text-align:right">1,000</option>
                                </select>
                                &nbsp;&nbsp;
                                <input type = 'Button' value="Clear" class ='btn' onclick="clearNewBudget(this)"/>  
                            </td>
                        </tr>
                    </apex:repeat>
                </table>
                </apex:outputPanel>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1">
                <apex:outputPanel id="pageButtons">
                     <table style="width:100%">
                        <td width="33%">
                            &nbsp;
                        </td>
                        <td width="33%" align="center">

                            <!-- Pagination must use postback to work -->
                            <apex:commandlink style="text-decoration:none; font-weight: bold;" value="<<" action="{!goFirstPage}" /> |
                            <apex:commandlink style="text-decoration:none; font-weight: bold;" value=" < Previous" action="{!goPreviousPage}" /> |
                            <apex:commandlink style="text-decoration:none; font-weight: bold;" value=" Next >" action="{!goNextPage}" /> |
                            <apex:commandlink style="text-decoration:none; font-weight: bold;" value=" >>" action="{!goLastPage}" />

<!--
                            <a href="javascript: paging('first')" style="text-decoration:none" title="First"><b> <apex:outputText value="<<"/> </b></a> |
                            <a href="javascript: paging('prev')" style="text-decoration:none" title="Previous"><b> <apex:outputText value="< Previous"/> </b></a> |
                            <a href="javascript: paging('next')" style="text-decoration:none" title="Next"><b> <apex:outputText value="Next >"/> </b></a> |
                            <a href="javascript: paging('last')" style="text-decoration:none" title="Last"><b> <apex:outputText value=">>"/> </b></a>
-->
                        </td>
                        <td width="33%" align="right">
                            <apex:outputText: value="Page {!curPage} of {!maxPage}" id="currentPage"/>
                        </td>
                    </table>
                    
                </apex:outputPanel> 
            </apex:pageBlockSection>
        </apex:pageBlock>    
    </apex:form>
</apex:page>