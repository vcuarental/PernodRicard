<apex:page standardController="Campaign" id="thePage" lightningStylesheets="true" extensions="MMPJ_XRM_Segmentation_Controller"> 
    <!-- <apex:includeScript value="{!$Resource.MMPJ_TOPG_jQuery}"/> -->
    <apex:includeScript value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/jquery-3.2.1.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/DatePickerXcalendar/codebase/fonts/font_roboto/roboto.css')}"
    />
    <apex:stylesheet value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/DatePickerXcalendar/codebase/dhtmlxcalendar.css')}"
    />
    <apex:includeScript value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/DatePickerXcalendar/codebase/dhtmlxcalendar.js')}"
    /> 
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <!-- <apex:includeScript value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/Bootstrap/js/bootstrap.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/Datepicker/datepicker/js/bootstrap-datepicker.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/Bootstrap/css/bootstrap.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.MMPJ_XRM_Ressources, '/MMPJ_XRM_Ressources/Datepicker/datepicker/css/datepicker.css')}"/> -->
    <apex:form id="theForm">
        <apex:inputText value="{!searchCriteriasModified}" id="searchCriteriasModified" style="display: none" />
        <apex:actionFunction action="{!lookForSearchInput}" name="lookForSearchInput" />
        <apex:actionStatus id="status">
            <apex:facet name="start">
                <c:MMPJ_XRM_LoadingAjax BackColor="#efefef" borderColor="#DCDCDC" borderSize="1" height="45px" width="130px" ImageUrl="{!$Resource.MMPJ_XRM_LoadingIcon}"
                    Message="Traitement en cours" />
            </apex:facet>
        </apex:actionStatus>
        <apex:sectionHeader title="{!Campaign.Name}" rendered="{!SegmentationFromCampaign}" />
        <apex:pageBlock title="Critères de recherche" id="criterias">
            <apex:pageBlockSection columns="1">
                <apex:pageBlockTable columns="4" var="c" value="{!searchCriterias}">
                    <apex:column title="Critère" headerValue="Critère">
                        <apex:selectList value="{!c.selectedCritere}" multiselect="false" size="1" onchange="document.getElementById('{!$Component.searchCriteriasModified}').value = '{!c.numero}';lookForSearchInput();">
                            <apex:selectOptions value="{!criteresOptions}" />
                            <!-- <apex:repeat var="s" value="{!criteresOptions}" >
                                <apex:selectOption itemValue="{!s.Value}" itemLabel="{!s.Label}"/>
                            </apex:repeat>  -->
                        </apex:selectList>
                    </apex:column>
                    <apex:column title="Opérateur" headerValue="Opérateur">
                        <apex:selectList value="{!c.selectedOperateur}" multiselect="false" size="1">
                            <apex:selectOptions value="{!operateursOptions}" />
                        </apex:selectList>
                    </apex:column>
                    <apex:column title="Valeur" headerValue="Valeur">
                        <apex:inputText value="{!c.searchText}" id="searchInputText" rendered="{!AND(c.selectedCritere <> '', OR(criteresOptionsMap[c.selectedCritere].inputType == 'Text',criteresOptionsMap[c.selectedCritere].inputType == 'Number'))}"
                        />
                        <apex:inputCheckbox value="{!c.searchText}" id="searchInputCheckBox" rendered="{!AND(c.selectedCritere <> '', criteresOptionsMap[c.selectedCritere].inputType == 'CheckBox')}"
                        />
                        <apex:selectList id="searchInputPickList" value="{!c.searchText}" styleClass="js-example-basic-single" multiselect="false"
                            size="1" rendered="{!AND(c.selectedCritere <> '', OR(criteresOptionsMap[c.selectedCritere].inputType == 'PickList',criteresOptionsMap[c.selectedCritere].inputType == 'PickListFromLabel',criteresOptionsMap[c.selectedCritere].inputType == 'RecordType'))}">
                            <apex:selectOptions value="{!criteresOptionsMap[c.selectedCritere].options}" />
                        </apex:selectList>
                        <apex:selectList id="searchInputPickListUser" rendered="{!AND(c.selectedCritere <> '',criteresOptionsMap[c.selectedCritere].inputType == 'User')}"
                            value="{!c.searchText}" multiselect="false" size="1" styleClass="js-example-basic-single">
                            <apex:selectOptions value="{!criteresOptionsMap[c.selectedCritere].options}" />
                        </apex:selectList>
                        <apex:selectList id="searchInputPickListSociete" rendered="{!AND(c.selectedCritere <> '',criteresOptionsMap[c.selectedCritere].inputType == 'MMPJ_Ext_Vign_Societe__c')}"
                            value="{!c.searchText}" multiselect="false" size="1" styleClass="js-example-basic-single">
                            <apex:selectOptions value="{!criteresOptionsMap[c.selectedCritere].options}" />
                        </apex:selectList>
                        <apex:inputText value="{!c.searchText}" id="searchInputDate" rendered="{!AND(c.selectedCritere <> '', criteresOptionsMap[c.selectedCritere].inputType == 'Date')}"
                        />
                    </apex:column>
                    <apex:column >
                        <apex:commandButton action="{!removeSearchCriterias}" value="Supprimer" reRender="criterias">
                            <apex:param name="criteriaNumber" value="{!c.numero}" assignTo="{!searchCriteriasDeleted}" />
                        </apex:commandButton>
                    </apex:column>
                </apex:pageBlockTable>
            </apex:pageBlockSection>
            <apex:outputPanel >
                <center>
                    <div style="align-content: left">
                        <apex:inputCheckbox value="{!querySubAccount}" />
                        <apex:outputLabel value="Inclure les sociétées liées" style="font-weight: bold" />
                        <br/>
                        <apex:inputCheckbox value="{!queryTopAccount}" />
                        <apex:outputLabel value="Inclure aux unions" style="font-weight: bold" />
                    </div>
                </center>
            </apex:outputPanel>
            <apex:pageBlockButtons >
                <apex:commandButton action="{!cancel}" value="Retour à la campagne" rendered="{!SegmentationFromCampaign}" />
                <apex:commandButton action="{!addSearchCriterias}" value="Ajouter un critère" reRender="criterias" />
                <apex:commandButton action="{!reload}" value="Réinitialiser" reRender="criterias" />
                <button class="btn" style="{!IF(SegmentationFromCampaign,'padding: 4px 3px','display:none')}" onclick="exportMembersToExcel()">Export Invités</button>
                <apex:commandButton action="{!search}" value="Rechercher" reRender="resultats" status="status" />

            </apex:pageBlockButtons>
            <script>
                calendarInit();
                PickListExtInit();
            </script>
        </apex:pageBlock>
        <apex:pageBlock title="Résultats de recherche : {!TotalContacts} {!contextString}" id="resultats">
            <center>
                <apex:commandLink action="{!previous}" value="Précédent" rendered="{!hasPrevious}" reRender="resultats" />
                <apex:outputLabel value="Précédent" rendered="{!NOT(hasPrevious)}" /> &nbsp;|&nbsp;
                <apex:commandLink action="{!next}" value="suivant" rendered="{!hasNext}" reRender="resultats" />
                <apex:outputLabel value="Suivant" rendered="{!NOT(hasNext)}" />
            </center>
            <!--message d'erreurs lorsqu'on essaie d'ajouter un contact en tant que campaign member sans société-->
            <apex:pageMessages id="showmsg"> </apex:pageMessages>
            <apex:pageBlockTable columns="{!IF(SegmentationFromCampaign,4,3)}" var="c" value="{!contacts}">
                <apex:column headerValue="" rendered="{!SegmentationFromCampaign}">
                    <apex:inputCheckbox value="{!c.isSelected}" styleClass="userb" />
                    <apex:facet name="header">
                        <INPUT TYPE="CHECKBOX" id="selectAll" onchange="toggleSelectAll(this);" />
                    </apex:facet>
                </apex:column>
                <apex:column headerValue="Prénom">
                    <apex:outputLink value="/{!c.contactId}" target="_blank">{!c.FirstName}</apex:outputLink>
                    <apex:facet name="header">
                        <apex:commandLink action="{!reorder}" value="Prénom {!IF(orderField=='FirstName',IF(orderAsc,'▼','▲'),'')}" reRender="resultats"
                            status="status">
                            <apex:param value="FirstName" name="column" assignTo="{!orderField}"></apex:param>
                        </apex:commandLink>
                    </apex:facet>
                </apex:column>
                <apex:column headerValue="Nom">
                    <apex:outputLink value="/{!c.contactId}" target="_blank">{!c.LastName}</apex:outputLink>
                    <apex:facet name="header">
                        <apex:commandLink action="{!reorder}" value="Nom {!IF(orderField=='LastName',IF(orderAsc,'▼','▲'),'')}" reRender="resultats"
                            status="status">
                            <apex:param value="LastName" name="column" assignTo="{!orderField}"></apex:param>
                        </apex:commandLink>
                    </apex:facet>
                </apex:column>
                <!--ici on affiche la liste des sociétés en picklist -->
                <apex:column headerValue="Société(s)">
                    <apex:selectList value="{!c.societe}" multiselect="false" size="1">
                        <apex:actionSupport event="onchange" reRender="out" />
                        <apex:selectOptions value="{!c.listDesSocietes}">
                        </apex:selectOptions>
                    </apex:selectList>
                </apex:column>
            </apex:pageBlockTable>
            <center>
                <apex:commandLink action="{!previous}" value="Précédent" rendered="{!hasPrevious}" reRender="resultats" />
                <apex:outputLabel value="Précédent" rendered="{!NOT(hasPrevious)}" /> &nbsp;|&nbsp;
                <apex:commandLink action="{!next}" value="suivant" rendered="{!hasNext}" reRender="resultats" />
                <apex:outputLabel value="Suivant" rendered="{!NOT(hasNext)}" />
            </center>
            <apex:pageBlockButtons >
                <apex:commandButton action="{!checkAll}" value="Cocher tous les contacts" rendered="{!AND(NOT(globalCheck),SegmentationFromCampaign)}"
                    reRender="resultats" status="status" disabled="{!TotalContacts < 1}" />
                <apex:commandButton action="{!checkAll}" value="Décocher tous les contacts" rendered="{!AND(globalCheck,SegmentationFromCampaign)}"
                    reRender="resultats" status="status" disabled="{!TotalContacts < 1}" />
                <!-- <apex:commandButton action="doNothing" onclick="exportResultsToExcel()" value="Export Résultats" disabled="{!TotalContacts < 1}"/> -->
                <button class="{!IF( TotalContacts < 1 , 'btnDisabled', 'btn')}" style="padding: 4px 3px;" onclick="exportResultsToExcel()">Export Résultats</button>
                <apex:commandButton action="{!addToCampaign}" value="Mettre à jour la cible" status="status" rerender="resultats" disabled="{!TotalContacts < 1}"
                    rendered="{!SegmentationFromCampaign}" />
                <apex:commandButton action="{!seeCampaignMembers}" value="Voir les membres de campagne" status="status" rendered="{!SegmentationFromCampaign}"
                />
            </apex:pageBlockButtons>
            <script>
                /*displayMessage();*/
                if ({!displayFinishMessage})
                {
                    $("#alertMessage").show();
                    setTimeout(function () {
                        $('#alertMessage').hide();
                    }, 1700);
                }
            </script>
            <apex:inputText value="{!searchFilters}" id="searchFilters" style="display: none" />
        </apex:pageBlock>

        <div id="alertMessage" class="info">
            <div class="textInfo">
                Mise à jour effectuée avec succès
            </div>
        </div>
    </apex:form>
    <script type="text/javascript">
        $("#alertMessage").hide();
        function toggleItem(checkbox) {

            var $j = jQuery.noConflict();


            var cbs = $j('.userb');

            if (cbs.filter(':not(:checked)').length == 0) {

                $j("input[id$=selectAll]").prop('checked', true);

            }
            else {

                $j("input[id$=selectAll]").prop('checked', false);

            }

        }


        function toggleSelectAll(checkbox) {

            var $j = jQuery.noConflict();

            if (checkbox.checked) {

                $j(".userb").prop('checked', true);

            }
            else {

                $j(".userb").prop('checked', false);

            }

        }
        function calendarInit() {
            var myCalendar;
            var elements = document.querySelectorAll("[id$='searchInputDate']");
            var calendarsList = new Array();
            for (var i = 0; i < elements.length; i++) {
                calendarsList[i] = elements[i].id;
            }
            myCalendar = new dhtmlXCalendarObject(calendarsList);
            //myCalendar = new dhtmlXCalendarObject(["cal_1","cal_2","cal_3"]);
            myCalendar.setDateFormat("%d/%m/%Y");
            myCalendar.hideTime();
            myCalendar.loadUserLanguage("fr");
        }

        function setInputPicklist(theId, theValue) {
            //alert(theValue);
            var myId = theId.substr(0, theId.lastIndexOf(":"));
            myId = myId + ':searchInputPickList';
            //alert(myId);
            document.getElementById(myId).value = theValue;
        }

        calendarInit();

        $(document).ready(function () {
            PickListExtInit();
        });

        function PickListExtInit() {
            $(".js-example-basic-single").select2();

            /*$(".js-example-basic-single").on("change", function () {
                var refId = this.parentNode.getAttribute('id');
                var myId = refId.substr(0, refId.lastIndexOf(":"));
                myId = myId + ':searchInputPickListExt';
                document.getElementById(myId).value = this.value;
            });*/
        }

        function displayMessage() {
            alert({!displayFinishMessage});
        if ({!displayFinishMessage})
        {
            $("#alertMessage").show();
            setTimeout(function () {
                $('#alertMessage').hide();
            }, 1500);
        }
        }

        function exportMembersToExcel() {
            window.open('/apex/MMPJ_XRM_Export_Excel_Campaign?Id={!Campaign.Id}', '_blank');
        }

        function exportResultsToExcel() {
            //alert(document.getElementById('thePage:theForm:resultats:searchFilters').value);
            var params = document.getElementById('thePage:theForm:resultats:searchFilters').value;
            window.open('/apex/MMPJ_XRM_Export_Excel?' + params, '_blank');
        }
    </script>
    <style>
        #calendar {
            border: 1px solid #dfdfdf;
            font-family: Roboto, Arial, Helvetica;
            font-size: 14px;
            color: #404040;
        }

        .info {
            background-color: #d9edf3;
            border-radius: 5px;
            border: 1px solid black;
            color: black;
            font-weight: bold;
            position: fixed;
            z-index: 2000;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 200px;
            height: 30px;
            opacity: 1;
            filter: alpha(opacity=100)
        }

        .textInfo {
            margin-left: 5px;
            margin-top: 5px;
        }
    </style>
</apex:page>