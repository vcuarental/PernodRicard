<!-- Component to facilitate
 - custom lookup search
 - 
 - @author: PZ - CustomerTimes Corp.
 - @created: 10.01.17
 -->
<aura:component description="Lookup. Lightning component for lookup fields.
        Can be used standalone or with other lightning component"
                controller="EUR_CRM_LookupController">
    <!-- Type of the object being looked up -->
    <aura:attribute name="objectAPIName"
                    type="String"
                    access="public"
                    required="true"
                    description="API name of the object being searched"/>
                    
    <!-- Type of the object on which the lookup is located -->
    <aura:attribute name="tObjType" 
                    type="String" 
                    access="public" 
                    default="sObject"
                    description="API name of the object containing the lookup"/>
    
    <aura:attribute name="placeholder"
                    type="String"
                    default="Search..."
                    description="Placeholder text for input search filed"/>

    <aura:attribute name="fieldLabel"
                    type="String"
                    required="true"
                    description="input search field Label"/>

    <aura:attribute name="filter"
                    type="String[]"
                    default="[]"
                    description="Array of filter for SOSL query.
                    All the filters should be given in this field separated by comma(,)
                    Example: AccountId='001200000047KEdAAM' "/>

    <aura:attribute name="value"
                    type="String"
                    description="Used to store the selected record id.
                    While calling this component from other component,
                    set this attribute to the lookup field API name"/>

    <aura:attribute name="chosenRecordLabel"
                    type="String"
                    description="This is used to show the selected record Name in search input"/>

    <aura:attribute name="subHeadingFieldsAPI"
                    type="String[]"
                    description="Field API for the fields to be shown under the record Name.
                    Must be comma separated. Example: Email,Phone"/>

    <aura:attribute name="matchingRecords"
                    type="Object[]"
                    access="private"
                    description="List of records returned from server side call."/>
                    
    <aura:attribute name="isEdit"
                    type="Boolean"
                    access="public"
                    default="false"
                    description="Whether the input is marked as read-only"/>
                    
    <aura:attribute name="required"
                    type="Boolean"
                    access="public"
                    default="false"
                    description="Whether the input is marked as required"/>
                    
    <aura:registerEvent name="lookupSelect"
                    type="c:EUR_CRM_LookupSelectEvent"
                    description="Event used to send the selected record Id and Name to Lookup component"/>
                    
    <aura:handler name="lookupSelect"
                  event="c:EUR_CRM_LookupSelectEvent"
                  action="{!c.handleLookupChooseEvent}"
                  description="Event handler to get the selected record Id and Name from LookupItem component"/>

    <aura:handler name="change" value="{!v.value}" action="{!c.doInit}"/>
    <!-- <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>   -->
    
    <!-- Method to call when component validation should be reassessed -->
    <aura:method name="doValidate" action="{!c.doValidate}">
    </aura:method>
    <aura:method name="showHelpMessageIfInvalid" action="{!c.doValidate}">
    </aura:method>
    <aura:method name="doShowInvalid" action="{!c.doShowInvalid}">
    </aura:method>
    
    <div class="slds-form-element__control">
        <div class="slds-combobox_container slds-has-inline-listbox">
            <div aura:id="lookupdiv"
                 class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click slds-combobox-lookup"
                 aria-expanded="false" aria-haspopup="listbox"
                 role="combobox">

                <div class="slds-combobox__form-element">
                    <!-- using input type "search" to place the search icon input field-->                   
                    <lightning:input type="search"
                                     aura:id="searchinput"
                                     label="{!v.fieldLabel}"
                                     name="{!v.fieldLabel}"
                                     value="{!v.chosenRecordLabel}"
                                     onchange="{!c.searchRecords}"
                                     placeholder="{!v.placeholder}"
                                     onfocus="{!c.searchRecords}"
                                     onblur="{!c.hideList}"
                                     readonly="{! !v.isEdit}"
                                     disabled="{! !v.isEdit}"  
                                     class="{! !v.isEdit ? 'disabled' : ''}"
                                     required="{!v.required}"
                                     />
                </div>
                <div id="listbox-unique-id" role="listbox">
                    <ul class="slds-listbox slds-listbox_vertical slds-dropdown slds-dropdown_fluid"
                        role="presentation">
                        <!-- LookupItem component for creating record list -->
                        <aura:iteration var="rec" items="{!v.matchingRecords}">
                            <c:EUR_CRM_LookupRecord record="{!rec}"
                                          subHeadingFieldsAPI="{!v.subHeadingFieldsAPI}"
                                          iconCategoryName="standard:contact"/>
                        </aura:iteration>
                    </ul>
                </div>
            </div>
        </div>
    </div>

</aura:component>