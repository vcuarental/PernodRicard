/********************************************************************
*	Name:	*	Test Factory										*
*********************************************************************
* 			*	- Using for factoring code							*
*	Goal:	*	- containing methods for create Standard object		* 
*			*	- used by test classes.								*
*********************************************************************
* 	WARNING	* 	Only Standard object here							*
*********************************************************************/
@isTest
public with sharing class TestFactory {
    public static String ipsum1 = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean pellentesque pulvinar metus, id feugiat risus elementum ut. Nullam id sapien at purus tristique cursus in sed mauris. Quisque aliquet viverra vehicula. Donec congue aliquam nulla nec malesuada. In malesuada velit et purus ornare pharetra. Sed a justo felis. Cras in erat sit amet elit ultricies vestibulum. Phasellus tempor accumsan varius.';
	public static String ipsum2 = 'Proin vestibulum tellus ac erat blandit dictum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac rhoncus lectus. Maecenas eu mauris et mi molestie hendrerit sed quis elit. Vestibulum id sem vel ipsum accumsan molestie. In sit amet felis in ipsum blandit laoreet. Nunc auctor, lectus nec luctus posuere, arcu lectus facilisis erat, viverra sodales lectus urna nec arcu. Aliquam non est tortor, eget venenatis velit. Vestibulum ornare, leo vel blandit fringilla, turpis mauris ultricies leo, non tincidunt orci massa at tellus. Nam commodo nisi at ante lacinia adipiscing. Proin neque lorem, laoreet et laoreet eget, congue non justo. Aliquam sit amet massa ac justo lacinia iaculis. Sed quam ipsum, placerat sed aliquet non, ultrices vitae enim.';
	public static String ipsum3 = 'Aliquam massa dui, pharetra molestie volutpat in, cursus quis quam. Nunc sagittis vestibulum dui, id ornare mauris interdum nec. Maecenas ut laoreet diam. Nam lacinia laoreet orci eu iaculis. Aenean aliquet sodales interdum. Nulla quam metus, vehicula sed accumsan dictum, tristique vel erat. Praesent vitae orci erat. Donec vel elit in orci luctus tristique at sed leo.';
	public static String ipsum4 = 'Aenean pellentesque libero vitae libero tristique placerat. Etiam ac diam nisi. Etiam ornare porta nibh, in interdum leo lobortis sed. Duis id libero nec elit dapibus pharetra. Nullam lacinia consectetur sapien a suscipit. Pellentesque vulputate justo ut ante euismod sodales. Etiam et justo ac metus pretium posuere ac sagittis sapien. Aliquam tristique sapien eget urna vestibulum blandit quis vel erat. Curabitur egestas cursus orci, in varius purus iaculis et. Mauris in libero risus. Sed sed cursus lectus.';
    	
    public static User createStandardUser(String alias){
        Profile profile = [select id from profile where name='Standard User'];
            
        User user = new User(alias = alias, email=alias + '@dev.com', 
            emailencodingkey='UTF-8', firstname=alias, lastname='Testing', languagelocalekey='en_US', 
            localesidkey='en_US', profileid = profile.Id, 
            timezonesidkey='Europe/London', username=alias + '@esn.pernod-ricard.com');
        return user;
    }
    
    public static User createUserWithProfile(String alias, String profileName){
        Profile profile = new Profile();
        if(profileName != '')
            profile = [select id from profile where name=:profileName];
        else
            profile = [select id from profile where name='Standard User'];
            
        User user = new User(alias = alias, email=alias + '@dev.com', 
            emailencodingkey='UTF-8', firstname=alias, lastname='Testing', languagelocalekey='en_US', 
            localesidkey='en_US', profileid = profile.Id, 
            timezonesidkey='Europe/London', username=alias + '@esn.pernod-ricard.com');
        return user;
    }
    
    public static Messaging.InboundEmail.BinaryAttachment createEmailBinaryAttachment(String content){
        Messaging.InboundEmail.BinaryAttachment newAttachmentBIN = new Messaging.InboundEmail.BinaryAttachment();
        newAttachmentBIN.body = blob.valueOf(content);
        newAttachmentBIN.fileName = content+'.pdf';
        newAttachmentBIN.mimeTypeSubType = 'text/plain';  
        return newAttachmentBIN;
    }
    
    public static Messaging.InboundEmail.Textattachment createEmailTextAttachment(String content){
        Messaging.InboundEmail.Textattachment newAttachmentTXT = new Messaging.InboundEmail.Textattachment();
        newAttachmentTXT.body = content;
        newAttachmentTXT.fileName = content+'.txt';
        newAttachmentTXT.mimeTypeSubType = 'text/plain';
        return newAttachmentTXT;
    }
        
    public static CollaborationGroup createCollaborationGroup(String groupName,String groupType){
    	CollaborationGroup grp = new CollaborationGroup();
    	grp.Name = groupName;
    	grp.CollaborationType = groupType;
    	return grp;
    }
    
    public static ESN_Best_Practice__c createBestPractices(String bpName, String mediaURL, String AffLogo){
    	ESN_Best_Practice__c newBp = new ESN_Best_Practice__c();
    	newBp.Name = bpName;
    	newBp.ESN_BP_Actions__c = ipsum1;
    	newBp.ESN_BP_Category__c = 'My test category';
    	newBp.ESN_BP_Subcategory__c = 'My test subcategory';
    	newBp.ESN_BP_Benefit1__c = 'My cool benefit 1';
    	newBp.ESN_BP_Benefit2__c = 'My cool benefit 2';
    	newBp.ESN_BP_Benefit3__c = 'My cool benefit 3';
    	newBp.ESN_BP_Benefit4__c = 'My cool benefit 4';
    	newBp.ESN_BP_Benefit5__c = 'My cool benefit 5';
    	newBp.ESN_BP_Benefit6__c = 'My cool benefit 6';
    	newBp.ESN_BP_Benefit7__c = 'My cool benefit 7';
    	newBp.ESN_BP_Benefit8__c = 'My cool benefit 8';
    	newBp.ESN_BP_Benefit9__c = 'My cool benefit 9';
    	newBp.ESN_BP_Benefit10__c = 'My cool benefit 10';
    	newBp.ESN_BP_Challenge__c = ipsum2;
    	newBp.ESN_BP_Contributor1__c = 'Toto Test';
    	newBp.ESN_BP_Contributor1_Title__c = 'super testeur';
    	newBp.ESN_BP_Results__c = ipsum3;
    	newBp.ESN_BP_Affiliate_Image__c = ''+affLogo;
    	newBp.ESN_BP_Media_URLs__c = ''+mediaURL;
    	return newBp;
    }
    
    public static Document createDocumentPDF(String devName, Id folderId){    	
	    Document docPDF = new Document();
	    docPDF.Body = Blob.valueOf('Some Text');
	    docPDF.ContentType = 'application/pdf';
	    docPDF.DeveloperName = devName;
	    docPDF.IsPublic = true;
	    docPDF.Name = 'My Document 1';
	    docPDF.FolderId = folderId;
	    return docPDF;
    }
    
    public static Document createDocumentImage(String devName, Id folderId){    	
	    Document docImg = new Document();
	    docImg.Body = Blob.valueOf('/9j/4AAQSkZJRgABAQAAAQABAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2NjIpLCBxdWFsaXR5ID0gNzUK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgBLAF/AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A9/ooooAKKKKACiiigApD0pryLGhZyAo6k1z9/rzOTHacD/nof6VcKcpuyM6lWMFqbVze29oMzSBfbvWNceIiTi3h/wCBPWMQ8j7nYsx6k96eI/auuOHjHfU4Z4mcvh0JpdTvp/vTED0Xiq7NK/35GP1NTCKnCL2rVcq2Ri+aW7Kvl0q+Yn3XYfQ1b8qk8r2quYXINj1C9hPyzscdm5FX4PEUikC4iBHqvBqgYvao2iqHCEt0Wp1I7M6u11G2ux+7kG7+6eDVvNcKUKEFeCOmK1LHXJYCI7nMif3u4rmqYZrWJ1U8Um7TOmFLUUM8c8QeNgynoRUma5jrTuLRRSZoGLSVSutWtbTh33P/AHV5NY0/iC4ckQxqg7E8mtI0Zy2RjOvCG7OlzRke1cY9/ey/euH/AAOKiLzHrI5/4Ea2WFfcweMXRHc5HrSZrhw0w6SOP+BVKl/fRfduH+hOaHhX3BYyL3R2lLXMweILhMCaNXHqODWxaata3eAj7X/utwaxnSnHdG8K8JaJl6ikBozWZsLRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAVDPOltE0kjBVAqR2CqWJwByTXJanqDX05VSfJX7o9fetKVJ1GY1qqpxv1G3+oy38hHKxA8L/AI1XSOlRKsJHXekoqyPN1m7sasdSiOpFjqZY6hyNIwIRHTxH7VOI6d5dRzGnIV/Lo8v2q15ftR5dLmHyFMx+1RmOrxjppjp8wuQznjqF4uvFaTR1C8VaKZlKBVs7yawl3ISUPVD0NdXaXcd5CJIjx3Hoa5d4adZzyWM4dMlD95fWoq01NXW5dGq6bs9jqZ7iO2iMkrhVHrXN32sz3RKQ5jj9R1NQ3lxNfTbpDhR91R0FMSGlSoxjrLcqrXlN2jsQCI9+9SLF7VZWKpBFW3OYKBVEVO8qrYipfKqecvkKfle1NMXtV7y6aYqOcOQoNHUTR4PHFaBiqJ4qpSM3AmsdZntSI5syxep6iukt7iK4iEkTBlPpXHPFT7S8msJt0Zyp+8p6GsqtBSV47m9LESg7S2O0oqva3Md3AssRyD1HpU9cTVtD0E01dC0UUUhhRRSUALRSUtABRRRQAUUUUAFFFFABRRRQAUUUUAFJmlqKaQQxPIxwqjJoAxtfv9qi0jPzNy5HYVhxrSyytc3DzOSS5zUsa16UI+zjY8mpN1J3HotWUSmxrVlFqJSLhEFSpVSnKtTKtZORuojAntTwlSBaeFqOY0USLZRsqfbRtFTzFcpXKU0x1ZKUhSnzE8pTaOo2iq8Uphj9qpSJcDOaGmGCtEx+1N8rPar5yPZmeIaeIvarnle1KIvanziVMrCL2p4j9qsCP2p4jqXMvkKwjpdntVkIaXyzU8w+QqeX7U0p7Vc2GmlKOYXIUjH7VE8ftV8pUbR1akS4Gc8dVZI61GjqB4uK0jMxlAr6detYXIJ/1TcOP611quHUMvIIyDXISQk9qkF7eRQLAkm1V6EDmpq0vaO8SqNb2atI6mS4iiGZJFUe5xVGTXbFCQJC/wDujNc00byEl2LH1JoENJYZLdlSxU38KN1/EcA+7BI3vwKj/wCEkTP/AB6t/wB9VkeT7UeVV+wpmf1ir3NtfEcBxugkH0wasx65YucGQp/vCuaMVNMVDw8HsNYmqtztI7iKUZjkVh7HNSZrhQHjbcjMp9QcVoW2uXUBAlxKnvwfzrGWGktYs2hi1tJWOqzS1Qs9UtrwYRsP/cbrV6udprRnXGSkroWiiikMKKKKACiiigArH8QXHl2QiB5kbH4VsVzHiGTdexx54Vc4+ta0I800YYiXLTZmRrmrkS1XiFXI1rumzz4ImjWrCLUca1ZRa55M6oIeq1Mq01VqZVrJs3igC08LSgU4LWdy7CbaNtPxS4pXHYj20hWpMUbaLhYhKU3ZU+KQrTuFiDZSGOp9tG2ncmxX8ulEdTbaXbTuHKQ7KXZUu2l20rjSIgtG2pdtG2lcOUh28UhSpttG2ncLFYpTDHVopTCtNSJcSm0dQtFV8pUbR1akZuBnNDUZg9q0TGKYYq0UzN0zP8n2o8mrxipPKquYn2ZS8mgxe1XfLppjo5hchSMVMMVXigphjpqZLgUGiqJo+K0GjqJo6tSM3AzypVgVJBHQitbT9ceMiK6JZegfuPrVJ46rvHiqlGM1ZijKVN3idujrIgZWDKehBp1cjp2pSWLhWJaE9R6fSurilSWMOjBlI4NcFWm4PU9GjWVReZJRSUVmbC0UUUAFcfq7FtXm56YH6CuwrjtUGNWuPqP5CunDfGcmM+Beo2IVcjHIqpFV2LqK6JHLT2RZjFWUFQRirKCuaTOuCJVFSqKYoqUCsmzZIcBThRRUGgtFJRQAtFFJQAUUUUAGKMUUtACYoxS0lABiilpKADFFFLQAmKMUtJQA3bSEU+incViIrzTClT4pNtO4miuUppSrBWkK0+YnlKxSk2VY20barmFylbZTSlWttNKUcwuUqFKaUq2UphSqUiXEpslQslXmSoGSrUjJxKLp7VA6Zq+6VXZK1jIylEz3Sr2kaibSbyZCTC54/wBk1C6VVkStGlNcrMU3CXMjuQQelLWPod/58PkSH95GOPcVsCvOnFxdmerCanG6FoooqSwrktaTZqznsyg11tc74ijIlhlA4OVNb4d2mc+KjenfsZ8VXou1UYe1X4R0rpmcdMtxirKCq8Yq0nSuaR2QRKtTKKjUcVIKyZshaWkoqShaSiigAoyKDXJ+KE11LaeeG6jS0QcrHkPt9zQB0sV7bTXMlvFMjyxjLqDkr9asVwPw+y13ek9di8/jXe0DYtJRRQIWkoooAWkoooAKKCa8x+LPxIk8KWsWkaRh9bvQAgHJiUnG7HqegoA7bWPFeg6Bj+1dWtbQnoskg3fl1qPSPGXhzXpPL0vWLS6k/uJJ8x/A81zngP4eWei6amoavCt9r10vm3VxcgSMrHnaM9MVxfxd+F87TweIvCNg63kbDz4LNcMT1Dqo7+uKAPcwc9KK57wLPrFz4K0uXX4Hg1QxETpIMNwxAJHYlQD+NdDQAtJS0lABijFFFACFaTFOooFYZtpCKkxSEU7hYiKimFRU5FMK00yWiuyioWSrTLio2WtEyHEpulV3WrrioHWtIsxlEoulVJErQkFVZBW8Gc0kVradrS7jmU9Dz7iu1jcSIHXoRmuIlWuk0G486x8sn5ojt/DtWeJhdKRthJ2bga1FFIa4jvCqGrW/2jT5FA+ZfmFWbm6itYjJK2AP1rmb3Up75ioykXZR3+ta0qcpO6MK9SMY8r6kNvyBWjEOlUoUwK0IV6V1VGcdNFqMVZSoYxVhRXNI7IEq1IBTFrP1jWrfR4VMgZ5ZDiOJerGsmbI06WuZbUfEphM66VbhMZEZkJfFT6B4kXWWlhkgMFxEMshOQaQzeorO1LWLbTSiSFpJ3+5DGMs34Vk3ur+IYYWnTSI1hUZIaTc2PcCgLHT1meIFDaBfA/8APFqoeHvFEetO0EkXk3KjOAchh7Vo67/yAb7/AK4t/KgDlPh7/r70/wCyv8zXeVwnw9/1l99F/rXbXNzDawPNM4SNBksaSG9yWiuYh8Q6jq0jnSNPVoFOPOnbAP0FQTeKb/Sr1YdXsFSNukkT'
			+'ZphY66iooLiK4t0nicNG67g3tWFJ4hub27kttGsxc+WcPNI2EH09aBHRUVyN14l1XSJkGqadH5Lnh4WNXde1nWLTSra78P6INWlmIJiacQhVxnOTmgDY1C8g07T7i+uXCQW8bSSMeygZNfMvgFZ/iN8ZzrOoZeGF2u2Rv4VXiNfoDj8q6j4peO/FsXg+XTtY8LR6THqB8pZ1v1lJxyRtAHasT4ODxRomm3uq6N4TXVYrxxGJ3vFh2hM5ABBzyevtQB9LdqMA9q88vficvhzRln8VacLDVZZCsGm284nkdezcYwCarp4j+Juo2v22x8LadawMN0cF3cHzWHbOMYPtQB6WBRXk2h/GmEaydE8XaVJoeoK2wsxJiJ988ge/I969Tlu7eCze7mnjjt0TzHlZgFVcZyT0x70ATUV454t+Pmj6XL9l0CIalMHAadiViUd8d2P5CrHxB+NFv4YYafo8EV/qWwGVmJMcGR0OOp9qAPW6K8p+EfxM1XxzPqFtqlpChtkV1mhUqpBOMEGtXU/iS9zrE2i+ENKfXNQhOJpFfZbw/wC8/f6CgD0KkrxnxL8RviF4MjivNb8M6c1k7bS9vMxAPoTzg/hXceBPH+l+PNNknslaG4hwJ7aQ5ZCehz3HvQB11FcF4w+J1h4b1GLRrC1l1XXJsBLOA/dJ6bj2+n8qytR8S/FLT9OfUn8MaU0Ea73t45meRV79DyfpQB6lTSK4T4efFDTfHcTwCI2epRLuktnfdkeqnuK7OR7hXwsYZc9fT/PNAEpFRMOKnNRsKtENFZxUDrVpxUDitImMkU3FVZFq644qrIK2gYSRRlHNXtAm8u8kjzw65/KqkoplnJ5N6j/X+VbSXNBowi+WaZ2tRXNxHbQtLIcKtSHpXK6xfG8ujEh/dRnA9z61wUoc8rHo1qvs43K95dy38+9ydo+6voKI0pkaVcjSu92irI85Xk7skiTgVdiWoI1q3Gtc82dUETRirCCo0GKmUVgzpih61wfii5ay8ZWdzOpaCNUZR7ZOa70CszWNFs9ah8qfiROVdeq1mzRFiz1K0v4w9tcJID2B5H4VVh0SG31t9ShYo0ibXQDhj61xl74M1SwBltJROq8jyyVb8v8A69anhHxDdz3R02+ZncA7Hb7wx1BoHYba6TqsvjNr64iYQpIxEhIwVxgAV2xwVIPcVkaz4gtNGUCXMkzcrEnU/wCAqrHHrOsxh7iX+z7ZukUXMhHue1AHL+F1CeNHReADKB+td1rv/IBvv+uLfyrhPCqCPxlsBJC+aBk5Peu713/kA33/AFxb+VIb3OU+Hv3776L/AFpnjy/ke6h06NiECh2A7k9Kf8PPv330X+tZ3jLdD4oEhzjajD3H+RQC3OksNUuLCxhtotAvdqKBnjk+tZ3iSXUNctIoo9Fuo3R925hnt0rtoXSWJJEIKsAQR6U/FAjj9Eg1K18I6hBPFJFIkb+SG4OCv+NVfBOs2VtaSWVxIsMrSb1ZuA2QBjP4V3DbQp3EY75rkNW8Dw3UrXFhMsLNyY2Hyk+xHSgDo9QsrfVrF7eXa0bjhhzg9iKk0+z+wafDa+YZPKXbuIxmvNpE1vwrcqxZ0QnjDZjf2r0Kx1WO60VNSfCJ5Zd/QY6/yNMGj52/aD106j4vtNGiOUsYcsB/ffB/kBXtGjxQeAPhdC0sYUafYmWUer43H8ya+evDUcnj/wCNiXUy745r5rp1PIEaHIH0wAK+hPivBJcfC7X44gdwtw2B6Kyk/oKBHjvwjtZviB8Tb/xFreLj7IvnbW5UOxwgA9AAfyFfSmK+fP2apUF14ghyPMKQsB3xl6+haAPI/jv4Rg1Twi2uQwqL/TiGZwOWiJwQfpnNV/gT4ok8SeF7zQdTInawwiiQbt8LZGD6gYI/Ku1+KFzHa/DXXpJSAptWQZ7k8Afma8g/ZttpjrutXYB8hbZIie24tkfoDQBzvxx8O6f4e8bxDTLaO3gurZZTFGNqq2SCQO3QV9AeDPBmjaT4Ts4DZQTy3ECyXU0yB2mdgCxJP1rxf9o0/wDFYaX/ANef/s5r6K0X/kB6f/17R/8AoIoA8v8AipqGn/DrwPLZeHbSDT7rVJfLBt02kL/E31xx+NdJ8JfD0OhfD7THVB9ovoVu537szjcM/QECvM/2lBJ9t0I8+X5cmPTORXqvwt1ePWfhxok6EbobZbeQZ6NGNv64z+NAHQa3otl4h0e50vUYhLa3C7XX+RHoR1rz6w8G6T8HvDuv69Z3FxdTG3OPOxxj7q8e5HNepVwnxhjeT4Xa0EBJWNWOPQMM0AeKfCbVdQh8Ran4jbw7qGvXbfKZbfB8tm5JOe5FewN8RddIx/wrvXfodtcZ+zZfRGw12wJAlEscwGeqkEH8iP1r3jAoA+WvCvhXxhpnxPs9ZtvDV/ZWb6huZGTiOB3+ZSfQKT+VfUvUUYFFADTUbVIajaqRLIXqB6neoHrWJlIrP3qrJVpzVWQ1tE5plSWqjnByOtW5TVQgs+0dTXRE5ZnWavd/ZbFtp+d/lWuVRSa0ten8y+WEfdjX9TVGMVlQjywv3NsRPnqW7E8a1ajWoYxVuMUpMcETRirKCoUFWEFYSZ1QRMgqZajQVKKxZshwrjtYvzonjGC6dj9muYgsn4HGfw4NdjVS+0201GPZdwJKB03DkfQ1JaJBeWxh84TxmPGd24YxXHaJbC/8Y3epW6n7JGxw46MxGOP1rbXwho6vn7OzD+6zkitiC2htYRFBGkca9FUYAoGeZa3MIvGckt0CY0mUkEfwjGP0ru7jxFpsNsJVuUlLD5I4zuZj6YFSaj4f07VJhLdQAyAY3qcEj8KWx0DTdNbfbWqCT++wy35mkGh59o14um+K/PvgYQWcPu/h3Z6/nXX6lr2n3ugX5iuAPkZF3cbj7etXr/w5pupXHn3FuDJ0LKSCfrTn8OaVIkatZRERLtQegoC5yPgS8t7We8WeZIiyqRvYD1rR8Y6V/aVpHqVkRK0Yw2znK+o+hraPhfRcY/s+HH41o21pDZ2629ugSJc7VHQd6AucL4b8Xx2VstlqG4RpwkgGcD0IreuPGmjwxbopnnfsiIcn8xVu78MaTeuXltEDnqyfL/Kks/DGk2MgkitVLjozndj86YaFK3h1C/0PUp78shuo2MUOf9WADj8aZ4R1yK705bWeUC5h+X5jjcvY/wBK6fGRjjFY9z4W0i6lMjWoRz1MZK/yoEUfGV3bNo5tQyyXErqI0Xk5z1rmPH2oSeEfg3cxltl3Ogt0HcGQ8/ku6u6sfD+m6fIJIbZfNHR2+Yj868K/aN1wyanpehxv8sUZuZVB7sSFz+AP50AWP2cNDJl1fXZE4CraxMff5m/9lr3m9s4b+xns7hN8M8ZjkX1UjBrk/hToR8P/AA60q3kTZPNH9olGMHc/OD9BgV2lAHzDbWuofBP4mC6uYZZNFuN0XnqMh4WIP/fSkDj2r6O0/WdN1SzS8sb6Ce3ZdwdJARj39Kl1HS7HVrN7TUbSC6t3+9HNGGU/ga4t/gx4KaYyJp80IJyY4rl1X8s0AcR8YfFLeK5rbwR4ZBv7mSUSXLQfMox0XPTqck9sCu/8BeFLL4deEFhu54Y5nIlvLh2CrvPbJ7DoK3tC8J6H4ahaPR9Nt7Xd951XLt9WPJq3q2j2OuabLp+pW63FrLjfG3Q4OaAPmn4/arYar4wsGsLyG5SOzCs8LhgDuPGRX0D4Z8S6Jf6RpkFrqlpLO9tGBEsyl8hRkY65FUV+FPgdR/yLlmfqD/jVnTfh14T0fUodR0/Rbe3uoSTHImcqSMevvQBk/FnwQ/jPwm0dogOpWjebbZON395fxH6gV4l8LviNL8PdTutJ1uKcadK/7xNp3wSDgnH8x7CvquuZ8QfD7wv4nl87VdJglnxgzINjn6sOT+NAFaL4n+CpLQXC+JLEJjOHk2t/3yec+2KztN8WWvxFu77SLHTJp/Dz2zxz6hKCisx4AQHk9+falsfgt4GsZxKNI88g5Czys6/l0Ndza2lvZW6W9rBFBCgwkcaBVUegAoA+SYJNd+DfxALPGSiEqQeEuYT6H/ODXuem/HHwRe2az3GpSWcuMtBNA5Kn2Kgg122s+HdJ8Q2n2XV9Pt7yIHIEqZKn1B6iuO/4Uh4F8/zf7Mkxn7nnvt/nQBiyePr34ja3b6L4N+02+nxyq99qjKUKoDnanoT7166BhQMk4HU1Q0rRNO0KyWz0uzgtLdf4IkCj6n1NXjQIQmo2NOY1Ex4q0iWxjmq7mpHNQOa0ijKTIZDVWQ1PI1VZDW8Uc02V5DRYR+dfouMjBP6VHK1aXh6HzLmWUj7q4H41pN8sGzGC5ppGddyGW/nf/bIp8Qqup3MWPc5q1FVWsrExd3csxirUYqvH1qzHWEjpgWEHFWEqBOlWErFnTEmWpB0qJakWsmaofRRRUlBRS0UAJRS0lABRRRQAUUtJQAUUtJQAUVUOq6eNQGnm+txeMMiDzRvI/wB3rVugBruEUsxAVRkk9hXyROH+JPxrZYj5kNzeYDdhDH3+m1a97+L3ipfC/gW7KPi8vgbaAA8gkfM34D+lcP8As9+D2t7a48UXcWHmBgtNw/h/ib8Tx+FAHucSLFGsaDCqAAPYU+iigBaSlpKACiiloASiiigAooooAKKhmu4IBmSZF9iaqNrVqPu+Y/8AuqaANGjNZZ1qPH/HtP8A980DWrf+NJU+UCNItTGaoI7yCb/AFUqt7Z5pxaqSJbFY1EzcUM1Qs9WkZyYO1V3anO9V3etooxkxjt1qrI1SSP1'
			+'');
	    docImg.ContentType = 'image/jpg';
	    docImg.DeveloperName = devName;
	    docImg.IsPublic = true;
	    docImg.Name = 'My Document 1';
	    docImg.FolderId = folderId;
	    return docImg;
    }
    
    public static ESN_CheckIn__c createCheckIn(User usr){
        ESN_CheckIn__c ci = new ESN_CheckIn__c(
            ESN_User__c = usr.Id,
            ESN_LocationName__c = 'Tour Eiffel',
            ESN_Geolocation__Latitude__s = 48.8582780,
            ESN_Geolocation__Longitude__s = 2.2942540,
            ESN_Date__c = DateTime.now(),
            ESN_Address__c = 'Tour Eiffel, Avenue Anatole France, Paris, France'
        );
        return ci;
    }
}