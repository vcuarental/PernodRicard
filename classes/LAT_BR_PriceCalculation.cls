/**
 * Wrapper class for SOAP callout, slighty modify to work properly from the Panda's great maestre's work.
 *
 * @author Generated by wsdl2apex and Zimmic
 */
public with sharing class LAT_BR_PriceCalculation {
    public static final String IVA_TAX = 'IVA';
    public static final String IEPS_TAX = 'IEPS';
    public static final String CANAL2_DISC = 'CANAL2';

    public class valueObject {
        public valueObject() {

        }
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    public class BusinessServiceException_x {
        public BusinessServiceException_x(){

        }
        public String message;
        public String requestID;
        private String[] message_type_info = new String[]{'message','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] requestID_type_info = new String[]{'requestID','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'message','requestID'};
    }
    public class messageValueObject {
        public messageValueObject() {

        }
        public LAT_BR_PriceCalculation.e1MessageList e1MessageList;
        private String[] e1MessageList_type_info = new String[]{'e1MessageList','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'e1MessageList'};
    }
    public class e1MessageList {
        public e1MessageList() {

        }

        public LAT_BR_PriceCalculation.e1Message[] e1Messages;
        private String[] e1Messages_type_info = new String[]{'e1Messages','http://oracle.e1.bssv.JP56LA10/',null,'0','-1','true'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'e1Messages'};
    }
    public class responseValueObject {
        public LAT_BR_PriceCalculation.errorRecords[] errorRecords;
        private String[] errorRecords_type_info = new String[]{'errorRecords','http://oracle.e1.bssv.JP56LA10/',null,'0','-1','true'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'errorRecords'};
    }
    public class errorRecords {
        public errorRecords() {

        }
        public String errorCode;
        public String errorDescription;
        private String[] errorCode_type_info = new String[]{'errorCode','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] errorDescription_type_info = new String[]{'errorDescription','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'errorCode','errorDescription'};
    }
    public class e1Message {
        public e1Message(){

        }
        public String message;
        public String messagePrefix;
        private String[] message_type_info = new String[]{'message','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] messagePrefix_type_info = new String[]{'messagePrefix','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'message','messagePrefix'};
    }
    public class discountAndChargeDetailsOutput {
        /**
         * Standard const, used in test to achivece coverage
         */
        public discountAndChargeDetailsOutput(){

        }
        public Decimal amountDiscountOrCharge;
        public String discountOrChargeGroup;
        public String discountOrChargeGroupDescription;
        public String discountOrChargeType;
        public Decimal ratePercentDiscountsAndCharges;
        public Decimal unitDiscountOrCharge;
        private String[] amountDiscountOrCharge_type_info = new String[]{'amountDiscountOrCharge','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] discountOrChargeGroup_type_info = new String[]{'discountOrChargeGroup','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] discountOrChargeGroupDescription_type_info = new String[]{'discountOrChargeGroupDescription','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] discountOrChargeType_type_info = new String[]{'discountOrChargeType','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ratePercentDiscountsAndCharges_type_info = new String[]{'ratePercentDiscountsAndCharges','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] unitDiscountOrCharge_type_info = new String[]{'unitDiscountOrCharge','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'amountDiscountOrCharge','discountOrChargeGroup','discountOrChargeGroupDescription','discountOrChargeType','ratePercentDiscountsAndCharges','unitDiscountOrCharge'};
    }
    public class priceCatalogueDetailsInput {
        public priceCatalogueDetailsInput() {
            
        }
        public String paymentTerms;
        public Decimal quantityOrdered;
        public Decimal quantityFree;
        public Decimal ratePercentCashDiscount;
        public String secondItemNumber;
        public String unitOfMeasure;
        private String[] paymentTerms_type_info = new String[]{'paymentTerms','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] quantityOrdered_type_info = new String[]{'quantityOrdered','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] quantityFree_type_info = new String[]{'quantityFree','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ratePercentCashDiscount_type_info = new String[]{'ratePercentCashDiscount','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] secondItemNumber_type_info = new String[]{'secondItemNumber','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] unitOfMeasure_type_info = new String[]{'unitOfMeasure','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'paymentTerms','quantityOrdered','quantityFree','ratePercentCashDiscount','secondItemNumber','unitOfMeasure'};
    }
    public class priceCatalogueDetailsOutput {
        
        /**
         * Standard const, used in test to achivece coverage
         */
        public priceCatalogueDetailsOutput(){

        }

        public Decimal amountDiscountsAndCharges;
        public Decimal amountExcise;
        public Decimal amountExclusiveDiscountsAndCharges;
        public Decimal amountGross;
        public Decimal amountTax;
        public Decimal amountTaxable;
        public String description1;
        public String description2;
        public LAT_BR_PriceCalculation.discountAndChargeDetailsOutput[] discountAndChargeDetails;
        public Decimal exciseRate;
        public Integer itemNumberShort;
        public Integer ordinalNumber;
        public String paymentTerms;
        public Decimal quantityOrdered;
        public Decimal quantityFree;
        public Decimal ratePercentCashDiscount;
        public Decimal ratePercentDiscountsAndCharges;
        public String secondItemNumber;
        public Decimal taxRate;
        public Decimal unitPrice;
        public Decimal unitPriceExclusiveDiscountsAndCharges;
        public Decimal unitPriceGross;
        public String unitofMeasure;
        private String[] amountDiscountsAndCharges_type_info = new String[]{'amountDiscountsAndCharges','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] amountExcise_type_info = new String[]{'amountExcise','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] amountExclusiveDiscountsAndCharges_type_info = new String[]{'amountExclusiveDiscountsAndCharges','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] amountGross_type_info = new String[]{'amountGross','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] amountTax_type_info = new String[]{'amountTax','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] amountTaxable_type_info = new String[]{'amountTaxable','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] description1_type_info = new String[]{'description1','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] description2_type_info = new String[]{'description2','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] discountAndChargeDetails_type_info = new String[]{'discountAndChargeDetails','http://oracle.e1.bssv.JP56LA10/',null,'0','-1','true'};
        private String[] exciseRate_type_info = new String[]{'exciseRate','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] itemNumberShort_type_info = new String[]{'itemNumberShort','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ordinalNumber_type_info = new String[]{'ordinalNumber','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] paymentTerms_type_info = new String[]{'paymentTerms','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] quantityOrdered_type_info = new String[]{'quantityOrdered','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] quantityFree_type_info = new String[]{'quantityFree','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ratePercentCashDiscount_type_info = new String[]{'ratePercentCashDiscount','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ratePercentDiscountsAndCharges_type_info = new String[]{'ratePercentDiscountsAndCharges','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] secondItemNumber_type_info = new String[]{'secondItemNumber','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] taxRate_type_info = new String[]{'taxRate','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] unitPrice_type_info = new String[]{'unitPrice','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] unitPriceExclusiveDiscountsAndCharges_type_info = new String[]{'unitPriceExclusiveDiscountsAndCharges','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] unitPriceGross_type_info = new String[]{'unitPriceGross','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] unitofMeasure_type_info = new String[]{'unitofMeasure','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'amountDiscountsAndCharges','amountExcise','amountExclusiveDiscountsAndCharges','amountGross','amountTax','amountTaxable','description1','description2','discountAndChargeDetails','exciseRate','itemNumberShort','ordinalNumber','paymentTerms','quantityOrdered','quantityFree','ratePercentCashDiscount','ratePercentDiscountsAndCharges','secondItemNumber','taxRate','unitPrice','unitPriceExclusiveDiscountsAndCharges','unitPriceGross','unitofMeasure'};
    }
    
    public class priceCatalogueHeaderOutput {

        /**
         * Standard const, used in test to achivece coverage
         */
        public priceCatalogueHeaderOutput(){

        }

        public LAT_BR_PriceCalculation.e1MessageList e1MessageList;
        private String[] e1MessageList_type_info = new String[]{'e1MessageList','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        public LAT_BR_PriceCalculation.errorRecords[] errorRecords;
        private String[] errorRecords_type_info = new String[]{'errorRecords','http://oracle.e1.bssv.JP56LA10/',null,'0','-1','true'};
        public String businessUnit;
        public String company;
        public LAT_BR_PriceCalculation.priceCatalogueDetailsOutput[] priceCatalogueDetails;
        public Integer shipTo;
        public Integer soldTo;
        public String taxArea;
        public String taxExplanation;
        private String[] businessUnit_type_info = new String[]{'businessUnit','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] company_type_info = new String[]{'company','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] priceCatalogueDetails_type_info = new String[]{'priceCatalogueDetails','http://oracle.e1.bssv.JP56LA10/',null,'0','-1','true'};
        private String[] shipTo_type_info = new String[]{'shipTo','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] soldTo_type_info = new String[]{'soldTo','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] taxArea_type_info = new String[]{'taxArea','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] taxExplanation_type_info = new String[]{'taxExplanation','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'businessUnit','company','priceCatalogueDetails','shipTo','soldTo','taxArea','taxExplanation'};
        
    }
    public class priceCatalogueHeaderInput {
        public String businessUnit;
        public String company;
        public String currencyCode;
        public String ediTransactionType;
        public String paymentTerms;
        public LAT_BR_PriceCalculation.priceCatalogueDetailsInput[] priceCatalogueDetails;
        public DateTime priceEffectiveDate;
        public String processingVersion;
        public Integer shipTo;
        public Integer soldTo;
        public DateTime taxEffectiveDate;
        public LAT_BR_PriceCalculation.ClientInfoType ClientInfo;
        private String[] businessUnit_type_info = new String[]{'businessUnit','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] company_type_info = new String[]{'company','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] currencyCode_type_info = new String[]{'currencyCode','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ediTransactionType_type_info = new String[]{'ediTransactionType','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] paymentTerms_type_info = new String[]{'paymentTerms','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] priceCatalogueDetails_type_info = new String[]{'priceCatalogueDetails','http://oracle.e1.bssv.JP56LA10/',null,'0','-1','true'};
        private String[] priceEffectiveDate_type_info = new String[]{'priceEffectiveDate','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] processingVersion_type_info = new String[]{'processingVersion','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] shipTo_type_info = new String[]{'shipTo','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] soldTo_type_info = new String[]{'soldTo','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] taxEffectiveDate_type_info = new String[]{'taxEffectiveDate','http://oracle.e1.bssv.JP56LA10/',null,'0','1','false'};
        private String[] ClientInfo_type_info = new String[]{'ClientInfo','http://oracle.e1.bssv.JP56LA10/',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://oracle.e1.bssv.JP56LA10/','false','false'};
        private String[] field_order_type_info = new String[]{'businessUnit','company','currencyCode','ediTransactionType','paymentTerms','priceCatalogueDetails','priceEffectiveDate','processingVersion','shipTo','soldTo','taxEffectiveDate','ClientInfo'};
    }

    public class ClientInfoType {
        public String system_x;
        public String systemUserID;
        public String remoteHostIP;
        public String country;
        public DateTime time_x;
        private String[] system_x_type_info = new String[]{'system','http://www.pernod-ricard.com/soa/crm/commons/types',null,'1','1','false'};
        private String[] systemUserID_type_info = new String[]{'systemUserID','http://www.pernod-ricard.com/soa/crm/commons/types',null,'1','1','false'};
        private String[] remoteHostIP_type_info = new String[]{'remoteHostIP','http://www.pernod-ricard.com/soa/crm/commons/types',null,'1','1','false'};
        private String[] country_type_info = new String[]{'country','http://www.pernod-ricard.com/soa/crm/commons/types',null,'1','1','false'};
        private String[] time_x_type_info = new String[]{'time','http://www.pernod-ricard.com/soa/crm/commons/types',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://www.pernod-ricard.com/soa/crm/commons/types','true','false'};
        private String[] field_order_type_info = new String[]{'system_x','systemUserID','remoteHostIP','country','time_x'};
    }
    public class UsernameToken {
        public String Username;
        public String Password;

        public UsernameToken(String username, String password){
            this.Username = username;
            this.Password = password;
        }
        private String[] Username_type_info = new String[]{'Username','http://www.w3.org/2001/XMLSchema',null,'0','1','false'};
        private String[] Password_type_info = new String[]{'Password','http://www.w3.org/2001/XMLSchema',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd','true','false'};
        private String[] field_order_type_info = new String[]{'Username','Password'};
    }
    public class SecurityHeaderType  {       
            // Constructor for SecurityHeaderType used to pass in username and password parameters and instantiate the UsernameToken object     
            public SecurityHeaderType(String username, String password)
            {
                this.UsernameToken = new LAT_BR_PriceCalculation.UsernameToken(username, password);
            }

            public String wsuNamespace = 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';              
            public LAT_BR_PriceCalculation.UsernameToken UsernameToken;
            private String[] UsernameToken_type_info = new String[]{'UsernameToken','http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd','UsernameToken','1','1','false'};
            private String[] wsuNamespace_att_info = new String[]{'xmlns:wsu'};               
            private String[] apex_schema_type_info = new String[]{'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd','true','false'};
            private String[] field_order_type_info = new String[]{'UsernameToken'};
        }
    /**
     * SOAP Callout rest class 
     */
    public class PriceCatalogueManagerPort {
        
        public String endpoint_x; // = 'http://osbdev.pramericas.com/JDE9/Price/PricesCatalogManagerJDEProv';
        //public String endpoint_x = 'https://requestb.in/13zwzj81';
        public LAT_BR_PriceCalculation.SecurityHeaderType Security; 
        private String Security_hns = 'Security=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';    

        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://www.pernod-ricard.com/soa/crm/commons/types', 'LAT_MX_CommonsTypesSOA', 'http://oracle.e1.bssv.JP56LA10/', 'LAT_BR_PriceCalculation'};
        
        /**
         * Main Callout Method - send a list of procuducts with params, and get the pricing with it's taxes
         * @param businessUnit - payment unit
         * @param ediTransactionType - tends to be empty
         * @param paymentTerms 
         * @param priceCatalogueDetailsInput - sub products input request
         * @param shipto
         * @param soldTo
         * @param taxEffectiveDate
         * @param countryCode
         */
        public LAT_BR_PriceCalculation.priceCatalogueHeaderOutput getPriceCatalogue(String businessUnit,String ediTransactionType, String paymentTerms,LAT_BR_PriceCalculation.priceCatalogueDetailsInput[] priceCatalogueDetails,DateTime priceEffectiveDate, Integer shipTo,Integer soldTo,DateTime taxEffectiveDate,String countryCode) {
            LAT_BR_PriceCalculation.priceCatalogueHeaderInput request_x = new LAT_BR_PriceCalculation.priceCatalogueHeaderInput();
            system.debug('businessUnit++++' + businessUnit);
            request_x.businessUnit = businessUnit;
            request_x.ediTransactionType = ediTransactionType;
            request_x.paymentTerms = paymentTerms;
            request_x.priceCatalogueDetails = priceCatalogueDetails;
            request_x.priceEffectiveDate = priceEffectiveDate;
            request_x.shipTo = shipTo;
            request_x.soldTo = soldTo;
            request_x.taxEffectiveDate = taxEffectiveDate;
            timeout_x = 100000;
            CS001_JDEInterfaceCredentials__c cred = LAT_WS_Utils.getHeaderKey(countryCode);
            request_x.ClientInfo = getClientInfoData(cred);
            endpoint_x = cred.EndPoint_NewPriceCalculation__c;
            Security = new LAT_BR_PriceCalculation.SecurityHeaderType(cred.LAT_JDE_Username__c, cred.LAT_JDE_Password__c);
            request_x.processingVersion = cred.PriceCalcProcessingVersionParam__C;
            request_x.currencyCode = cred.PriceCalcCurrencyParam__c;
            request_x.company = cred.PriceCalcCompanyParam__c;
            system.debug(cred.MASHERY_HEADER_KEY__c);
            this.inputHttpHeaders_x = new Map <String, String>();
            //this.inputHttpHeaders_x.put('api_key',cred.MASHERY_HEADER_KEY__c);

            //endpoint_x = 'https://requestb.in/112utqj1';

            LAT_BR_PriceCalculation.priceCatalogueHeaderOutput response_x;
            Map<String, LAT_BR_PriceCalculation.priceCatalogueHeaderOutput> response_map_x = new Map<String, LAT_BR_PriceCalculation.priceCatalogueHeaderOutput>();
            response_map_x.put('response_x', response_x);
            system.debug('Price Calculation PriceReqx:' + request_x);
            if(!Test.isRunningTest()){
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://oracle.e1.bssv.JP56LA10/',
                  'getPriceCatalogue',
                  'http://oracle.e1.bssv.JP56LA10/',
                  'getPriceCatalogueResponse',
                  'LAT_BR_PriceCalculation.priceCatalogueHeaderOutput'}
                );
            }
            response_x = response_map_x.get('response_x');
            return response_x;
        }

        /**
         * Main Callout Method - send a list of procuducts with params, and get the pricing with it's taxes
         * @param businessUnit - payment unit
         * @param ediTransactionType - tends to be empty
         * @param paymentTerms 
         * @param priceCatalogueDetailsInput - sub products input request
         * @param shipto
         * @param soldTo
         * @param taxEffectiveDate
         * @param countryCode
         * @param orderType
         */
        public LAT_BR_PriceCalculation.priceCatalogueHeaderOutput getPriceCatalogue(String orderType, String businessUnit,String ediTransactionType, String paymentTerms,LAT_BR_PriceCalculation.priceCatalogueDetailsInput[] priceCatalogueDetails,DateTime priceEffectiveDate, Integer shipTo,Integer soldTo,DateTime taxEffectiveDate,String countryCode) {
            LAT_BR_PriceCalculation.priceCatalogueHeaderInput request_x = new LAT_BR_PriceCalculation.priceCatalogueHeaderInput();
            system.debug('businessUnit++++' + businessUnit);
            System.debug('%%%%%%%% entramos al getPriceCatalogue orderType : ' + orderType);
            System.debug('%%%%%%%% entramos al getPriceCatalogue countryCode : ' + countryCode);
            request_x.businessUnit = businessUnit;
            request_x.ediTransactionType = ediTransactionType;
            request_x.paymentTerms = paymentTerms;
            request_x.priceCatalogueDetails = priceCatalogueDetails;
            request_x.priceEffectiveDate = priceEffectiveDate;
            request_x.shipTo = shipTo;
            request_x.soldTo = soldTo;
            request_x.taxEffectiveDate = taxEffectiveDate;
            timeout_x = 100000;
            CS001_JDEInterfaceCredentials__c cred = LAT_WS_Utils.getHeaderKey(countryCode);
            request_x.ClientInfo = getClientInfoData(cred);
            endpoint_x = cred.EndPoint_NewPriceCalculation__c;
            Security = new LAT_BR_PriceCalculation.SecurityHeaderType(cred.LAT_JDE_Username__c, cred.LAT_JDE_Password__c);
            request_x.processingVersion = cred.PriceCalcProcessingVersionParam__C;

            String differentProcessingVersion = LAT_WS_Utils.getProcessingVersions(countryCode, orderType);
            if (differentProcessingVersion != 'NOT_FOUND') {
                System.debug('%%%%%%%% Se cambia la processingVersion : ' + differentProcessingVersion);
                request_x.processingVersion = differentProcessingVersion;
            }
            request_x.currencyCode = cred.PriceCalcCurrencyParam__c;
            request_x.company = cred.PriceCalcCompanyParam__c;
            system.debug(cred.MASHERY_HEADER_KEY__c);
            this.inputHttpHeaders_x = new Map <String, String>();
            //this.inputHttpHeaders_x.put('api_key',cred.MASHERY_HEADER_KEY__c);

            //endpoint_x = 'https://requestb.in/112utqj1';

            LAT_BR_PriceCalculation.priceCatalogueHeaderOutput response_x;
            Map<String, LAT_BR_PriceCalculation.priceCatalogueHeaderOutput> response_map_x = new Map<String, LAT_BR_PriceCalculation.priceCatalogueHeaderOutput>();
            response_map_x.put('response_x', response_x);
            system.debug('Price Calculation PriceReqx:' + request_x);
            
            if(!Test.isRunningTest()) {
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://oracle.e1.bssv.JP56LA10/',
                  'getPriceCatalogue',
                  'http://oracle.e1.bssv.JP56LA10/',
                  'getPriceCatalogueResponse',
                  'LAT_BR_PriceCalculation.priceCatalogueHeaderOutput'}
                );
            }
            response_x = response_map_x.get('response_x');
            return response_x;
        }
    }

    /**
     * Get connection type for the new sub class ClientInfo
     */
    public static ClientInfoType getClientInfoData(CS001_JDEInterfaceCredentials__c cred){
        LAT_BR_PriceCalculation.ClientInfoType connParms = new LAT_BR_PriceCalculation.ClientInfoType();
        if(cred!=null){
            connParms.country      = cred.Country__c;
            connParms.remoteHostIP = cred.RemoteHostIP__c;
            connParms.system_x     = cred.System__c;
            connParms.systemUserID = cred.SystemUserID__c;
            connParms.time_x       = Datetime.now();
        }
        return connParms;
    }
}