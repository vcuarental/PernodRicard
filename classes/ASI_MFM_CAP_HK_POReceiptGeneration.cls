/***************************************************************************************************************************
 * Name:        ASI_MFM_CAP_HK_POReceiptGeneration
 * Description: Class for Generate Payment in Detail button 
 *
 * Version History
 * Date             Developer               Comments
 * ---------------  --------------------    --------------------------------------------------------------------------------
 * 2018-10-23       Laputa:Hector           Created
 ****************************************************************************************************************************/
 public with sharing class ASI_MFM_CAP_HK_POReceiptGeneration {
    
    /* CAPEX/OPEX: 3-way matching
	    	Scope: RecordType = ASI_MFM_CAP_HK
	    	After Submit: Create PO Receipt and PO Receipt Line with PO information
	    					PO Receipt:
	    						Generated by PO
	    						PO Receipt Owner = Payment owner
	    						Status = Submitted
	    					PO Receipt Line:
	    						Generate by PO Line Item
	    	After Approval: Create Payment Line from PO Receipt Line
	    					Payment Line:
	    						Generate by PO Receipt Line
	*/
         
    public static List<ASI_MFM_PO_Receipt__c> GenerateHKPOReceiptFromPO (List<ASI_MFM_Payment__c> ListPaymentInput){
    	
        decimal receiptAmount = 0;
        
    	Map<id, ASI_MFM_PO_Receipt__c> newPaymentPOReceiptMap = new Map<id, ASI_MFM_PO_Receipt__c>();
    	List<ASI_MFM_PO_Receipt_Item__c> newPOReceiptLineItemList = new List<ASI_MFM_PO_Receipt_Item__c>();
    	//Get PO information from Payment
    	
    	Set<Id> POIdSet = new Set<Id>();
    	for (ASI_MFM_Payment__c payment:ListPaymentInput){
    		if (Global_RecordTypeCache.getRt(payment.RecordTypeId).developerName.contains('ASI_MFM_CAP') && payment.ASI_MFM_CAP_PO__c != null){
    			POIdSet.add(payment.ASI_MFM_CAP_PO__c);
                if(payment.ASI_MFM_Payment_Amount__c!=null){
                	receiptAmount = payment.ASI_MFM_Payment_Amount__c;   
                }
    		}
    	}
    	
    	Map<Id, ASI_MFM_PO__c> POMap = new Map<Id, ASI_MFM_PO__c>([SELECT Id, Name, ownerId,
							    										ASI_MFM_Currency__c,
							    										ASI_MFM_PO_Type__c
														    		FROM ASI_MFM_PO__c
							    									WHERE Id in :POIdSet]);
    									
    	//Create PO Receipt with PO Information
    	for (ASI_MFM_Payment__c payment : ListPaymentInput){
    		/*
    		system.debug('payment.Id:' + payment.Id);
	    	system.debug('payment.ASI_MFM_CAP_PO__c:' + payment.ASI_MFM_CAP_PO__c);
	    	system.debug('ASI_MFM_PO_Owner__c:' + POMap.get(payment.ASI_MFM_CAP_PO__c).ownerId);
	    	system.debug('ASI_MFM_PO_Type__c:' + POMap.get(payment.ASI_MFM_CAP_PO__c).ASI_MFM_PO_Type__c);
	    	*/
    		ASI_MFM_PO_Receipt__c newPOReceipt = new ASI_MFM_PO_Receipt__c(ASI_MFM_Remarks__c = 'Auto-created from ' + payment.Name,
    																		ASI_MFM_Status__c = 'Draft',
    																		ASI_MFM_Payment__c = payment.Id,
    																		ASI_MFM_PO__c = payment.ASI_MFM_CAP_PO__c,
    																		ASI_MFM_PO_Owner__c = POMap.get(payment.ASI_MFM_CAP_PO__c).ownerId,
    																		ASI_MFM_PO_Type__c = POMap.get(payment.ASI_MFM_CAP_PO__c).ASI_MFM_PO_Type__c,
    																		recordTypeId = Global_RecordTypeCache.getRtId('ASI_MFM_PO_Receipt__c'+'ASI_MFM_CAP_PO_Receipt'),
    																		ownerId = payment.ownerId);
    		newPaymentPOReceiptMap.put(payment.Id, newPOReceipt);
    	}
    	insert newPaymentPOReceiptMap.values();
    	
    	//Create PO Receipt Line from PO Line Item
    	List<ASI_MFM_PO_Line_Item__c> POLineItemList = 	[SELECT Id, 
    															ASI_MFM_A_C_Code__c,
    															ASI_MFM_Amount__c,
    															ASI_MFM_Currency__c,
    															ASI_MFM_List_Item_Description__c,
    															ASI_MFM_PO__c,
    															ASI_MFM_PO_Remark__c
    													FROM ASI_MFM_PO_Line_Item__c
    													WHERE ASI_MFM_PO__c in :POIdSet];
    	
    	for (ASI_MFM_PO_Receipt__c POReceipt : newPaymentPOReceiptMap.values()){
	    	for (ASI_MFM_PO_Line_Item__c POLineItem : POLineItemList){
	    		if (POReceipt.ASI_MFM_PO__c == POLineItem.ASI_MFM_PO__c){
	    			/*
                    system.debug('POReceipt.Id:' + POReceipt.Id);
	    			system.debug('POLineItem.Id:' + POLineItem.Id);
	    			system.debug('POLineItem.ASI_MFM_A_C_Code__c:' + POLineItem.ASI_MFM_A_C_Code__c);
	    			*/
	    			ASI_MFM_PO_Receipt_Item__c newPOReceiptLineItem = new ASI_MFM_PO_Receipt_Item__c(ASI_MFM_PO_Receipt__c = POReceipt.Id, 
	    																								ASI_MFM_PO_Line_Item__c = POLineItem.Id,
	    																								ASI_MFM_A_C_Code_temp__c = POLineItem.ASI_MFM_A_C_Code__c,
	    																								ASI_MFM_Amount__c = receiptAmount==0?POLineItem.ASI_MFM_Amount__c:receiptAmount,
	    																								ASI_MFM_PO_Remark__c = POLineItem.ASI_MFM_PO_Remark__c,
	    																								ASI_MFM_List_Item_Description_temp__c = POLineItem.ASI_MFM_List_Item_Description__c,
	    																								recordTypeId = Global_RecordTypeCache.getRtId('ASI_MFM_PO_Receipt_Item__c'+'ASI_MFM_CAP_PO_Receipt_Item'));
	    			newPOReceiptLineItemList.add(newPOReceiptLineItem);
	    			break;
	    		}
	    	}
    	}
    	insert newPOReceiptLineItemList;
    	
    	return newPaymentPOReceiptMap.values();
    }
}