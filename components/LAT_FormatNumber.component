<apex:component >
         
        <!-- ATRIBUTOS PARA MODIFICAR EL FORMATO -->
        <apex:attribute name="value"                  type="Decimal"  required="true"  description="value"/>
        <apex:attribute name="decimalQuantity"        type="Integer"  required="true"  description="decimal quantity"/>
        <apex:attribute name="decimalSeparated"       type="String"   required="false" description="decimal separator"/>
        <apex:attribute name="thousandsSeparator"     type="String"   required="false" description="thousands separator"/>
        <apex:attribute name="textOnNull"             type="String"   required="false" description="text on null"/>
        <apex:attribute name="currency"               type="String"   required="false" description="currency"/>
        <apex:attribute name="style"                    type="String"   required="false" description="style"/>
        <apex:attribute name="parenthesisOnNegative"  type="Boolean"  required="false" description="parenthesis on negative numbers"/>
        <apex:attribute name="withOutNegativeSign"    type="Boolean"  required="false" description="with out negative sign"/>
         
        <!-- GENERACION DEL NUMERO FORMATEADO -->
        <apex:panelGroup rendered="{!value!=null}" style="{!style}">
             
            <!-- CREACION DE VARIABLES -->
            <apex:variable var="ds" value="{!IF(decimalSeparated!=null,decimalSeparated,',')}"/>
            <apex:variable var="ts" value="{!IF(thousandsSeparator!=null,thousandsSeparator,'.')}"/>
            <apex:variable var="roundedValue" value="{!IF(value>=0, value, (-value))}"/>
             
            <!-- IMPRIMO PARENTESIS EN CASO DE SER ESPECIFICADO -->
            <apex:outputText value="(" rendered="{!value<0 && (parenthesisOnNegative)}"/>
 
            <!-- IMPRIMO CURRENCY EN CASO DE SER ESPECIFICADO -->
            <apex:panelGroup rendered="{!currency!=null}">
            	<apex:outputText value="{!currency}"/>
            	<apex:outputText value=" "/>
            </apex:panelGroup>
             
            <!-- IMPRIMO EL SIGNO NEGATIVO -->
            <apex:outputText value="-" rendered="{!value<0 && (!withOutNegativeSign)}"/>
             
            <!-- IMPRIMO LA PARTE ENTERA DEL NUMERO -->
            <apex:outputText value="{!floor(roundedValue/(10^16))}"                                     rendered="{!floor(roundedValue/(10^16))>0}"/>
            <apex:outputText value="{!floor(roundedValue/(10^15))-floor(roundedValue/(10^16))*10}{!ts}" rendered="{!floor(roundedValue/(10^15))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^14))-floor(roundedValue/(10^15))*10}"      rendered="{!floor(roundedValue/(10^14))>0}"/>
            <apex:outputText value="{!floor(roundedValue/(10^13))-floor(roundedValue/(10^14))*10}"      rendered="{!floor(roundedValue/(10^13))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^12))-floor(roundedValue/(10^13))*10}{!ts}" rendered="{!floor(roundedValue/(10^12))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^11))-floor(roundedValue/(10^12))*10}"      rendered="{!floor(roundedValue/(10^11))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^10))-floor(roundedValue/(10^11))*10}"      rendered="{!floor(roundedValue/(10^10))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^9))-floor(roundedValue/(10^10))*10}{!ts}"  rendered="{!floor(roundedValue/(10^9))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^8))-floor(roundedValue/(10^9))*10}"        rendered="{!floor(roundedValue/(10^8))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^7))-floor(roundedValue/(10^8))*10}"        rendered="{!floor(roundedValue/(10^7))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^6))-floor(roundedValue/(10^7))*10}{!ts}"   rendered="{!floor(roundedValue/(10^6))>0}"/>       
            <apex:outputText value="{!floor(roundedValue/(10^5))-floor(roundedValue/(10^6))*10}"        rendered="{!floor(roundedValue/(10^5))>0}"/>
            <apex:outputText value="{!floor(roundedValue/(10^4))-(floor(roundedValue/(10^5))*10)}"      rendered="{!floor(roundedValue/(10^4))>0}"/>
            <apex:outputText value="{!floor(roundedValue/(10^3))-(floor(roundedValue/(10^4))*10)}{!ts}" rendered="{!floor(roundedValue/(10^3))>0}"/>
            <apex:outputText value="{!floor(roundedValue/(10^2))-(floor(roundedValue/(10^3))*10)}"      rendered="{!floor(roundedValue/(10^2))>0}"/>
            <apex:outputText value="{!floor(roundedValue/10)-(floor(roundedValue/(10^2))*10)}"          rendered="{!floor(roundedValue/10)>0}"/>
            <apex:outputText value="{!floor(roundedValue)-(floor(roundedValue/10)*10)}"/>
             
            <!-- IMPRIMO EL SEPARADOR DECIMAL -->
            <apex:outputText value="{!ds}" rendered="{!decimalQuantity>0}"/>
             
            <!-- IMPRIMO LA PARTE DECIMAL DEL NUMERO -->
            <apex:outputText value="{!floor((roundedValue)/0.1)-(floor((roundedValue))*10)}"              rendered="{!decimalQuantity>0}"/>
            <apex:outputText value="{!floor((roundedValue)/0.01)-(floor((roundedValue)/0.1)*10)}"         rendered="{!decimalQuantity>1}"/>
            <apex:outputText value="{!floor((roundedValue)/0.001)-(floor((roundedValue)/0.01)*10)}"       rendered="{!decimalQuantity>2}"/>
            <apex:outputText value="{!floor((roundedValue)/0.0001)-(floor((roundedValue)/0.001)*10)}"     rendered="{!decimalQuantity>3}"/>
            <apex:outputText value="{!floor((roundedValue)/0.00001)-(floor((roundedValue)/0.0001)*10)}"   rendered="{!decimalQuantity>4}"/>
            <apex:outputText value="{!floor((roundedValue)/0.000001)-(floor((roundedValue)/0.00001)*10)}" rendered="{!decimalQuantity>5}"/>
             
            <!-- IMPRIMO PARENTESIS EN CASO DE SER ESPECIFICADO -->
            <apex:outputText value=")" rendered="{!value<0 && (parenthesisOnNegative)}"/>
             
        </apex:panelGroup>
         
        <!-- IMPRIMO EL VALOR POR NULO -->
        <apex:outputText value="{!IF(textOnNull!=null,textOnNull,'')}" rendered="{!value==null}"/>
         
</apex:component>