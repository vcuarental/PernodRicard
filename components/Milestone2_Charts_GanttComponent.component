<apex:component controller="Milestone2_Charts_GanttController">

    <apex:stylesheet value="{!URLFOR($Resource.Milestone1_PT_Resources_v1, 'css/jsgantt.css')}"/>

    <apex:includeScript value="{!$Resource.Milestone2_jsgantt}"/>

    <apex:attribute name="target" type="String" required="true" 
                    description="Id of parent object" assignTo="{!myTarget}" />   
    <apex:attribute name="size" type="String" required="true"
                    description="Default to day, week, month, or quarter format" assignTo="{!mySize}" /> 
    <apex:attribute name="options" type="String" required="false"
                    description="What options should we present to format gantt?" assignTo="{!myOptions}" />
    
    

    <div id="GanttChartDIV_{! myTarget }" style="background-color:white; position:relative"/>
    
    
           
    <script language="javascript">

    (function() {
        eval("var gantt" + "{! myTarget }" + ";");
        this['gantt' + "{! myTarget }"] = new JSGantt.GanttChart("gantt" + "{! myTarget }",document.getElementById("GanttChartDIV_{! myTarget }"), "{! mySize }", "{! myTarget }");
        var g = this['gantt' + "{! myTarget }"];
        var renderDiamond, completionRate, objType, childObjType;
        
        g.setShowRes(0); // Show/Hide Responsible (1/0)
        g.setShowDur(0); // Show/Hide Duration (1/0)
        g.setShowComp(0); // Show/Hide % Complete(1/0)
        g.setDateInputFormat("mm/dd/yyyy")
        g.setDateDisplayFormat("{! userDateFormat }");
        
        <apex:outputText rendered="{! (myOptions != null) }">
            g.setFormatArr("{! myOptions }");
        </apex:outputText>
       
        g.setCaptionType("None");  // Set to Show Caption (None,Caption,Resource,Duration,Complete)

        <apex:repeat value="{! taskItems }" var="item">
            objType = "{!objectType}";
            childObjType = "{!childObjectType}";

            renderDiamond = checkForSingleDayMilestone({!item[2]}, {!item[3]}, objType.indexOf("Milestone__c"));  
                      
            completionRate = getCompletionRate({!item[8]}); 
            
            g.AddTaskItem(new JSGantt.TaskItem(
                "{!item[0]}", "{!JSINHTMLENCODE(item[1])}", "{!item[2]}", "{!item[3]}", "{!item[4]}", "{!item[5]}", renderDiamond, "{!item[7]}",
                completionRate, {!item[9]}, {!item[10]}, {!item[11]}, "{!item[12]}"));

            if("{!item[9]}" == "1" && "{!item[7]}" != "1"){ //check if record has children

                 <apex:repeat value="{! childTaskItems }" var="child"> //loop through all of the children
                 
                    if("{!child[14]}" == "{!item[0]}"){ //check if child belongs to parent record being rendered
                    
                        renderDiamond = checkForSingleDayMilestone({!child[2]}, {!child[3]}, childObjType.indexOf("Milestone__c"));
                        
                        completionRate = getCompletionRate({!child[8]});
                              
                        g.AddTaskItem(new JSGantt.TaskItem(
                            "{!child[0]}", "{!JSINHTMLENCODE(child[1])}", "{!child[2]}", "{!child[3]}", "{!child[4]}", "{!child[5]}", renderDiamond, "{!child[7]}",
                            completionRate, {!child[9]}, {!child[10]}, {!child[11]}, "{!child[12]}", "{!child[13]}", "{!child[14]}"));
                    }

                 </apex:repeat>

            }

        </apex:repeat>
        
        g.Draw();
        g.DrawDependencies();
        
    })();
    
    //render diamond graphic if start and end dates are same and object is a milestone
    function checkForSingleDayMilestone(start, end, isMilestone){
    
        if(start == end && isMilestone != -1){
            return 1;
        }else{
            return 0;
        }
    
    }
    
    function getCompletionRate(compRate){
        if(compRate == 1){
           return 100;
        }else{
           return compRate;
        }
    }
    
    
    </script>

</apex:component>