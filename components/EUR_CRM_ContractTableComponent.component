<apex:component id="contractTableComponent" controller="EUR_CRM_ContractTableComponentController">
<apex:attribute name="componentKey" 
    description="Component identifier"  
    assignTo="{!key}" 
    type="String" 
    required="true"/>
    
<apex:attribute name="dataTableObj" 
    description="Received object of Generic table, defines properties of data table"  
    assignTo="{!dataTableProperties}" 
    type="EUR_CRM_GenericTable" 
    required="true"/>
    
<apex:attribute name="mainPageController" 
    description="Controller of main page"  
    assignTo="{!pageController}" 
    type="EUR_CRM_ContractBuilderCntAbstract" 
    required="false"/>
    
<apex:attribute name="rerenderComp" 
    description="Components to be rerendered on certain action"  
    assignTo="{!rerenderComponent}" 
    type="String" 
    required="false"/>
    
<apex:attribute name="name" 
    description="Mechanic Name"  
    assignTo="{!mechanicName}" 
    type="String" 
    required="false"/>
    
<link href="{!URLFOR($Resource.EUR_CRM_jQuery_DataTables, 'css/jquery.dataTables.css')}" media="screen" rel="stylesheet" type="text/css" />

<!--
<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/libs/jquery/js/jquery-1.9.1.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_jQuery_Lib, '/libs/jquery/js/jquery-ui-1.10.3.custom.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.EUR_CRM_jQuery_DataTables, 'js/jquery.dataTables.js')}"/>
-->

<script>  
    
    var aDataSet = [
        ['Trident','Internet Explorer 7','Win XP SP2+','7','A'],
        ['Trident','AOL browser (AOL desktop)','Win XP','6','A'],
        ['Gecko','Firefox 2.0','Win 98+ / OSX.2+','1.8','A'],
        ['Gecko','Camino 1.5','OSX.3+','1.8','A'],
        ['Gecko','Netscape 7.2','Win 95+ / Mac OS 8.6-9.2','1.7','A'],
        ['Gecko','Mozilla 1.8','Win 98+ / OSX.1+',1.8,'A'],
        ['Gecko','Seamonkey 1.1','Win 98+ / OSX.2+','1.8','A'],
        ['Gecko','Epiphany 2.20','Gnome','1.8','A'],
        ['Webkit','Safari 3.0','OSX.4+','522.1','A'],
        ['Webkit','OmniWeb 5.5','OSX.4+','420','A'],
        ['Webkit','iPod Touch / iPhone','iPod','420.1','A'],
        ['Webkit','S60','S60','413','A'],
        ['Presto','Opera 8.5','Win 95+ / OSX.2+','-','A'],
        ['Presto','Nintendo DS browser','Nintendo DS','8.5','C/A<sup>1</sup>'],
        ['KHTML','Konqureror 3.1','KDE 3.1','3.1','C'],
        ['KHTML','Konqureror 3.3','KDE 3.3','3.3','A'],
        ['Tasman','Internet Explorer 5.2','Mac OS 8-X','1','C'],
        ['Misc','NetFront 3.1','Embedded devices','-','C'],
        ['Other browsers','All others','-','-','U']
    ];
    
    var cols = [
        { "sTitle": "Engine" },
        { "sTitle": "Browser" },
        { "sTitle": "Platform" },
        { "sTitle": "Version", "sClass": "center" },
        { "sTitle": "Grade", "sClass": "center" }
    ];
    
    var oTable;
          
    $(document).ready(function() {
        //Arrange Column
        //
        //initContent();
        //setDataTable();
        
        var columns;
        console.log ("Set Data Table: {!dataTableObj.tableName}")
        //console.log('Flag - Check Actions:' + {!dataTableObj.hasAddAction}+'-'+{!dataTableObj.hasDeleteAction} + '-' + {!IF(OR(dataTableObj.hasAddAction, dataTableObj.hasDeleteAction), true, false)})
        if ({!dataTableObj.hasAddAction} || {!dataTableObj.hasDeleteAction}){
            var actionColumn = [{"sTitle": "Action"}];
            columns = actionColumn.concat({!columns});
        }else{
            var actionColumn = [{"sTitle":"Action", "sClass":"hiddenElement"}];
            columns = actionColumn.concat({!columns});
        }
        //console.log('Flag - Check Columns:' + columns);
        
        var sortStart = 1;
        if ({!dataTableObj.hasAddAction} || {!dataTableObj.hasDeleteAction}){
            sortStart = 1;
        }
        
        //$('#Container_{!dataTableObj.tableName}').html( '<table cellpadding="0" cellspacing="0" border="0" class="display" id="{!dataTableObj.tableName}"></table>' );
        oTable = $('#{!dataTableObj.tableName}').dataTable({
            "bDestroy":true,
            "bStateSave":true,
            "aaSorting": [[sortStart, "asc"]],
            "bSearch":{!dataTableObj.hasSearch},
            "iDisplayLength" : {!dataTableObj.defaultDisplayLength},
            "bFilter" : {!dataTableObj.hasFilter},
            "bPaginate " : {!dataTableObj.hasPagination},
            "aoColumns": columns
        });
        
    });
    
    function reloadDataTable(tableName){
        console.log('Reload DataTable - '+tableName);
        //$('#{!dataTableObj.tableName}').dataTable.fnReloadAjax();
        setDataTable(tableName);
    }
    
    function setDataTable(tableName){
        var columns;
        console.log ("Set Data Table: " + tableName)
        //console.log('Flag - Check Actions:' + {!dataTableObj.hasAddAction}+'-'+{!dataTableObj.hasDeleteAction} + '-' + {!IF(OR(dataTableObj.hasAddAction, dataTableObj.hasDeleteAction), true, false)})
        if ({!dataTableObj.hasAddAction} || {!dataTableObj.hasDeleteAction}){
            var actionColumn = [{"sTitle": "Action"}];
            columns = actionColumn.concat({!columns});
        }else{
            var actionColumn = [{"sTitle":"Action", "sClass":"hiddenElement"}];
            columns = actionColumn.concat({!columns});
        }
        //console.log('Flag - Check Columns:' + columns);
        
        var sortStart = 1;
        if ({!dataTableObj.hasAddAction} || {!dataTableObj.hasDeleteAction}){
            sortStart = 1;
        }
        
        //$('#Container_{!dataTableObj.tableName}').html( '<table cellpadding="0" cellspacing="0" border="0" class="display" id="{!dataTableObj.tableName}"></table>' );
        oTable = $('#'+tableName).dataTable({
            "bDestroy":true,
            "bStateSave":true,
            "aaSorting": [[sortStart, "asc"]],
            "bSearch":{!dataTableObj.hasSearch},
            "iDisplayLength" : {!dataTableObj.defaultDisplayLength},
            "bFilter" : {!dataTableObj.hasFilter},
            "bPaginate " : {!dataTableObj.hasPagination},
            "aoColumns": columns
        });
        
        /*var anotherDataTable = tableName.replace('ContractMechanicTable_','ContractLineItemTable_');
        $('#'+anotherDataTable).dataTable({
            "bDestroy":true,
            "bStateSave":true,
            "aaSorting": [[sortStart, "asc"]],
            "bSearch":{!dataTableObj.hasSearch},
            "iDisplayLength" : {!dataTableObj.defaultDisplayLength},
            "bFilter" : {!dataTableObj.hasFilter},
            "bPaginate " : {!dataTableObj.hasPagination},
            "aoColumns": columns
        });*/
                
    }

</script> 

<style>
    .hiddenElement{
        display:none;
        visibility:hidden;
    }
    .showElement{}
</style>

<apex:actionStatus id="idStatus">
    <apex:facet name="start">
        <apex:outputPanel styleClass="waitingSearchDiv"
            style="background: none repeat scroll 0 0 #FFFFFF; height: 100%; width: 98%; opacity: 0.7; filter: alpha(opacity = 70); 
            position: absolute; text-align: center; z-index: 200; padding-top: 50px; top:0; left:0; display:none;">
            <apex:outputPanel styleClass="waitingSearchDiv"
                style="width: 100%; height:100%; display:block;">
                <apex:outputPanel styleClass="waitingHolder"
                    style="top:150px; width:105px;">
                    <apex:image styleClass="waitingImage" url="/img/loading.gif" />
                    <apex:outputText styleClass="waitingDescription"
                        value=" Processing ..." />
                </apex:outputPanel>    
            </apex:outputPanel>
        </apex:outputPanel>
    </apex:facet>
</apex:actionStatus> 


    <apex:actionFunction action="{!initContent}" name="initContent" rerender="{!dataTableObj.tableName}">
    </apex:actionFunction>
    
    <apex:outputPanel id="ComponentContainer" layout="block">
    
    <table id="{!dataTableObj.tableName}">
        <script>
            console.log("RERENDER CHECK - {!BLANKVALUE(rerenderComp, 'emptyPanel')}");
            console.log("Table Component - {!dataTableObj.tableName} - Check Content: {!dataContent}" );
        </script>
        <apex:repeat value="{!dataContent}" var="rowItem">
        <apex:variable var="item" value="{!rowItem.sObj}"/>
            <tr>
                <td>
                    <apex:outputPanel rendered="{!IF(OR(dataTableObj.hasAddAction, dataTableObj.hasDeleteAction), true, false)}">
                        <apex:commandLink value="Add"
                            action="{!addContent}"
                            rerender="{!BLANKVALUE(rerenderComp, 'emptyPanel')}"
                            rendered="{!dataTableObj.hasAddAction}"
                            onClick="alert('Add Content: + {!dataTableObj.tableName} - {!rowItem.rowId}')"
                            onComplete="console.log ('Test onComplete - ADD: + {!dataTableObj.tableName}');"
                            status="idStatus">
                            <apex:param name="{!PARAM_ROWID}" value="{!rowItem.rowId}"/>
                        </apex:commandLink>
                        <apex:commandLink value="Remove"
                            action="{!removeContent}"
                            rerender="{!BLANKVALUE(rerenderComp, 'emptyPanel')}"
                            rendered="{!dataTableObj.hasDeleteAction}"
                            onComplete="console.log ('Test onComplete - REMOVE: + {!dataTableObj.tableName}');"
                            status="idStatus">
                            <apex:param name="{!PARAM_ROWID}" value="{!rowItem.rowId}"/>
                        </apex:commandLink>
                    </apex:outputPanel>
                </td>
                <apex:repeat value="{!dataTableObj.columnDetails}" var="col">
                    <td>
                        <apex:inputField value="{!item[col.columnKey]}" rendered="{!IF(col.isEditable,true,false)}"/>
                        <apex:outputField value="{!item[col.columnKey]}" rendered="{!IF(col.isEditable,false,true)}"/>
                    </td>
                </apex:repeat>
            </tr>
        </apex:repeat>
    </table>
    
    <apex:outputPanel id="emptyPanel"></apex:outputPanel>
    
  </apex:outputPanel>
</apex:component>